import{q as r,u as o,C as a,V as m}from"./main-O6VB82Ic.js";import{j as s,y as n}from"./LayerView-D-GY6OyK.js";import"./preload-helper-ExcqyqRp.js";import"./Container-BY98xpGF.js";import"./MapView-CtxA5DhL.js";import"./Cyclical-U5BnFzmR.js";import"./CollectionFlattener-SPVx_wo4.js";import"./workers-Cj1Wznrg.js";import"./projection-DbQejRMp.js";import"./projectBuffer-CaGD3s4Z.js";import"./TileInfo-B1Edezi4.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-CS4pwNYf.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-DK0Tjt1r.js";import"./signal-9yh6T2w5.js";import"./Map-BTl3lG50.js";import"./Basemap-CLiizk5D.js";import"./loadAll-X7d5dOBR.js";import"./PortalItem-DzyNDVFf.js";import"./writeUtils-DhRwnl5S.js";import"./compilerUtils-BciDHVUU.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-CCJbdwx8.js";import"./common-DQOJ18NT.js";import"./TablesMixin-CCPhkrAx.js";import"./Layer-DXStmIuC.js";import"./TimeExtent-CIh6UsC5.js";import"./GraphicsCollection-DiyKse8G.js";import"./HeightModelInfo-bHv3ESAm.js";import"./ReactiveMap-qeRcmPQI.js";import"./Query-RkliB8Xy.js";import"./Field-DvL4sxwq.js";import"./fieldType-U43eyGEe.js";import"./arcgisLayerUrl-C0bA3Jgp.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-B7N_6o8F.js";import"./vec2-DGVIkCvT.js";import"./Tile-Cs1BGf0V.js";import"./TileKey-Doa_Jev-.js";import"./QueueProcessor-CrdmeQyH.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-DJW2mH6e.js";import"./normalizeUtilsCommon-CrlW7Wut.js";import"./utils-D67lSJda.js";import"./utils-DxIwTTQr.js";import"./mat3-XZDRtl20.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-CD7V4dKv.js";import"./vec32-Bubxm285.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-C1yQk0I9.js";import"./imageUtils-hHeKo17K.js";import"./capabilities-A2uoe7dc.js";import"./Version-CvmHwGCf.js";import"./ColorBackground-D6QRJw8e.js";import"./parser-CJKFe9HM.js";import"./layerViewUtils-DaAy8D_L.js";const l=e=>{let t=class extends e{constructor(...i){super(...i),this.layerViews=new m}get dynamicGroupLayerView(){return this.layerViews.find(i=>i.layer===this.layer?.dynamicGroupLayer)}get footprintLayerView(){return this.layerViews.find(i=>i.layer===this.layer?.footprintLayer)}isUpdating(){return!this.dynamicGroupLayerView||!this.footprintLayerView||this.dynamicGroupLayerView.updating||this.footprintLayerView.updating}};return r([o()],t.prototype,"layer",void 0),r([o()],t.prototype,"layerViews",void 0),r([o({readOnly:!0})],t.prototype,"dynamicGroupLayerView",null),r([o({readOnly:!0})],t.prototype,"footprintLayerView",null),t=r([a("esri.views.layers.CatalogLayerView")],t),t};let p=class extends l(s(n)){constructor(){super(...arguments),this.layerViews=new m}update(e){}viewChange(){}moveEnd(){}attach(){this.addAttachHandles([this._updatingHandles.addOnCollectionChange(()=>this.layerViews,()=>this._updateStageChildren(),{initial:!0})])}detach(){this.container.removeAllChildren()}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((e,t)=>this.container.addChildAt(e.container,t))}};r([o()],p.prototype,"layerViews",void 0),p=r([a("esri.views.2d.layers.CatalogLayerView2D")],p);const Vt=p;export{Vt as default};
