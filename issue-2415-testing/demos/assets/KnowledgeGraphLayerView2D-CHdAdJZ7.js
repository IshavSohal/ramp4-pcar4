import{V as p,cZ as m,q as o,u as e,c_ as s,C as a}from"./main-v5l2v8Kk.js";import{j as n,y as l}from"./LayerView-BFKpBSey.js";import"./preload-helper-ExcqyqRp.js";import"./Container-B62YN-xb.js";import"./MapView-DEsZ67ci.js";import"./Cyclical-CY42LPg8.js";import"./CollectionFlattener-DCE6Vlgh.js";import"./workers-Dz0QPG3k.js";import"./projection-DCMrkRj8.js";import"./projectBuffer-Bjuk4LLM.js";import"./TileInfo-DYAGtVaO.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-B5v3Kh5P.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-CAsPxPe7.js";import"./signal-CpCMYZTb.js";import"./Map-hOopdN7h.js";import"./Basemap-DZl0fLgO.js";import"./loadAll-C_bNX4_b.js";import"./PortalItem-BIRKalr3.js";import"./writeUtils-BKwcnO3c.js";import"./compilerUtils-CRpjIXXc.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-BvQbTPGG.js";import"./common-DQOJ18NT.js";import"./TablesMixin-B_rIk8Ak.js";import"./Layer-cZJZBiNQ.js";import"./TimeExtent-CBFDS9JR.js";import"./GraphicsCollection-Cgy5PcF8.js";import"./HeightModelInfo-CSkC2Wzr.js";import"./ReactiveMap-BL2Ji1-A.js";import"./Query-CmVuu1aH.js";import"./Field-DR5f-iU0.js";import"./fieldType-WTdIfN5W.js";import"./arcgisLayerUrl-BjxE05QG.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-B7N_6o8F.js";import"./vec2-DGVIkCvT.js";import"./Tile-B_1R6T5T.js";import"./TileKey-Cnr84ULR.js";import"./QueueProcessor-BHQ0tM9-.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-BCAkrPqS.js";import"./normalizeUtilsCommon-nVk_ZXzU.js";import"./utils-MAm5MVX3.js";import"./utils-Ck06z2Ix.js";import"./mat3-XZDRtl20.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-D_GtOut-.js";import"./vec32-BgFQPD6k.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-DfYtZ9jN.js";import"./imageUtils-BazedYQ4.js";import"./capabilities-A2uoe7dc.js";import"./Version-C0DDfcCo.js";import"./ColorBackground-BuIczPLE.js";import"./parser-I8fwS0A0.js";import"./layerViewUtils-B5OhBJLR.js";let r=class extends n(l){constructor(t){super(t),this.layerViews=new p}set layerViews(t){this._set("layerViews",m(t,this._get("layerViews")))}get updatingProgress(){return this.layerViews.length===0?1:this.layerViews.reduce((t,i)=>t+i.updatingProgress,0)/this.layerViews.length}attach(){this._updateStageChildren(),this.addAttachHandles(this.layerViews.on("after-changes",()=>this._updateStageChildren()))}detach(){this.container.removeAllChildren()}update(t){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((t,i)=>this.container.addChildAt(t.container,i))}};o([e({cast:s})],r.prototype,"layerViews",null),o([e({readOnly:!0})],r.prototype,"updatingProgress",null),r=o([a("esri.views.2d.layers.KnowledgeGraphLayerView2D")],r);const wt=r;export{wt as default};
