import{q as r,u as o,C as a,V as m}from"./main-v5l2v8Kk.js";import{j as s,y as n}from"./LayerView-BFKpBSey.js";import"./preload-helper-ExcqyqRp.js";import"./Container-B62YN-xb.js";import"./MapView-DEsZ67ci.js";import"./Cyclical-CY42LPg8.js";import"./CollectionFlattener-DCE6Vlgh.js";import"./workers-Dz0QPG3k.js";import"./projection-DCMrkRj8.js";import"./projectBuffer-Bjuk4LLM.js";import"./TileInfo-DYAGtVaO.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-B5v3Kh5P.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-CAsPxPe7.js";import"./signal-CpCMYZTb.js";import"./Map-hOopdN7h.js";import"./Basemap-DZl0fLgO.js";import"./loadAll-C_bNX4_b.js";import"./PortalItem-BIRKalr3.js";import"./writeUtils-BKwcnO3c.js";import"./compilerUtils-CRpjIXXc.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-BvQbTPGG.js";import"./common-DQOJ18NT.js";import"./TablesMixin-B_rIk8Ak.js";import"./Layer-cZJZBiNQ.js";import"./TimeExtent-CBFDS9JR.js";import"./GraphicsCollection-Cgy5PcF8.js";import"./HeightModelInfo-CSkC2Wzr.js";import"./ReactiveMap-BL2Ji1-A.js";import"./Query-CmVuu1aH.js";import"./Field-DR5f-iU0.js";import"./fieldType-WTdIfN5W.js";import"./arcgisLayerUrl-BjxE05QG.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-B7N_6o8F.js";import"./vec2-DGVIkCvT.js";import"./Tile-B_1R6T5T.js";import"./TileKey-Cnr84ULR.js";import"./QueueProcessor-BHQ0tM9-.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-BCAkrPqS.js";import"./normalizeUtilsCommon-nVk_ZXzU.js";import"./utils-MAm5MVX3.js";import"./utils-Ck06z2Ix.js";import"./mat3-XZDRtl20.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-D_GtOut-.js";import"./vec32-BgFQPD6k.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-DfYtZ9jN.js";import"./imageUtils-BazedYQ4.js";import"./capabilities-A2uoe7dc.js";import"./Version-C0DDfcCo.js";import"./ColorBackground-BuIczPLE.js";import"./parser-I8fwS0A0.js";import"./layerViewUtils-B5OhBJLR.js";const l=e=>{let t=class extends e{constructor(...i){super(...i),this.layerViews=new m}get dynamicGroupLayerView(){return this.layerViews.find(i=>i.layer===this.layer?.dynamicGroupLayer)}get footprintLayerView(){return this.layerViews.find(i=>i.layer===this.layer?.footprintLayer)}isUpdating(){return!this.dynamicGroupLayerView||!this.footprintLayerView||this.dynamicGroupLayerView.updating||this.footprintLayerView.updating}};return r([o()],t.prototype,"layer",void 0),r([o()],t.prototype,"layerViews",void 0),r([o({readOnly:!0})],t.prototype,"dynamicGroupLayerView",null),r([o({readOnly:!0})],t.prototype,"footprintLayerView",null),t=r([a("esri.views.layers.CatalogLayerView")],t),t};let p=class extends l(s(n)){constructor(){super(...arguments),this.layerViews=new m}update(e){}viewChange(){}moveEnd(){}attach(){this.addAttachHandles([this._updatingHandles.addOnCollectionChange(()=>this.layerViews,()=>this._updateStageChildren(),{initial:!0})])}detach(){this.container.removeAllChildren()}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((e,t)=>this.container.addChildAt(e.container,t))}};r([o()],p.prototype,"layerViews",void 0),p=r([a("esri.views.2d.layers.CatalogLayerView2D")],p);const Vt=p;export{Vt as default};
