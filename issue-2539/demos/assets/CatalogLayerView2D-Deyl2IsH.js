import{q as r,u as o,C as a,V as m}from"./main-C_om2V46.js";import{j as s,y as n}from"./LayerView-SrFGIxAY.js";import"./preload-helper-ExcqyqRp.js";import"./Container-ejlVedkQ.js";import"./MapView-BLAnE-LK.js";import"./Cyclical-Do3VI-7w.js";import"./CollectionFlattener-BrhVEr_O.js";import"./workers-oN9xoKLD.js";import"./projection-BlzFftud.js";import"./projectBuffer-BYwqv8in.js";import"./TileInfo-DvHZ-pK8.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-CHniAXKv.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-dBDOPxFo.js";import"./signal-Cgd-PM1o.js";import"./Map-4plKcBPP.js";import"./Basemap-DqOyfarO.js";import"./loadAll-CWXX-tU4.js";import"./PortalItem-DCO2s8Bw.js";import"./writeUtils-DcQHuhU7.js";import"./compilerUtils-CzXUo4Bp.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-DngjryPf.js";import"./common-DQOJ18NT.js";import"./TablesMixin-DVexQCOp.js";import"./Layer-CqaLH5sl.js";import"./TimeExtent-DPSUlOB-.js";import"./GraphicsCollection-D6237pGP.js";import"./HeightModelInfo-0bM3CUdY.js";import"./ReactiveMap-DK32fK4F.js";import"./Query-DQgbVEXK.js";import"./Field-CUJinXZi.js";import"./fieldType-DTDZVw4u.js";import"./arcgisLayerUrl-teMXysNj.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-B7N_6o8F.js";import"./vec2-DGVIkCvT.js";import"./Tile-9Cgmi3rL.js";import"./TileKey-LbVFlcgl.js";import"./QueueProcessor-TnNsJKSZ.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-BzfCWBLY.js";import"./normalizeUtilsCommon-BK71eeeX.js";import"./utils-hscRdTcf.js";import"./utils-vY529wls.js";import"./mat3-XZDRtl20.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-DXS_DM9n.js";import"./vec32-CSPh82dz.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-8Z9OOteR.js";import"./imageUtils-DUWA5iDl.js";import"./capabilities-A2uoe7dc.js";import"./Version-C031IiAm.js";import"./ColorBackground-DImHY9c3.js";import"./parser-Db3iyQiF.js";import"./layerViewUtils-BAoVhGSr.js";const l=e=>{let t=class extends e{constructor(...i){super(...i),this.layerViews=new m}get dynamicGroupLayerView(){return this.layerViews.find(i=>i.layer===this.layer?.dynamicGroupLayer)}get footprintLayerView(){return this.layerViews.find(i=>i.layer===this.layer?.footprintLayer)}isUpdating(){return!this.dynamicGroupLayerView||!this.footprintLayerView||this.dynamicGroupLayerView.updating||this.footprintLayerView.updating}};return r([o()],t.prototype,"layer",void 0),r([o()],t.prototype,"layerViews",void 0),r([o({readOnly:!0})],t.prototype,"dynamicGroupLayerView",null),r([o({readOnly:!0})],t.prototype,"footprintLayerView",null),t=r([a("esri.views.layers.CatalogLayerView")],t),t};let p=class extends l(s(n)){constructor(){super(...arguments),this.layerViews=new m}update(e){}viewChange(){}moveEnd(){}attach(){this.addAttachHandles([this._updatingHandles.addOnCollectionChange(()=>this.layerViews,()=>this._updateStageChildren(),{initial:!0})])}detach(){this.container.removeAllChildren()}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((e,t)=>this.container.addChildAt(e.container,t))}};r([o()],p.prototype,"layerViews",void 0),p=r([a("esri.views.2d.layers.CatalogLayerView2D")],p);const Vt=p;export{Vt as default};
