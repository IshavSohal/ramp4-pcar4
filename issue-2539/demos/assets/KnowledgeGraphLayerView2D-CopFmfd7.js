import{V as p,cZ as m,q as o,u as e,c_ as s,C as a}from"./main-C_om2V46.js";import{j as n,y as l}from"./LayerView-SrFGIxAY.js";import"./preload-helper-ExcqyqRp.js";import"./Container-ejlVedkQ.js";import"./MapView-BLAnE-LK.js";import"./Cyclical-Do3VI-7w.js";import"./CollectionFlattener-BrhVEr_O.js";import"./workers-oN9xoKLD.js";import"./projection-BlzFftud.js";import"./projectBuffer-BYwqv8in.js";import"./TileInfo-DvHZ-pK8.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-CHniAXKv.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-dBDOPxFo.js";import"./signal-Cgd-PM1o.js";import"./Map-4plKcBPP.js";import"./Basemap-DqOyfarO.js";import"./loadAll-CWXX-tU4.js";import"./PortalItem-DCO2s8Bw.js";import"./writeUtils-DcQHuhU7.js";import"./compilerUtils-CzXUo4Bp.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-DngjryPf.js";import"./common-DQOJ18NT.js";import"./TablesMixin-DVexQCOp.js";import"./Layer-CqaLH5sl.js";import"./TimeExtent-DPSUlOB-.js";import"./GraphicsCollection-D6237pGP.js";import"./HeightModelInfo-0bM3CUdY.js";import"./ReactiveMap-DK32fK4F.js";import"./Query-DQgbVEXK.js";import"./Field-CUJinXZi.js";import"./fieldType-DTDZVw4u.js";import"./arcgisLayerUrl-teMXysNj.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-B7N_6o8F.js";import"./vec2-DGVIkCvT.js";import"./Tile-9Cgmi3rL.js";import"./TileKey-LbVFlcgl.js";import"./QueueProcessor-TnNsJKSZ.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-BzfCWBLY.js";import"./normalizeUtilsCommon-BK71eeeX.js";import"./utils-hscRdTcf.js";import"./utils-vY529wls.js";import"./mat3-XZDRtl20.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-DXS_DM9n.js";import"./vec32-CSPh82dz.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-8Z9OOteR.js";import"./imageUtils-DUWA5iDl.js";import"./capabilities-A2uoe7dc.js";import"./Version-C031IiAm.js";import"./ColorBackground-DImHY9c3.js";import"./parser-Db3iyQiF.js";import"./layerViewUtils-BAoVhGSr.js";let r=class extends n(l){constructor(t){super(t),this.layerViews=new p}set layerViews(t){this._set("layerViews",m(t,this._get("layerViews")))}get updatingProgress(){return this.layerViews.length===0?1:this.layerViews.reduce((t,i)=>t+i.updatingProgress,0)/this.layerViews.length}attach(){this._updateStageChildren(),this.addAttachHandles(this.layerViews.on("after-changes",()=>this._updateStageChildren()))}detach(){this.container.removeAllChildren()}update(t){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((t,i)=>this.container.addChildAt(t.container,i))}};o([e({cast:s})],r.prototype,"layerViews",null),o([e({readOnly:!0})],r.prototype,"updatingProgress",null),r=o([a("esri.views.2d.layers.KnowledgeGraphLayerView2D")],r);const wt=r;export{wt as default};
