import{V as p,cZ as m,q as o,u as e,c_ as s,C as a}from"./main-BZlIv7KM.js";import{j as n,y as l}from"./LayerView-BBfhMowS.js";import"./preload-helper-ExcqyqRp.js";import"./Container-Du_6TUhi.js";import"./MapView-BsEfnu4X.js";import"./Cyclical-OY3tUbjn.js";import"./CollectionFlattener-D6CXOwJv.js";import"./workers-LQgJB_E_.js";import"./projection-i_d37wu5.js";import"./projectBuffer-BLI8PKcs.js";import"./TileInfo-BEm7pTK2.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-BpniLVNW.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-Buhnj0Ra.js";import"./signal-C_qg_RN8.js";import"./Map-Dc0DQy8H.js";import"./Basemap-BaKxjwDH.js";import"./loadAll-CTqXCtu8.js";import"./PortalItem-wJk55Omf.js";import"./writeUtils-JIuLJ2go.js";import"./compilerUtils-CGdxQN01.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-kJMCLyZC.js";import"./common-DQOJ18NT.js";import"./TablesMixin-BjHHCed1.js";import"./Layer-DQcOISTa.js";import"./TimeExtent-DNJ1GW2u.js";import"./GraphicsCollection-D60j2GkB.js";import"./HeightModelInfo-MBUU988f.js";import"./ReactiveMap-CaUbABP-.js";import"./Query-DSy46x_u.js";import"./Field-DcbMNP7u.js";import"./fieldType-DQkOO4TD.js";import"./arcgisLayerUrl-PkF9qO--.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-B7N_6o8F.js";import"./vec2-DGVIkCvT.js";import"./Tile-DiyLpDLd.js";import"./TileKey-B7_3M5sJ.js";import"./QueueProcessor-BWQf7rwY.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-BCZPio5s.js";import"./normalizeUtilsCommon-MHTcpPec.js";import"./utils-DM_FYVd1.js";import"./utils-B9yAeXyc.js";import"./mat3-XZDRtl20.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-yr1EIfdO.js";import"./vec32-Dh9YfROv.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-DCk2tKBR.js";import"./imageUtils-D446krro.js";import"./capabilities-A2uoe7dc.js";import"./Version-CWtf1o_O.js";import"./ColorBackground-CoOqRYve.js";import"./parser-GwIyYMLx.js";import"./layerViewUtils-kFMjNvfA.js";let r=class extends n(l){constructor(t){super(t),this.layerViews=new p}set layerViews(t){this._set("layerViews",m(t,this._get("layerViews")))}get updatingProgress(){return this.layerViews.length===0?1:this.layerViews.reduce((t,i)=>t+i.updatingProgress,0)/this.layerViews.length}attach(){this._updateStageChildren(),this.addAttachHandles(this.layerViews.on("after-changes",()=>this._updateStageChildren()))}detach(){this.container.removeAllChildren()}update(t){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((t,i)=>this.container.addChildAt(t.container,i))}};o([e({cast:s})],r.prototype,"layerViews",null),o([e({readOnly:!0})],r.prototype,"updatingProgress",null),r=o([a("esri.views.2d.layers.KnowledgeGraphLayerView2D")],r);const wt=r;export{wt as default};
