import{V as p,cZ as m,q as o,u as e,c_ as s,C as a}from"./main-I5OitWBP.js";import{j as n,y as l}from"./LayerView-D8WzCS72.js";import"./preload-helper-ExcqyqRp.js";import"./Container-Bsbk0ZRZ.js";import"./MapView-DXYWL6VP.js";import"./Cyclical-bLSc16pw.js";import"./CollectionFlattener-Dg8oI1th.js";import"./workers-DquSBZpO.js";import"./projection-B4_TWTAT.js";import"./projectBuffer-6NPDEO2G.js";import"./TileInfo-CD-BO-Wz.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-SlEHXsjK.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-D4xxLd6j.js";import"./signal-hBuAIOXv.js";import"./Map-osvkCavA.js";import"./Basemap-CaNkgHB1.js";import"./loadAll-LpxEDvk8.js";import"./PortalItem-DzALBT9b.js";import"./writeUtils-AQvsYkto.js";import"./compilerUtils-C76XP-3O.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-CijiDGv7.js";import"./common-DQOJ18NT.js";import"./TablesMixin-Cs9l4bgF.js";import"./Layer-DkjhINTN.js";import"./TimeExtent-CqbYfiXv.js";import"./GraphicsCollection-B5hn_5Hu.js";import"./HeightModelInfo-BSfuIFRj.js";import"./ReactiveMap-BuhG2QAG.js";import"./Query-DatHBWcO.js";import"./Field-CCiRoltZ.js";import"./fieldType-D026Ciym.js";import"./arcgisLayerUrl-CYzJKxq4.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-B7N_6o8F.js";import"./vec2-DGVIkCvT.js";import"./Tile-km6DwRYx.js";import"./TileKey-r0f1_Gm7.js";import"./QueueProcessor-SnlKxMiM.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-C9UQwiOL.js";import"./normalizeUtilsCommon-CCpp9Wh6.js";import"./utils-DSg6MLy_.js";import"./utils-Cl1PJ-NB.js";import"./mat3-XZDRtl20.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-r9VT0h2Q.js";import"./vec32-1Mrp3Foo.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-ytqcJ3TE.js";import"./imageUtils-BE8px72F.js";import"./capabilities-A2uoe7dc.js";import"./Version-DI_35dAG.js";import"./ColorBackground-Cew_H13D.js";import"./parser-CWhIQyvL.js";import"./layerViewUtils-CW4-5d5z.js";let r=class extends n(l){constructor(t){super(t),this.layerViews=new p}set layerViews(t){this._set("layerViews",m(t,this._get("layerViews")))}get updatingProgress(){return this.layerViews.length===0?1:this.layerViews.reduce((t,i)=>t+i.updatingProgress,0)/this.layerViews.length}attach(){this._updateStageChildren(),this.addAttachHandles(this.layerViews.on("after-changes",()=>this._updateStageChildren()))}detach(){this.container.removeAllChildren()}update(t){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((t,i)=>this.container.addChildAt(t.container,i))}};o([e({cast:s})],r.prototype,"layerViews",null),o([e({readOnly:!0})],r.prototype,"updatingProgress",null),r=o([a("esri.views.2d.layers.KnowledgeGraphLayerView2D")],r);const wt=r;export{wt as default};
