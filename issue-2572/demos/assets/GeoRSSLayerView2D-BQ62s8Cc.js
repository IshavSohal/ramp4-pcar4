import{aO as l,dh as h,V as g,b9 as f,B as w,N as d}from"./main-BzrPS9ps.js";import{p as n}from"./SimpleRenderer-P8O_Y1US.js";import{fromJSON as u}from"./jsonUtils-CY7Njn-K.js";import{d as b}from"./FeatureSet-BzhG01M7.js";import{S,y as V}from"./LayerView-CD70PxIG.js";import{t as _}from"./GraphicContainer-BJUl4OtQ.js";import{A as T}from"./GraphicsView2D-YH334dgH.js";import"./preload-helper-ExcqyqRp.js";import"./commonProperties-CWhLgglq.js";import"./colorRamps-ClPics_E.js";import"./ColorStop-C4NORpMQ.js";import"./visualVariableUtils-DnJV5gmF.js";import"./lengthUtils-COi0ZRrs.js";import"./typeUtils-Ce7OrkCJ.js";import"./ClassBreaksRenderer-DJJPSu6_.js";import"./RendererLegendOptions-N0iykYJa.js";import"./LRUCache-Bo0sXgMN.js";import"./MemCache-wpZxgzga.js";import"./Version-BYRTfZDC.js";import"./FieldsIndex-z-bU1NW1.js";import"./timeZoneUtils-CwbFjBwN.js";import"./utils-DiTELdsc.js";import"./defaultCIMValues-GRvMfJPa.js";import"./enums-CD-fX3vU.js";import"./heatmapUtils-Duwfpz_y.js";import"./vec42-CKs01hkn.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./UniqueValueRenderer-D9lxEp9n.js";import"./styleUtils-C2MZMU8-.js";import"./Field-Cnu4Q95F.js";import"./fieldType--5Ofvjs0.js";import"./Container-jy4Fi_C3.js";import"./MapView-CAm1cxV2.js";import"./Cyclical-DY-2C8vN.js";import"./CollectionFlattener-C3ajzwPX.js";import"./workers-oTWsZW0v.js";import"./Queue-D-ve-NIM.js";import"./intl-BwCluHOf.js";import"./projection-BrJn3jZa.js";import"./projectBuffer-C-y1usGb.js";import"./TileInfo-BaLJZAhe.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-tXGn5N2M.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-C4LkphxM.js";import"./signal-CJBTNEjj.js";import"./Map-DIIUxuXo.js";import"./Basemap-C0uN_Ba4.js";import"./loadAll-uIFEjoqZ.js";import"./PortalItem-CmwUCFom.js";import"./writeUtils-DmbSitBT.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-BU-bdZEI.js";import"./TablesMixin-M17wlrm9.js";import"./Layer-Dx8vJCHY.js";import"./TimeExtent-46TNl0XW.js";import"./GraphicsCollection-mQQqlnnt.js";import"./HeightModelInfo-DPLOFZ51.js";import"./ReactiveMap-BRs2Ox8e.js";import"./Query-C0gvFNUO.js";import"./HighlightDefaults-DOLeeMiI.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./Tile-D01LQJHl.js";import"./TileKey-Dopy0mS_.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-qi8j2obk.js";import"./normalizeUtilsCommon-LzJE2KPI.js";import"./utils-D7cFhi-N.js";import"./utils-BV6vfcmn.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-BU5x_NJS.js";import"./vec32-BKIqLMFz.js";import"./unitBezier-B1N-tmtC.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-Bx09OAFq.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-R5N61v06.js";import"./capabilities-Du2wdNlQ.js";import"./ColorBackground-YICRW4MK.js";import"./parser-BhaRosyh.js";import"./layerViewUtils-QvyDWdjV.js";import"./AGraphicContainer-B-mw5nTQ.js";import"./TechniqueInstance-B2SuSx09.js";import"./UpdateTracking2D-CNzwNLPG.js";import"./BidiEngine-DNnuvc1i.js";import"./OptimizedFeature-Bvo2_jKY.js";import"./memoryEstimations-D08VA19Z.js";import"./GeometryUtils-CL4VpL42.js";import"./rasterizingUtils-BolDQhZK.js";import"./floatRGBA-txfOBENW.js";import"./Rect-CUzevAry.js";import"./Utils-DOst5CMe.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./FramebufferObject-DAR6lj7x.js";import"./VertexArrayObject-D2ZYe09D.js";import"./TileContainer-DsdLtbsL.js";import"./WGLContainer-CX6unUWn.js";import"./ProgramTemplate-BHSH_py1.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-Bp1wY35y.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-COudkyc6.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-B_yiqjDd.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-CN4d6A_a.js";import"./ShaderBuilder-BBLOpj8P.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-q2eZ8FOb.js";import"./OverrideHelper-BnOw4Ak2.js";import"./colorUtils-Cv4-kP9Z.js";import"./quantizationUtils-CnkyR-eb.js";import"./AttributeStore-CY9570y-.js";import"./labelUtils-BbnxHR21.js";import"./queryUtils-cAanGSLR.js";import"./json-Wa8cmqdu.js";import"./timeSupport-B1-qFlvx.js";import"./TimeOnly-1f_RU7uF.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-DzBDqgWZ.js";import"./dehydratedFeatures-DKIC_1Rb.js";let y=class extends S(V){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(t,o){if(!this.graphicsViews.length)return null;const p=this.layer;return this.graphicsViews.reverse().flatMap(r=>{const i=this._popupTemplates.get(r),e=r.hitTest(t);for(const m of e)m.layer=p,m.sourceLayer=p,m.popupTemplate=i;return e}).map(r=>({type:"graphic",graphic:r,layer:p,mapPoint:t}))}update(t){if(this.graphicsViews)for(const o of this.graphicsViews)o.processUpdate(t)}attach(){this.addAttachHandles([l(()=>this.layer?.featureCollections,t=>{this._clear();for(const{popupInfo:o,featureSet:p,layerDefinition:r}of t){const i=b.fromJSON(p),e=new g(i.features),m=r.drawingInfo,c=o?f.fromJSON(o):null,s=u(m.renderer),a=new T({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:e,renderer:s,container:new _(this.view.featuresTilingScheme)});this._graphicsViewMap[i.geometryType]=a,this._popupTemplates.set(a,c),i.geometryType!=="polygon"||this.layer.polygonSymbol?i.geometryType!=="polyline"||this.layer.lineSymbol?i.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=s.symbol):this.layer.lineSymbol=s.symbol:this.layer.polygonSymbol=s.symbol,this.graphicsViews.push(a),this.container.addChild(a.container)}},h),l(()=>this.layer?.polygonSymbol,t=>{this._graphicsViewMap.polygon.renderer=new n({symbol:t})},h),l(()=>this.layer?.lineSymbol,t=>{this._graphicsViewMap.polyline.renderer=new n({symbol:t})},h),l(()=>this.layer?.pointSymbol,t=>{this._graphicsViewMap.point.renderer=new n({symbol:t})},h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const t of this.graphicsViews)t.viewChange()}_clear(){this.container.removeAllChildren();for(const t of this.graphicsViews)t.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=w([d("esri.views.2d.layers.GeoRSSLayerView2D")],y);const Ri=y;export{Ri as default};
