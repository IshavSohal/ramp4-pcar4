const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./FeatureLayer-SwHsoZYP.js","./preload-helper-ExcqyqRp.js","./main-BzrPS9ps.js","./main-gKmidBZg.css","./MultiOriginJSONSupport-C89trBfP.js","./layerContainerType-C5CzMsLd.js","./FeatureLayerBase-CDCeUsXz.js","./Field-Cnu4Q95F.js","./fieldType--5Ofvjs0.js","./HeightModelInfo-DPLOFZ51.js","./commonProperties-CCwarbMI.js","./ElevationInfo-B0fVz4Uj.js","./lengthUtils-COi0ZRrs.js","./timeZoneUtils-CwbFjBwN.js","./labelingInfo-BAAbrnu0.js","./uuid-Cl5lrJ4c.js","./Query-C0gvFNUO.js","./TimeExtent-46TNl0XW.js","./SimpleRenderer-P8O_Y1US.js","./commonProperties-CWhLgglq.js","./colorRamps-ClPics_E.js","./ColorStop-C4NORpMQ.js","./visualVariableUtils-DnJV5gmF.js","./UniqueValueRenderer-D9lxEp9n.js","./defaultCIMValues-GRvMfJPa.js","./enums-CD-fX3vU.js","./RendererLegendOptions-N0iykYJa.js","./styleUtils-C2MZMU8-.js","./RelationshipQuery-BIXOvdKx.js","./NormalizationBinParametersMixin-5KnGAMwx.js","./labelUtils-BbnxHR21.js","./LayerFloorInfo-B2pr7kS0.js","./Relationship-dwQGBj3w.js","./serviceCapabilitiesUtils-DeuDQDGa.js","./infoFor3D-DhzudQro.js","./Layer-Dx8vJCHY.js","./workers-oTWsZW0v.js","./Queue-D-ve-NIM.js","./intl-BwCluHOf.js","./editsZScale-Rsg9bAlj.js","./queryZScale-BoZSBxAz.js","./projection-BrJn3jZa.js","./projectBuffer-C-y1usGb.js","./FeatureSet-BzhG01M7.js","./APIKeyMixin-z9In5VGF.js","./ArcGISService-OrWn1cGF.js","./BlendLayer-Bx8-b1kq.js","./jsonUtils-BLSWEWNd.js","./parser-BhaRosyh.js","./mat4f32-DcsiF_Rp.js","./mat4-BU-bdZEI.js","./common-DQOJ18NT.js","./CustomParametersMixin-D0f-fw44.js","./DisplayFilteredLayer-Dww8ENcw.js","./scaleUtils-CzIu_Q9i.js","./displayFilterUtils-Du_lYX6A.js","./EditBusLayer-KgqOr_Qt.js","./FeatureEffectLayer-B8oUM1Wi.js","./FeatureEffect-DTAKE5Yd.js","./FeatureFilter-BY5cmJlT.js","./FeatureReductionLayer-B-XAF5PL.js","./FeatureReductionSelection-Cy6fMc6I.js","./jsonUtils-CY7Njn-K.js","./typeUtils-Ce7OrkCJ.js","./ClassBreaksRenderer-DJJPSu6_.js","./LRUCache-Bo0sXgMN.js","./MemCache-wpZxgzga.js","./Version-BYRTfZDC.js","./FieldsIndex-z-bU1NW1.js","./utils-DiTELdsc.js","./heatmapUtils-Duwfpz_y.js","./vec42-CKs01hkn.js","./vec4f64-o2zAXfmz.js","./MD5-C9MwAd2G.js","./OperationalLayer-Bqy8IP0E.js","./OrderedLayer-DH0iUx2N.js","./OrderByInfo-Ck13k68D.js","./PortalLayer-BzSoVOSH.js","./PortalItem-CmwUCFom.js","./portalItemUtils-ClZlf653.js","./RefreshableLayer-0bYtzGhK.js","./ScaleRangeLayer-uYcNvWYj.js","./TemporalLayer-DDBSSP_f.js","./TimeInfo-CXkxs2X3.js","./TrackableLayer-B5IviYNA.js","./FeatureTemplate-BsZVjOtm.js","./FeatureType-CIRNxtjw.js","./fieldProperties-DroYtr7j.js","./TitleCreator-Bu7uGGXE.js","./versionUtils-B-MJ8c2A.js","./styleUtils-DNC3tXNK.js","./popupUtils-C4gIdzmb.js","./interfaces-CL2NbQte.js"])))=>i.map(i=>d[i]);
import{_ as L}from"./preload-helper-ExcqyqRp.js";import{c0 as N,s as a,B as d,D as y,N as w,cC as k,n as c,fC as O,L as v,a4 as x,b8 as E,O as P}from"./main-BzrPS9ps.js";import{o as C}from"./projection-BrJn3jZa.js";import{c as b}from"./query-CMEgJwgt.js";import{b as $}from"./Query-C0gvFNUO.js";import"./projectBuffer-C-y1usGb.js";import"./normalizeUtils-qi8j2obk.js";import"./normalizeUtilsCommon-LzJE2KPI.js";import"./utils-D7cFhi-N.js";import"./utils-BV6vfcmn.js";import"./pbfQueryUtils-BAUAjzbz.js";import"./pbf-BSvssRIL.js";import"./memoryEstimations-D08VA19Z.js";import"./OptimizedFeature-Bvo2_jKY.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./queryZScale-BoZSBxAz.js";import"./Field-Cnu4Q95F.js";import"./fieldType--5Ofvjs0.js";import"./TimeExtent-46TNl0XW.js";let m=class extends N.EventedAccessor{destroy(){this.emit("destroy")}get connectionError(){return this.errorString?new a("stream-connection",this.errorString):null}onFeature(e){this.emit("data-received",e)}onMessage(e){this.emit("message-received",e)}};d([y({readOnly:!0})],m.prototype,"connectionError",null),m=d([w("esri.layers.support.StreamConnection")],m);const F=m;var g;(function(e){e[e.CONNECTING=0]="CONNECTING",e[e.OPEN=1]="OPEN",e[e.CLOSING=2]="CLOSING",e[e.CLOSED=3]="CLOSED"})(g||(g={}));let f=class extends F{constructor(t){super({}),this._outstandingMessages=[],this.errorString=null;const{geometryType:r,spatialReference:o,sourceSpatialReference:s}=t;this._config=t,this._featureZScaler=C(r,s,o),this._open()}normalizeCtorArgs(){return{}}async _open(){await this._tryCreateWebSocket(),this.destroyed||await this._handshake()}destroy(){super.destroy(),this._websocket!=null&&(this._websocket.onopen=null,this._websocket.onclose=null,this._websocket.onerror=null,this._websocket.onmessage=null,this._websocket.close()),this._websocket=null}get connectionStatus(){if(this._websocket==null)return"disconnected";switch(this._websocket.readyState){case g.CONNECTING:case g.OPEN:return"connected";case g.CLOSING:case g.CLOSED:return"disconnected"}}sendMessageToSocket(t){this._websocket!=null?this._websocket.send(JSON.stringify(t)):this._outstandingMessages.push(t)}sendMessageToClient(t){this._onMessage(t)}updateCustomParameters(t){this._config.customParameters=t,this._websocket!=null&&this._websocket.close()}async _tryCreateWebSocket(t=this._config.source.path,r=1e3,o=0){try{if(this.destroyed)return;const s=k(t,this._config.customParameters??{});this._websocket=await this._createWebSocket(s),this.notifyChange("connectionStatus")}catch(s){const n=r/1e3;return this._config.maxReconnectionAttempts&&o>=this._config.maxReconnectionAttempts?(c.getLogger(this).error(new a("websocket-connection","Exceeded maxReconnectionAttempts attempts. No further attempts will be made")),void this.destroy()):(c.getLogger(this).error(new a("websocket-connection",`Failed to connect. Attempting to reconnect in ${n}s`,s)),await O(r),this._tryCreateWebSocket(t,Math.min(1.5*r,1e3*this._config.maxReconnectionInterval),o+1))}}_setWebSocketJSONParseHandler(t){t.onmessage=r=>{try{const o=JSON.parse(r.data);this._onMessage(o)}catch(o){return void c.getLogger(this).error(new a("websocket-connection","Failed to parse message, invalid JSON",{error:o}))}}}_createWebSocket(t){return new Promise((r,o)=>{const s=new WebSocket(t);s.onopen=()=>{if(s.onopen=null,this.destroyed)return s.onclose=null,void s.close();s.onclose=n=>this._onClose(n),s.onerror=n=>this._onError(n),this._setWebSocketJSONParseHandler(s),r(s)},s.onclose=n=>{s.onopen=s.onclose=null,o(n)}})}async _handshake(t=1e4){const r=this._websocket;if(r==null)return;const o=v(),s=r.onmessage,{filter:n,outFields:u,spatialReference:l}=this._config;return o.timeout(t),r.onmessage=h=>{let i=null;try{i=JSON.parse(h.data)}catch{}i&&typeof i=="object"||(c.getLogger(this).error(new a("websocket-connection","Protocol violation. Handshake failed - malformed message",h.data)),o.reject(),this.destroy()),i.spatialReference?.wkid!==l?.wkid&&(c.getLogger(this).error(new a("websocket-connection",`Protocol violation. Handshake failed - expected wkid of ${l.wkid}`,h.data)),o.reject(),this.destroy()),i.format!=="json"&&(c.getLogger(this).error(new a("websocket-connection","Protocol violation. Handshake failed - format is not set",h.data)),o.reject(),this.destroy()),n&&i.filter!==n&&c.getLogger(this).error(new a("websocket-connection","Tried to set filter, but server doesn't support it")),u&&i.outFields!==u&&c.getLogger(this).error(new a("websocket-connection","Tried to set outFields, but server doesn't support it")),r.onmessage=s;for(const p of this._outstandingMessages)r.send(JSON.stringify(p));this._outstandingMessages=[],o.resolve()},r.send(JSON.stringify({filter:n,outFields:u,format:"json",spatialReference:{wkid:l.wkid}})),o.promise}_onMessage(t){if(this.onMessage(t),"type"in t)switch(t.type){case"features":case"featureResult":for(const r of t.features)this._featureZScaler!=null&&this._featureZScaler(r.geometry),this.onFeature(r)}}_onError(t){const r="Encountered an error over WebSocket connection";this._set("errorString",r),c.getLogger(this).error("websocket-connection",r)}_onClose(t){this._websocket=null,this.notifyChange("connectionStatus"),t.code!==1e3&&c.getLogger(this).error("websocket-connection",`WebSocket closed unexpectedly with error code ${t.code}`),this.destroyed||this._open()}};d([y()],f.prototype,"connectionStatus",null),d([y()],f.prototype,"errorString",void 0),f=d([w("esri.layers.graphics.sources.connections.WebSocketConnection")],f);const M=1e4,W={maxQueryDepth:5,maxRecordCountFactor:3};let S=class extends f{constructor(e){super({...W,...e}),this._buddyServicesQuery=null,this._relatedFeatures=null}async _open(){const e=await this._fetchServiceDefinition(this._config.source);e.timeInfo.trackIdField||c.getLogger(this).warn("GeoEvent service was configured without a TrackIdField. This may result in certain functionality being disabled. The purgeOptions.maxObservations property will have no effect.");const t=this._fetchWebSocketUrl(e.streamUrls,this._config.spatialReference);this._buddyServicesQuery||(this._buddyServicesQuery=this._queryBuddyServices()),await this._buddyServicesQuery,await this._tryCreateWebSocket(t);const{filter:r,outFields:o}=this._config;this.destroyed||this._setFilter(r,o)}_onMessage(e){if("attributes"in e){let t;try{t=this._enrich(e),this._featureZScaler!=null&&this._featureZScaler(t.geometry)}catch(r){return void c.getLogger(this).error(new a("geoevent-connection","Failed to parse message",r))}this.onFeature(t)}else this.onMessage(e)}async _fetchServiceDefinition(e){const t={f:"json",...this._config.customParameters},r=x(e.path,{query:t,responseType:"json"}),o=(await r).data;return this._serviceDefinition=o,o}_fetchWebSocketUrl(e,t){const r=e[0],{urls:o,token:s}=r,n=this._inferWebSocketBaseUrl(o);return k(`${n}/subscribe`,{outSR:""+t.wkid,token:s})}_inferWebSocketBaseUrl(e){if(e.length===1)return e[0];for(const t of e)if(t.includes("wss"))return t;return c.getLogger(this).error(new a("geoevent-connection","Unable to infer WebSocket url",e)),null}async _setFilter(e,t){const r=this._websocket;if(r==null||e==null&&t==null)return;const o=JSON.stringify({filter:this._serializeFilter(e,t)});let s=!1;const n=v(),u=()=>{s||(this.destroyed||this._websocket!==r||c.getLogger(this).error(new a("geoevent-connection","Server timed out when setting filter")),n.reject())},l=h=>{const i=JSON.parse(h.data);i.filter&&(i.error&&(c.getLogger(this).error(new a("geoevent-connection","Failed to set service filter",i.error)),this._set("errorString",`Could not set service filter - ${i.error}`),n.reject(i.error)),this._setWebSocketJSONParseHandler(r),s=!0,n.resolve())};return r.onmessage=l,r.send(o),setTimeout(u,M),n.promise}_serializeFilter(e,t){const r={};if(e==null&&t==null)return r;if(e?.geometry)try{const o=E(e.geometry);if(o.type!=="extent")throw new a(`Expected extent but found type ${o.type}`);r.geometry=JSON.stringify(o.shiftCentralMeridian())}catch(o){c.getLogger(this).error(new a("geoevent-connection","Encountered an error when setting connection geometryDefinition",o))}return e?.where&&e.where!=="1 = 1"&&e.where!=="1=1"&&(r.where=e.where),t!=null&&(r.outFields=t.join(",")),r}_enrich(e){if(!this._relatedFeatures)return e;const t=this._serviceDefinition.relatedFeatures.joinField,r=e.attributes[t],o=this._relatedFeatures.get(r);if(!o)return c.getLogger(this).warn("geoevent-connection","Feature join failed. Is the join field configured correctly?",e),e;const{attributes:s,geometry:n}=o;for(const u in s)e.attributes[u]=s[u];return n&&(e.geometry=n),e.geometry||e.centroid||c.getLogger(this).error(new a("geoevent-connection","Found malformed feature - no geometry found",e)),e}async _queryBuddyServices(){try{const{relatedFeatures:e,keepLatestArchive:t}=this._serviceDefinition,r=this._queryRelatedFeatures(e),o=this._queryArchive(t);await r;const s=await o;if(!s)return;for(const n of s.features)this.onFeature(this._enrich(n))}catch(e){c.getLogger(this).error(new a("geoevent-connection","Encountered an error when querying buddy services",{error:e}))}}async _queryRelatedFeatures(e){if(!e)return;const t=await this._queryBuddy(e.featuresUrl);this._addRelatedFeatures(t)}async _queryArchive(e){if(e)return this._queryBuddy(e.featuresUrl)}async _queryBuddy(e){const t=new(await L(async()=>{const{default:R}=await import("./FeatureLayer-SwHsoZYP.js");return{default:R}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92]),import.meta.url)).default({url:e}),{capabilities:r}=await t.load(),o=r.query.supportsMaxRecordCountFactor,s=r.query.supportsPagination,n=r.query.supportsCentroid,u=this._config.maxRecordCountFactor,l=t.capabilities.query.maxRecordCount,h=o?l*u:l,i=new $;if(i.outFields=this._config.outFields??["*"],i.where=this._config.filter?.where??"1=1",i.returnGeometry=!0,i.returnExceededLimitFeatures=!0,i.outSpatialReference=P.fromJSON(this._config.spatialReference),n&&(i.returnCentroid=!0),o&&(i.maxRecordCountFactor=u),s)return i.num=h,t.destroy(),this._queryPages(e,i);const p=await b(e,i,this._config.sourceSpatialReference);return t.destroy(),p.data}async _queryPages(e,t,r=[],o=0){t.start=t.num!=null?o*t.num:null;const{data:s}=await b(e,t,this._config.sourceSpatialReference);return s.exceededTransferLimit&&o<(this._config.maxQueryDepth??0)?(s.features.forEach(n=>r.push(n)),this._queryPages(e,t,r,o+1)):(r.forEach(n=>s.features.push(n)),s)}_addRelatedFeatures(e){const t=new Map,r=e.features,o=this._serviceDefinition.relatedFeatures.joinField;for(const s of r){const n=s.attributes[o];t.set(n,s)}this._relatedFeatures=t}};S=d([w("esri.layers.graphics.sources.connections.GeoEventConnection")],S);const T=S;let _=class extends F{constructor(e){super({}),this.connectionStatus="connected",this.errorString=null;const{geometryType:t,spatialReference:r,sourceSpatialReference:o}=e;this._featureZScaler=C(t,o,r)}normalizeCtorArgs(){return{}}updateCustomParameters(e){}sendMessageToSocket(e){}sendMessageToClient(e){if("type"in e)switch(e.type){case"features":case"featureResult":for(const t of e.features)this._featureZScaler!=null&&this._featureZScaler(t.geometry),this.onFeature(t)}this.onMessage(e)}};d([y()],_.prototype,"connectionStatus",void 0),d([y()],_.prototype,"errorString",void 0),_=d([w("esri.layers.support.ClientSideConnection")],_);function q(e,t){if(e==null&&t==null)return null;const r={};return t!=null&&(r.geometry=t),e!=null&&(r.where=e),r}function se(e,t,r,o,s,n,u,l,h){const i={source:e,sourceSpatialReference:t,spatialReference:r,geometryType:o,filter:q(s,n),maxReconnectionAttempts:u,maxReconnectionInterval:l,customParameters:h};return e?e.path.startsWith("wss://")||e.path.startsWith("ws://")?new f(i):new T(i):new _(i)}export{se as createConnection};
