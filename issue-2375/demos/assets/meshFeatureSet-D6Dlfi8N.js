import{bj as h,by as y,a1 as d,aY as S,_ as N,c6 as D,c7 as l,G as M}from"./main-DFK8jSbu.js";import{$ as g}from"./Mesh-Bi-ZOOPm.js";import{N as w,o as F,i as T}from"./MeshTransform-pjJj-2Mn.js";import"./preload-helper-ExcqyqRp.js";import"./imageUtils-DQUK3jRk.js";import"./MeshVertexAttributes-Cwd8DGa7.js";import"./MeshLocalVertexSpace-pEBTS0z9.js";import"./meshVertexSpaceUtils-DDiFCYF9.js";import"./earcut-hEbqLwXm.js";import"./DoubleArray-4aYsOW9A.js";import"./Indices-BApqJ_jg.js";import"./plane-DNt1QyR-.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-CSKppSlJ.js";import"./quatf64-Bdb9ZJJK.js";import"./deduplicate--iQIF3Ph.js";import"./projection-GzeXKBbO.js";import"./spatialReferenceEllipsoidUtils-DRDp9obx.js";import"./computeTranslationToOriginAndRotation-DJAc2PK0.js";import"./BufferView-CEl8sR5b.js";import"./vec3-C7Bs7UPg.js";import"./vec4-vJ-WKNIY.js";import"./vertexSpaceConversion-jg6Wm_0v.js";import"./quat-Di6-uQ_H.js";const I=()=>M.getLogger("esri.rest.support.meshFeatureSet");function ot(t,e,r){const n=r.features;r.features=[],delete r.geometryType;const o=h.fromJSON(r);if(o.geometryType="mesh",!r.assetMaps)return o;const s=x(e,r.assetMaps),i=t.sourceSpatialReference??y.WGS84,c=r.globalIdFieldName,{outFields:a}=t,m=a!=null&&a.length>0?b(a.includes("*")?null:new Set(a)):()=>({});for(const u of n){const p=L(u,c,i,e,s);o.features.push(new d({geometry:p,attributes:m(u)}))}return o}function b(t){return({attributes:e})=>{if(!e)return{};if(!t)return e;for(const r in e)t.has(r)||delete e[r];return e}}function L(t,e,r,n,o){const s=t.attributes[e],i=o.get(s);if(i==null||!t.geometry)return null;const c=O(t,r,n),a=S.fromJSON(t.geometry);a.spatialReference=r;const m=$(t.attributes,n),u=r.isGeographic?"local":"georeferenced",p=A(i);return p?g.createWithExternalSource(c,p,{extent:a,transform:m,vertexSpace:u}):g.createIncomplete(c,{extent:a,transform:m,vertexSpace:u})}function O({attributes:t},e,{transformFieldRoles:r}){const n=t[r.originX],o=t[r.originY],s=t[r.originZ];return new N({x:n,y:o,z:s,spatialReference:e})}function $(t,{transformFieldRoles:e}){return new w({translation:[t[e.translationX],-t[e.translationZ],t[e.translationY]],rotationAxis:[t[e.rotationX],-t[e.rotationZ],t[e.rotationY]],rotationAngle:t[e.rotationDeg],scale:[t[e.scaleX],t[e.scaleZ],t[e.scaleY]]})}var f;function x(t,e){const r=new Map;for(const n of e){const o=n.parentGlobalId;if(o==null)continue;const s=n.assetName,i=n.assetType,c=n.assetHash,a=n.assetURL,m=n.conversionStatus,u=n.seqNo,p=D(i,t.supportedFormats);if(!p){I().error("mesh-feature-set:unknown-format",`Service returned an asset of type ${i}, but it does not list it as a supported type`);continue}const E=l(r,o,()=>({files:new Map}));l(E.files,s,()=>({name:s,type:i,mimeType:p,status:P(m),parts:[]})).parts[u]={hash:c,url:a}}return r}function A(t){const e=Array.from(t.files.values()),r=new Array;for(const n of e){if(n.status!==f.COMPLETED)return null;const o=new Array;for(const s of n.parts){if(!s)return null;o.push(new F(s.url,s.hash))}r.push(new T(n.name,n.mimeType,o))}return r}function P(t){switch(t){case"COMPLETED":case"SUBMITTED":return f.COMPLETED;case"INPROGRESS":return f.PENDING;default:return f.FAILED}}(function(t){t[t.FAILED=0]="FAILED",t[t.PENDING=1]="PENDING",t[t.COMPLETED=2]="COMPLETED"})(f||(f={}));export{x as assetMapFromAssetMapsJSON,L as extractMesh,ot as meshFeatureSetFromJSON};
