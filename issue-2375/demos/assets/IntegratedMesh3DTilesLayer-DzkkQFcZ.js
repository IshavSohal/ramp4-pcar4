import{e0 as N,dO as V,dP as z,dQ as U,dR as j,e1 as X,e2 as k,by as b,aY as A,e3 as $,aq as u,dl as G,dp as p,e4 as _,dk as I,cc as E,cs as L,e5 as M,e6 as S,e7 as h,s as P,A as R,U as W,G as T,bb as m,bc as f,e8 as q,dV as F,bd as K,d$ as O,ap as g}from"./main-DFK8jSbu.js";import{$ as D,Z as Q,w as Y}from"./elevationInfoUtils-BCaW7B1K.js";import"./preload-helper-ExcqyqRp.js";let y=class extends N(V(z(U(j(X(k(O))))))){constructor(i){super(i),this.operationalLayerType="IntegratedMesh3DTilesLayer",this.spatialReference=new b({wkid:4326,vcsWkid:115700}),this.fullExtent=new A(-180,-90,180,90,this.spatialReference),this.url=null,this.type="integrated-mesh-3dtiles",this.path=null,this.minScale=0,this.maxScale=0}set elevationInfo(i){this._set("elevationInfo",i),this._validateElevationInfo()}_verifyArray(i,a){if(!Array.isArray(i)||i.length<a)return!1;for(const o of i)if(typeof o!="number")return!1;return!0}_initFullExtent(i){const a=i.root?.boundingVolume;if(!a)return;if(a.box){const t=a?.box;if(t[3]>7972671&&t[7]>7972671&&t[11]>7945940)return}const o=i.root?.transform,x=g();if(a.region&&this._verifyArray(a.region,6)){const t=a.region,l=$(t[0]),n=$(t[1]),s=t[4],r=$(t[2]),e=$(t[3]),d=t[5];this.fullExtent=new A({xmin:l,ymin:n,zmin:s,xmax:r,ymax:e,zmax:d,spatialReference:this.spatialReference})}else if(a.sphere&&this._verifyArray(a.sphere,4)){const t=a.sphere,l=u(t[0],t[1],t[2]),n=t[3]/Math.sqrt(3),s=g();G(s,l,u(n,n,n));const r=g();if(p(r,l,u(n,n,n)),o&&this._verifyArray(o,16)){const v=o;_(x,s,v),I(s,x),_(x,r,v),I(r,x)}E(s,L,0,s,b.WGS84,0,1),E(r,L,0,r,b.WGS84,0,1);const e=g(),d=g();M(e,s,r),S(d,s,r),this.fullExtent=new A({xmin:e[0],ymin:e[1],zmin:e[2],xmax:d[0],ymax:d[1],zmax:d[2],spatialReference:this.spatialReference})}else if(a.box&&this._verifyArray(a.box,12)){const t=a.box,l=u(t[0],t[1],t[2]),n=u(t[3],t[4],t[5]),s=u(t[6],t[7],t[8]),r=u(t[9],t[10],t[11]),e=[];for(let c=0;c<8;++c)e.push(g());if(p(e[0],l,n),p(e[0],e[0],s),p(e[0],e[0],r),h(e[1],l,n),p(e[1],e[1],s),p(e[1],e[1],r),p(e[2],l,n),h(e[2],e[2],s),p(e[2],e[2],r),h(e[3],l,n),h(e[3],e[3],s),p(e[3],e[3],r),p(e[4],l,n),p(e[4],e[4],s),h(e[4],e[4],r),h(e[5],l,n),p(e[5],e[5],s),h(e[5],e[5],r),p(e[6],l,n),h(e[6],e[6],s),h(e[6],e[6],r),h(e[7],l,n),h(e[7],e[7],s),h(e[7],e[7],r),o&&this._verifyArray(o,16)){const c=o;for(let w=0;w<8;++w)_(e[w],e[w],c)}const d=u(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE),v=u(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE);for(let c=0;c<8;++c)E(e[c],L,0,e[c],b.WGS84,0,1),M(v,v,e[c]),S(d,d,e[c]);this.fullExtent=new A({xmin:v[0],ymin:v[1],zmin:v[2],xmax:d[0],ymax:d[1],zmax:d[2],spatialReference:this.spatialReference})}}async load(i){return this.addResolvingPromise(this._doLoad(i)),this}async _doLoad(i){const a=i!=null?i.signal:null;try{await this.loadFromPortal({supportedTypes:["3DTiles Service"],validateItem:o=>{if(o.typeKeywords?.includes("IntegratedMesh"))return!0;throw new P("portal:invalid-layer-item-type","Invalid layer item, expected '${expectedType}' ",{expectedType:"3DTiles Service containing IntegratedMesh"})}},i)}catch(o){R(o)}this.url&&await W(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:a}).then(x=>{this._initFullExtent(x.data)},x=>{R(x)})}async fetchAttributionData(){return this.load().then(()=>({}))}_validateElevationInfo(){const i=this.elevationInfo,a="Integrated mesh 3d tiles layers";D(T.getLogger(this),Q(a,"absolute-height",i)),D(T.getLogger(this),Y(a,i))}};m([f({type:["IntegratedMesh3DTilesLayer"]})],y.prototype,"operationalLayerType",void 0),m([f({type:b})],y.prototype,"spatialReference",void 0),m([f({type:A})],y.prototype,"fullExtent",void 0),m([f(q)],y.prototype,"elevationInfo",null),m([f({type:["show","hide"]})],y.prototype,"listMode",void 0),m([f(F)],y.prototype,"url",void 0),m([f({readOnly:!0})],y.prototype,"type",void 0),m([f({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],y.prototype,"path",void 0),m([f({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:!1,write:!1}}}})],y.prototype,"minScale",void 0),m([f({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:!1,write:!1}}}})],y.prototype,"maxScale",void 0),y=m([K("esri.layers.IntegratedMesh3DTilesLayer")],y);const H=y;export{H as default};
