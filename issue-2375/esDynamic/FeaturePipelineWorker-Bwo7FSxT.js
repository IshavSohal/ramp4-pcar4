import{qc as ce,N as ue,nj as Ue,cP as le,bz as _e,cR as ss,c$ as rs,lK as We,cU as Ge,qd as $,qe as is,bv as M,d0 as Ne,d4 as A,hM as ns,qf as as,qg as os,d5 as x,j$ as P,bo as hs,qh as ds,k4 as cs,b5 as us,b8 as ls,kT as Be,d$ as Ve,m0 as $e,qi as _s,c_ as ps,p2 as Y,ac as I,ov as Ye,f6 as pe,Z as Xe,dm as W,f0 as Qe,eJ as gs,eY as fs,eX as ys,O as j,P as X,Q as Ze,dH as He,S as ge,qj as ms,qk as Is,s as E,iB as bs,mY as ws,D as vs,ql as Ss,mv as Je,ju as Ke,qm as et,qn as xs,eH as Q,jT as Z,jU as ks,kZ as tt,aP as Fs,eI as st,qo as rt,qp as it,a2 as Cs,lO as Ts,f8 as Ms,F as qs,cN as Es,hJ as Os,qq as Rs,ag as As}from"./main-C02UbYD7.js";import{a as S}from"./definitions-Doe0g1C2.js";import{n as nt,M as fe,p as ye,c as at,i as me,d as Ps,a as js,b as Ds,e as Ls,f as zs}from"./AttributeStore-DjaXxfNc.js";import{o as Us}from"./tileUtils-DrLrf-3T.js";import{r as Ws,W as Gs}from"./MeshWriterRegistry-B6cRyTw8.js";import{x as Ns,j as H}from"./timeSupport-DcKTEMQo.js";import{o as Bs,$ as ot}from"./QueryEngine-B4KCZ8Q_.js";import{$ as ht}from"./ogcFeatureUtils-CS1B0lJo.js";import{t as dt}from"./CircularArray-DaQg3PQl.js";import{createConnection as Vs}from"./createConnection-Bf1bzTnD.js";import{d as $s}from"./UpdateTracking2D-Dbow3jYu.js";let Ys=class{constructor(r){this._client=r,this.layerView=this._client.createInvokeProxy(""),this.container=this._client.createInvokeProxy("container"),this._eventLog=this._client.createInvokeProxy("eventLog")}onEvent(r){ce(this._eventLog.onEvent(r))}};const J=1,Ie=2,K=4,be=8,we=16,ee=32,ve=64,te=128;function Se(r){switch(r){case J:case be:case ee:return-1;case Ie:case ve:return 0;case K:case we:case te:return 1}}function xe(r){switch(r){case J:case Ie:case K:return-1;case be:case we:return 0;case ee:case ve:case te:return 1}}const ct=J|be|ee,ut=K|we|te,lt=J|Ie|K,_t=ee|ve|te;let Xs=class{constructor(r,e,t,s=0){this.tileKey=r,this._bufferingEnabled=e,this._sizeHint=s,this._meshes={self:new nt(this.id,this._sizeHint),neighbors:new Array},this._currentRecordOverlaps=0,this._currentEntityOverlaps=0,this._copyBufferedDataIntoSelf=t&&this._bufferingEnabled&&r.level===0}get id(){return this.tileKey.id}vertexCount(){return this._meshes.self.vertexCount()}indexCount(){return this._meshes.self.indexCount()}indexEnsureSize(r){this._meshes.self.indexEnsureSize(r)}entityStart(r,e=r){this._currentEntityOverlaps=0,this._meshes.self.entityStart(r,e)}entityRecordCount(){return this._meshes.self.entityRecordCount()}entityEnd(){if(this._meshes.self.entityEnd(),this._bufferingEnabled){if(this._copyBufferedDataIntoSelf)return;for(let r=0;r<8;r++){const e=1<<r;this._currentEntityOverlaps&e&&this._meshes.neighbors[r].entityEnd()}}}recordStart(r,e,t){this._currentRecordOverlaps=0,this._meshes.self.recordStart(r,e,t)}recordEnd(r=0){const e=this._meshes.self.recordEnd(this._currentRecordOverlaps);return e&&this._currentRecordOverlaps!==0?(this._copyIntoNeighbors(),this._currentEntityOverlaps|=this._currentRecordOverlaps,!0):e}recordBounds(r,e,t,s){this._bufferingEnabled&&this._addOverlap(r,e,t,s)}recordCount(){return this._meshes.self.recordCount()}metricStart(r){this._meshes.self.metricStart(r)}metricBoxWrite(r){this._meshes.self.metricBoxWrite(r)}metricEnd(){this._meshes.self.metricEnd()}vertexWrite(r){this._meshes.self.vertexWrite(r)}vertexWriteF32(r){this._meshes.self.vertexWriteF32(r)}vertexWriteRegion(r){this._meshes.self.vertexWriteRegion(r)}indexWrite(r){this._meshes.self.indexWrite(r)}serialize(r){const e={message:[],transferList:[]},t=this._meshes.self.serialize();return e.message.push({tileId:this.tileKey.id,...t.message}),e.transferList.push(...t.transferList),this._meshes.neighbors.forEach((s,i)=>{const n=s.serialize(),a=1<<i,o=Se(a),h=xe(a),d=Us(new ue(this.tileKey),o,h,r);e.message.push({tileId:d.id,...n.message}),e.transferList.push(...n.transferList)}),e}_addOverlap(r,e,t,s){const i=Math.min(S/2,t),n=Math.min(S/2,s),a=255^((r<0+i?ut:r>=S-i?ct:ut|ct)|(e<0+n?_t:e>=S-n?lt:_t|lt));this._currentRecordOverlaps|=a}_copyIntoNeighbors(){for(let r=0;r<8;r++){const e=1<<r;if(this._currentRecordOverlaps&e){if(this._copyBufferedDataIntoSelf){const n=-Se(e)*S,a=-xe(e)*S;if(a!==0)continue;this._meshes.self.copyLast(n,a);continue}if(!this._meshes.neighbors[r]){const n=Math.floor(this._sizeHint/16);this._meshes.neighbors[r]=new nt(e,n)}const t=this._meshes.neighbors[r],s=-Se(e)*S,i=-xe(e)*S;t.copyLastFrom(this._meshes.self,s,i)}}}},Qs=class{},O=class Pt{constructor(){this._defaultResult=null,this._backgroundFillResult=null}static async from(e,t){const s=new Pt;return s.setDefault(await e.createMeshWriters(t.meshes)),s}size(){return 1}getDefault(){return this._defaultResult}setDefault(e){this._defaultResult=e}getBackgroundFill(){return this._backgroundFillResult}setBackgroundFill(e){this._backgroundFillResult=e}match(e,t){const s=this.doMatch(e,t)||this.getDefault();if(s&&s.length>0){const i=this.getBackgroundFill();if(i)return[...i,...s]}return s}getSortKey(e,t){return 0}doMatch(e,t){return null}async fetchResources(e,t){}},Zs=class jt extends O{static async fromDictionaryRenderer(e,t){return new jt(e,t)}constructor(e,t){super(),this._context=e,this._schema=t,this._hashToGroup=new Map}get fieldMap(){return this._schema.fieldMap}async fetchResources(e,t){const s=t.getCursor(),i=[];for(;s.next();)i.push(this._updateMeshWriterGroup(e,s));await Promise.all(i)}match(e,t){const s=e.getAttributeHash();return this._hashToGroup.get(s)}async _updateMeshWriterGroup(e,t){const s=t.readLegacyFeatureForDisplay(),i=t.getAttributeHash();if(this._hashToGroup.has(i))return;this._hashToGroup.set(i,null);const n=await e.fetchDictionaryResourceImmediate({type:"dictionary-request",feature:s});if(!n)return;const a=await this._context.createMeshWriters(n.meshes);this._hashToGroup.set(i,a)}},Hs=class Dt extends O{constructor(e,t){super(),this._intervals=[],this._isMaxInclusive=t,this._field=e}static async fromIntervalSchema(e,t){const s=await e.storage.createComputedField(t),i=new Dt(s,t.isMaxInclusive);await Promise.all(t.intervals.map(async o=>{const h=await e.createMeshWriters(o.meshes);i.add(o,h)}));const n=await e.createMeshWriters(t.defaultSymbol);i.setDefault(n);const a=await e.createMeshWriters(t.backgroundFill);return i.setBackgroundFill(a),i}add(e,t){this._intervals.push({interval:e,result:t}),this._intervals.sort((s,i)=>s.interval.min-i.interval.min)}size(){return super.size()+this._intervals.length}doMatch(e,t){const s=this._field?.read(e,t);if(s==null||isNaN(s)||s===1/0||s===-1/0)return null;for(let i=0;i<this._intervals.length;i++){const{interval:n,result:a}=this._intervals[i],o=s>=n.min,h=this._isMaxInclusive?s<=n.max:s<n.max;if(o&&h)return a}return null}},Js=class Lt extends O{static async fromLabelSchema(e,t){const s=t.classes.map(async n=>{const a=await e.createMeshWriters(n.meshes);return{minScale:n.minScale,maxScale:n.maxScale,meshes:a,expression:null,where:await e.storage.createWhereClause(n.where)}}),i=await Promise.all(s);return new Lt(i)}constructor(e){super(),this._labels=e}match(e,t){if(!this._labels.length)return null;const s=this._getLabels(t.$view.scale),i=[];for(const n of s)n.where&&!n.where(e)||i.push(...n.meshes);return i}_getLabels(e){return this._labels.filter(t=>this._validForTileScale(t,e))}_validForTileScale(e,t){const s=t-t/4,i=t+t/2;return(!e.minScale||e.minScale>=s)&&(!e.maxScale||e.maxScale<=i)}},Ks=class zt extends O{constructor(e,t){super(),this._defaultSymbolSortKey=0,this._nullResult=null,this._resultsMap=new Map,this._fields=[],this._fields=e,this._separator=t||""}static async fromMatcherSchema(e,t){const s=t.expression?[e.storage.createComputedField({expression:t.expression})]:[t.field?e.storage.createComputedField({field:t.field}):null,t.field2?e.storage.createComputedField({field:t.field2}):null,t.field3?e.storage.createComputedField({field:t.field3}):null],i=(await Promise.all(s)).filter(h=>!!h),n=new zt(i,t.fieldDelimiter),a=await e.createMeshWriters(t.defaultSymbol);n.setDefault(a);const o=await e.createMeshWriters(t.backgroundFill);return n.setBackgroundFill(o),await Promise.all(t.map.map(async(h,d)=>{const l=await e.createMeshWriters(h.symbol);h.value==="<Null>"?n.setNullResult(l):n.add(h.value,l,d+1)})),n}setNullResult(e){this._nullResult=e}getSortKey(e,t){const s=this._getValueFromFields(e,t);if(s==null||s===""||s==="<Null>")return 0;const i=this._resultsMap.get(s.toString());return i?i.sortKey:this._defaultSymbolSortKey}add(e,t,s){this._resultsMap.set(e.toString(),{meshWriters:t,sortKey:s}),this._defaultSymbolSortKey=Math.max(this._defaultSymbolSortKey,s+1)}size(){return super.size()+this._resultsMap.size}doMatch(e,t){const s=this._getValueFromFields(e,t);if(this._nullResult!==null&&(s==null||s===""||s==="<Null>"))return this._nullResult;if(s==null)return null;const i=s.toString();return this._resultsMap.get(i)?.meshWriters}_getValueFromFields(e,t){const s=[];for(const i of this._fields){const n=i.read(e,t);n==null||n===""?s.push("<Null>"):s.push(n)}return s.join(this._separator)}};async function G(r,e){switch(e.type){case"simple":case"heatmap":case"dot-density":case"pie-chart":return O.from(r,e);case"interval":return Hs.fromIntervalSchema(r,e);case"dictionary":return Zs.fromDictionaryRenderer(r,e);case"label":return Js.fromLabelSchema(r,e);case"map":return Ks.fromMatcherSchema(r,e);case"subtype":return er.fromSubtypes(r,e);case"cluster":return tr.fromClusterSchema(r,e);default:throw new Error("Impl")}}let er=class Ut extends O{constructor(e,t){super(),this._subMatchers=e,this._subtypeField=t}static async fromSubtypes(e,t){const s=new Map,i=[];for(const n in t.renderers){const a=parseInt(n,10),o=G(e,t.renderers[n]).then(h=>s.set(a,h));i.push(o)}return await Promise.all(i),new Ut(s,t.subtypeField)}match(e,t){const s=e.readAttribute(this._subtypeField),i=this._subMatchers.get(s);return i?i.match(e,t):null}},tr=class Wt extends O{static async fromClusterSchema(e,t){const[s,i]=await Promise.all([G(e,t.feature),G(e,t.cluster)]);return new Wt(s,i)}constructor(e,t){super(),this._featureMatcher=e,this._clusterMatcher=t}match(e,t){return e.readAttribute("cluster_count")===1?this._featureMatcher.match(e,t):this._clusterMatcher.match(e,t)}},sr=class Gt extends Qs{static async create(e,t){const s=await G(e,t.symbology),i=t.labels?await G(e,t.labels):null;return new Gt(s,i)}constructor(e,t){super(),this._symbology=e,this._labels=t}destroy(){}async enqueueMatcherRequests(e,t){await Promise.all([this._symbology.fetchResources(e,t),this._labels?.fetchResources(e,t)])}enqueueWriterRequests(e,t,s){const i=this._symbology.match(t,s);if(i){for(const n of i)n.enqueueRequest(e,t,s);if(this._labels){const n=this._labels.match(t,s);if(!n)return;for(const a of n)a.enqueueRequest(e,t,s)}}}write(e,t,s,i,n){const a=this._symbology.match(s,i);if(a){for(const o of a)o.write(e,t,s,i,n);if(e.entityRecordCount()>=1&&this._labels){const o=this._labels.match(s,i);if(!o)return;for(const h of o)h.setReferences(a),h.write(e,t,s,i,n)}}}getSortKey(e,t){return this._symbology.getSortKey(e,t)}},rr=class{constructor(r,e,t,s){this.storage=r,this.proxy=e,this.viewParams=t,this.registry=s}async createMeshWriters(r){const e=r.map(t=>this.registry.createMeshWriter(this.storage,this.proxy,this.viewParams,t));return Promise.all(e)}},ir=class{constructor(r){this._outstandingMessages=[],this._queue=new Ue({concurrency:r.concurrency,process:e=>r.process(e)})}async push(r){if(r.end)return await Promise.all(this._outstandingMessages),await this._queue.push(r),void(this._outstandingMessages=[]);const e=this._queue.push(r);return this._outstandingMessages.push(e),e}},pt=class Pe{static async create(e,t){if(t.statisticType==="count"){const i=new Ws(1);return new Pe(t.name,t.alias,t.type,t.statisticType,i)}const s=await e.createComputedField({expression:t.onStatisticExpression?.expression,field:t.onStatisticField});return new Pe(t.name,t.alias,t.type,t.statisticType,s)}constructor(e,t,s,i,n){this.name=e,this.alias=t,this.type=s,this.statisticType=i,this.computed=n}},ke=class{constructor(r){this.subscription=r,this.handledChunks=new Set}destroy(){}},gt=class{constructor(r,e){this._source=r,this._attributeStore=e,this._sendStates=new Map}destroy(){}get enablePixelBuffering(){return!0}onSubscribe(r){const e=this.createState(r);this._sendStates.set(r.key.id,e),this.updateChunks()}onUnsubscribe(r){this._sendStates.get(r.key.id)?.destroy(),this._sendStates.delete(r.key.id)}invalidate(){const r=Array.from(this._sendStates.values());this._sendStates.clear();for(const e of r)e.destroy(),this.onSubscribe(e.subscription)}invalidateAttributeData(){}getFeatureObjectIdsForAggregate(r){throw new Error("InternalError: AggregateId lookup not supported")}getDisplayIds(r){return this.displayMap(r,e=>e,e=>e)}getDisplayAndObjectIds(r){return this.displayMap(r,e=>e,(e,t,s)=>[e,s])}afterUpdateChunks(){}},ft=class extends gt{constructor(r,e,t,s){super(r,e),this.spatialReference=t,this.aggregateFields=s,this.events=new le,this.featureAdapter=Bs}get aggregateQueryEngine(){return this._aggregateQueryEngine||(this._aggregateQueryEngine=new ot({featureStore:this,fieldsIndex:this._metadata.fieldsIndex,geometryType:this._metadata.geometryType,objectIdField:this._metadata.objectIdField,spatialReference:this.spatialReference})),this._aggregateQueryEngine}removeChunks(r){}forEach(r){return this.forEachAggregateWorldSpace(r)}forEachInBounds(r,e){}forEachBounds(r,e){const t=_e();for(const s of r){const i=ss(t,s.geometry,!1,!1);i&&e(i)}}},Fe=class{constructor(r,e,t,s,i){this.subscription=r,this.reader=e,this.clear=t,this.end=s,this.debugInfo=i,this.type="append"}get id(){return this.subscription.tile.id}createMessage(r,e,t){return{type:"append",clear:this.clear,id:this.id,append:r,end:this.end,debugInfo:this.debugInfo,subscriptionVesrion:this.subscription.version,version:e,attributeEpoch:t}}},Ce=class{constructor(r,e,t,s,i){this.subscription=r,this.reader=e,this.remove=t,this.end=s,this.debugInfo=i,this.type="update"}get id(){return this.subscription.tile.id}createMessage(r,e,t){return{type:"update",id:this.id,modify:r,debugInfo:this.debugInfo,remove:this.remove,version:e,subscriptionVesrion:this.subscription.version,end:this.end,attributeEpoch:t}}},F=class R extends fe{static fromFeatures(e,t){const{objectIdField:s,geometryType:i}=t,n=rs([],e,i,!1,!1,s);for(let a=0;a<n.length;a++)n[a].displayId=e[a].displayId;return R.fromOptimizedFeatures(n,t)}static fromFeatureSet(e,t){const s=We(e,t.objectIdField);return R.fromOptimizedFeatureSet(s,t)}static fromOptimizedFeatureSet(e,t){const s=R.fromOptimizedFeatures(e.features,t);return s._exceededTransferLimit=e.exceededTransferLimit,s._transform=e.transform,s._fieldsIndex=new Ge(e.fields),s}static fromOptimizedFeatures(e,t,s){const i=new R(e,t);return i._fieldsIndex=t.fieldsIndex,i._transform=s,i}static empty(e){return new R([],e)}constructor(e,t){super(t),this._exceededTransferLimit=!1,this._featureIndex=-1,this._fieldsIndex=null,this._geometryType=t.geometryType,this._features=e}get fields(){return this._fieldsIndex}get geometryType(){return this._geometryType}get hasFeatures(){return!!this._features.length}get hasNext(){return this._featureIndex+1<this._features.length}get exceededTransferLimit(){return this._exceededTransferLimit}get hasZ(){return!1}get hasM(){return!1}get _current(){return this._features[this._featureIndex]}removeIds(e){const t=new Set(e);this._features=this._features.filter(s=>!(s.objectId!=null&&t.has(s.objectId)))}getSize(){return this._features.length}getCursor(){return this.copy()}getInTransform(){return this._transform}getAttributeHash(){let e="";for(const t in this._current.attributes)e+=this._current.attributes[t];return e}getIndex(){return this._featureIndex}setIndex(e){this._featureIndex=e}getObjectId(){return this._current?.objectId}getDisplayId(){return this._current.displayId}setDisplayId(e){this._current.displayId=e}copy(){const e=new R(this._features,this.metadata);return this.copyInto(e),e}next(){for(;++this._featureIndex<this._features.length&&!this._getExists(););return this._featureIndex<this._features.length}readGeometryArea(){return $(this._current)?is(this._current.geometry,2):0}_readX(){return $(this._current)?this._current.geometry.coords[0]:0}_readY(){return $(this._current)?this._current.geometry.coords[1]:0}_readGeometry(){return $(this._current)?this._current.geometry??null:null}_readServerCentroid(){return this._current.centroid}_readAttribute(e,t){if(!this._fieldsIndex){const n=this._current.attributes[e];if(n!==void 0)return n;const a=e.toLowerCase();for(const o in this._current.attributes)if(o.toLowerCase()===a)return this._current.attributes[o];return}const s=this._fieldsIndex.get(e);if(!s)return;let i=this._current.attributes[s.name];return i==null?i:(this.fields.get(e)?.type==="esriFieldTypeTimestampOffset"&&(i=this.parseTimestampOffset(i)),t&&this.fields.isDateField(e)?new Date(i):i)}_readAttributes(){return this._current.attributes}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._transform=this._transform,e._fieldsIndex=this._fieldsIndex}},nr=class extends ke{constructor(r,e){super(r),this.bins=new Map,this.featureCache=new Map,this.done=!1,this._store=e}reset(){this.destroy(),this.done=!1}destroy(){const r=this.subscription.tile.key.level;for(const e of this.featureCache.keys())this._store.releaseDisplayIdForObjectId(`${e}.${r}`);this.bins.clear(),this.featureCache.clear(),this.handledChunks.clear()}get tile(){return this.subscription.tile}*featuresWorldSpace(){for(const r of this.featureCache.values()){const e=r.clone();e.geometry&&ns(e.geometry,e.geometry,!1,!1,this.subscription.tile.transform),yield e}}},ar=class Nt extends ft{static async create(e,t,s,i,n){const a=new ye({spatialReference:t}),o=await Promise.all(e.fields.map(async d=>pt.create(a,d))),h=e.featureFilter?await at.create({geometryType:s.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:s.metadata.timeInfo,fieldsIndex:s.metadata.fieldsIndex,spatialReference:t,filterJSON:e.featureFilter}):null;return e.index.type==="geohash"&&await Ns(t,M.WGS84),new Nt(e,h,n,o,t,s,i)}constructor(e,t,s,i,n,a,o){super(a,o,n,i),this._schema=e,this._featureFilter=t,this._timeZone=s,this._metadata=new me({geometryType:"esriGeometryPolygon",objectIdField:"aggregateId",fields:e.fields,globalIdField:null,spatialReference:a.metadata.spatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,typeIdField:null,types:null})}createState(e){return new nr(e,this._attributeStore)}async*applyLocalEdit(e){for(const t of this._sendStates.values())t.reset(),yield new Fe(t.subscription,F.empty(this._source.metadata),!0,!1,{})}displayMap(e,t,s){const i=new Map(e.map(a=>[t(a),a])),n=[];for(const a of this._sendStates.values())for(const o of a.featuresWorldSpace()){const{objectId:h,displayId:d}=o,l=i.get(h);if(l!=null){const u=s(d,l,h);n.push(u),i.delete(h)}}return n}getDisplayFeatures(e){const t=new Set(e),s=new Set,i=[];for(const n of this._sendStates.values())for(const a of n.featuresWorldSpace())t.has(a.displayId)&&!s.has(a.objectId)&&(a.geometry&&i.push({...Ne(a,this._metadata.geometryType,!1,!1),displayId:a.displayId}),s.add(a.objectId));return{features:[],aggregates:i}}getFeatureObjectIdsForAggregate(e){for(const t of this._sendStates.values())for(const s of t.bins.values())if(s.id===e)return Array.from(s.containedObjectIds);return[]}async*updateChunks(){if(this._source.chunks().length)for(const e of this._sendStates.values())yield*this._update(e,this._source)}forEachAggregateWorldSpace(e){for(const t of this._sendStates.values())for(const s of t.featuresWorldSpace())e(s)}_createIndexOptions(e){switch(this._schema.index.type){case"geohash":return{type:"geohash",fields:this.aggregateFields,featureFilter:this._featureFilter,geohashLevel:this._schema.index.fixBinLevel,spatialReference:this.spatialReference,timeZone:this._timeZone,scale:e.scale};case"grid":{const t=this._schema.index.fixedBinLevel,s=t!=null?e.tileInfoView.getLODInfoAt(t).scale:e.scale;return{type:"grid",fields:this.aggregateFields,cellSize:this._schema.index.size,featureFilter:this._featureFilter,spatialReference:this.spatialReference,timeZone:this._timeZone,scale:s}}}}async*_update(e,t){const{handledChunks:s,subscription:i,bins:n,featureCache:a}=e,o=i.tile;if(e.done)return;for(const c of t.chunks()){if(s.has(c.chunkId))continue;s.add(c.chunkId);const g=c.queryInfo;if("tileId"in g){const f=new ue(g.tileId);if(f.level!==o.level||f.world!==o.key.world)continue}c.getAggregateIndex(this._createIndexOptions(e.tile)).putBounded(n,e.tile.extent,e.tile.resolution)}const h=[],d=i.tile.transform,l=i.tile.key.level;for(const c of n.values()){let g=a.get(c.id);if(g)g.attributes=c.getAttributes();else{const f=c.getGeometry(this.spatialReference,d);g=new A(f,c.getAttributes(),null),f||(g.centroid=c.getGeometricCentroid(this.spatialReference,d)),g.objectId=c.id,g.displayId=this._attributeStore.createDisplayIdForObjectId(`${g.objectId}.${l}`),a.set(c.id,g)}h.push(g)}this.events.emit("changed"),e.done=!t.updateTracking.updating;const u=F.fromOptimizedFeatures(h,this._metadata,d),p=u.getCursor(),_=e.subscription.tile.createArcadeEvaluationOptions(this._timeZone);for(;p.next();)this._attributeStore.setAttributeData(p.getDisplayId(),p,_);yield new Ce(e.subscription,u,[],e.done,{})}},yt=class{constructor(r){this._statistics=r}get statistics(){return this._statistics}};const mt=Math.PI/180;let It=class je{static create(e){return new je(e.map(t=>or(t)))}constructor(e){this._statistics=e}values(){return this._statistics.values()}insert(e,t){for(const s of this._statistics)s.insert(e,t)}merge(e){for(let t=0;t<this._statistics.length;t++){const s=this._statistics[t],i=e._statistics[t];if(s.field.name!==i.field.name)throw new Error("InternalError: Tried to merge incompatible statistics");s.merge(i)}}clone(){return new je(this._statistics.map(e=>e.clone()))}};function or(r){switch(r.statisticType){case"min":return new hr(r);case"max":return new dr(r);case"avg":return new ur(r);case"avg_angle":return new lr(r);case"sum":case"count":return new cr(r);case"mode":return new _r(r)}}let D=class{constructor(r){this.field=r}insert(r,e){if(!this.field.computed)return;const t=this.field.computed.read(r,e);Ps(t)||this._insertValue(t)}},hr=class Bt extends D{constructor(){super(...arguments),this.type="min",this.value=Number.MAX_VALUE}_insertValue(e){this.value=Math.min(this.value,e)}merge(e){this.value=Math.min(this.value,e.value)}clone(){const e=new Bt(this.field);return e.value=this.value,e}},dr=class Vt extends D{constructor(){super(...arguments),this.type="max",this.value=Number.MIN_VALUE}_insertValue(e){this.value=Math.max(this.value,e)}merge(e){this.value=Math.max(this.value,e.value)}clone(){const e=new Vt(this.field);return e.value=this.value,e}},cr=class $t extends D{constructor(){super(...arguments),this.type="sum",this.value=0}_insertValue(e){this.value+=e}merge(e){this.value+=e.value}clone(){const e=new $t(this.field);return e.value=this.value,e}},ur=class Yt extends D{constructor(){super(...arguments),this.type="avg",this._total=0,this._count=0}get value(){return this._total/this._count}_insertValue(e){this._total+=e,this._count+=1}merge(e){this._total+=e._total,this._count+=e._count}clone(){const e=new Yt(this.field);return e._total=this._total,e._count=this._count,e}},lr=class Xt extends D{constructor(){super(...arguments),this.type="avg_angle",this._x=0,this._y=0,this._count=0}get value(){const e=this._x/this._count,t=this._y/this._count,s=180/Math.PI;return Math.atan2(t,e)*s}_insertValue(e){this._x=this._x+Math.cos(e*mt),this._y=this._y+Math.sin(e*mt),this._count+=1}merge(e){this._x+=e._x,this._y+=e._y,this._count+=e._count}clone(){const e=new Xt(this.field);return e._x=this._x,e._y=this._y,e._count=this._count,e}},_r=class Qt extends D{constructor(){super(...arguments),this._frequencies=new Map}get value(){let e,t=0;for(const[s,i]of this._frequencies.entries())i>t&&(t=i,e=s);return e}_insertValue(e){const t=this._frequencies.get(e);t!=null?this._frequencies.set(e,t+1):this._frequencies.set(e,1)}merge(e){for(const[t,s]of e._frequencies.entries()){const i=this._frequencies.get(t);i!=null?this._frequencies.set(t,i+s):this._frequencies.set(t,s)}}clone(){const e=new Qt(this.field);return e._frequencies=new Map(this._frequencies),e}},Te=class ae extends yt{static createId(e,t){return`${e}.${t}`}static create(e,t,s,i){return new ae(e,t,It.create(s),i)}constructor(e,t,s,i){super(s),this.gridX=e,this.gridY=t,this._worldUnitsPerCell=i,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._objectIds=new Set}get id(){return ae.createId(this.gridX,this.gridY)}get containedObjectIds(){return this._objectIds}get count(){return this._count}get firstObjectId(){return this._objectIds.values().next().value}get centroidXWorld(){return this._xWorldTotal/this._count}get centroidYWorld(){return this._yWorldTotal/this._count}clone(){const e=new ae(this.gridX,this.gridY,this._statistics.clone(),this._worldUnitsPerCell);return e._count=this._count,e._xWorldTotal=this._xWorldTotal,e._yWorldTotal=this._yWorldTotal,e._firstFeatureAttributes=this._firstFeatureAttributes,e._objectIds=new Set(this._objectIds),e}insert(e,t,s,i){this._count===0?this._firstFeatureAttributes=e.readAttributes():this._firstFeatureAttributes=null,this._count+=1,this._xWorldTotal+=s,this._yWorldTotal+=i,this._statistics.insert(e,t),this._objectIds.add(e.getObjectId())}merge(e){if(e._count!==0){this._count+=e._count,this._firstFeatureAttributes=e._firstFeatureAttributes,this._xWorldTotal+=e._xWorldTotal,this._yWorldTotal+=e._yWorldTotal,this._statistics.merge(e._statistics);for(const t of e._objectIds.values())this._objectIds.add(t)}}getCentroidX(e){return e==null?this.centroidXWorld:as(e,this.centroidXWorld)}getCentroidY(e){return e==null?this.centroidYWorld:os(e,this.centroidYWorld)}getGeometry(e,t){const s=this.gridX*this._worldUnitsPerCell,i=this.gridY*this._worldUnitsPerCell,n=new x([4],[s,i,s+this._worldUnitsPerCell,i,s+this._worldUnitsPerCell,i+this._worldUnitsPerCell,s,i+this._worldUnitsPerCell]);if(t!=null){const a=new x;return P(a,n,!1,!1,"esriGeometryPolygon",t)}return n}getCentroid(e){const t=new x([],[this.centroidXWorld,this.centroidYWorld]);if(e!=null){const s=new x;return P(s,t,!1,!1,"esriGeometryPoint",e)}return t}getGeometricCentroid(e,t){const s=this.gridX*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,i=this.gridY*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,n=new x([],[s,i]);if(t!=null){const a=new x;return P(a,n,!1,!1,"esriGeometryPoint",t)}return n}getAttributes(){const e={aggregateId:this.id};for(const t of this._statistics.values())e[t.field.name]=t.value;return this._firstFeatureAttributes!=null?{...e,...this._firstFeatureAttributes}:e}},bt=class{constructor(r){this._options=r}insert(r,e){const t=r.getCursor(),s={$view:{scale:this._options.scale,timeZone:this._options.timeZone}};for(;t.next();)this._insertFeature(t,s,e)}_insertFeature(r,e,t){const{featureFilter:s}=this._options;if(s!==null&&!s.check(r))return;let i=0,n=0;if(r.geometryType==="esriGeometryPoint")i=r.readXWorldSpace(),n=r.readYWorldSpace();else{if(t){const o=r.readCentroidForDisplay();if(o==null)return;const[h,d]=o.coords;if(h<0||h>S||d<0||d>S)return}const a=r.readCentroidWorldSpace();if(a==null)return;i=a.coords[0],n=a.coords[1]}this._insert(r,i,n,e)}};const pr=96;function Me(r,e){return hs(r)*ds*pr/e}let gr=class extends bt{constructor(r){super(r),this._cells=new Map,this._pixelsPerMapUnit=Me(r.spatialReference,r.scale)}put(r){for(const e of this._cells.values()){const t=r.get(e.id);t?t.merge(e):r.set(e.id,e.clone())}}putBounded(r,e,t){const s=[e.xmin,e.ymin,e.xmax,e.ymax],[i,n,a,o]=s,h=Math.floor(i*this._pixelsPerMapUnit/this._options.cellSize),d=Math.floor(n*this._pixelsPerMapUnit/this._options.cellSize),l=Math.ceil(a*this._pixelsPerMapUnit/this._options.cellSize),u=Math.ceil(o*this._pixelsPerMapUnit/this._options.cellSize);for(let p=d;p<=u;p++)for(let _=h;_<=l;_++){const c=`${_}.${p}`,g=this._cells.get(c);if(!g)continue;const f=r.get(g.id);f?g&&!r.has(g.id)&&f.merge(g):r.set(g.id,g.clone())}}_insert(r,e,t,s){const i=e*this._pixelsPerMapUnit,n=t*this._pixelsPerMapUnit,a=Math.floor(i/this._options.cellSize),o=Math.floor(n/this._options.cellSize);this._getCellOrCreate(a,o).insert(r,s,e,t)}_getCellOrCreate(r,e){const t=Te.createId(r,e);let s=this._cells.get(t);if(!s){const i=1*this._options.cellSize/this._pixelsPerMapUnit;s=Te.create(r,e,this._options.fields,i),this._cells.set(t,s)}return s}},fr=class{constructor(r,e){this.inner=r,this.displayId=e}};const se=128;let yr=class extends ke{constructor(r){super(r),this.didSend=!1,this.done=!1}},mr=class{constructor(r,e,t,s,i){this._level=r,this._scale=e,this._indexOptions=t,this._clusterRadius=s,this._store=i,this._cells=new Map,this._handledChunks=new Set,this._statistics=new Map,this._clusters=new Map}destroy(){this._clearClusters()}_clearClusters(){for(const r of this._clusters.values())this._store.releaseDisplayIdForObjectId(r.inner.id);this._clusters.clear()}*aggregatesWorldSpace(){for(const r of this._clusters.values()){const e=r.inner.getCentroid(null),t=new A(e,r.inner.getAttributes(),null);t.objectId=r.inner.id,t.displayId=r.displayId,yield t}}clusters(){return this._clusters.values()}updateChunks(r,e){let t=!1;for(const a of r){const o=a.queryInfo;"tileId"in o&&new ue(o.tileId).level!==this._level||this._handledChunks.has(a.normalizedChunkId)||(this._handledChunks.add(a.normalizedChunkId),t=!0,a.getAggregateIndex({...this._indexOptions,scale:this._scale}).put(this._cells))}const s={xMin:1/0,yMin:1/0,xMax:-1/0,yMax:-1/0},i=Me(this._indexOptions.spatialReference,this._scale),n=this._indexOptions.cellSize;for(const{subscription:a}of e){const o=a.tile.bounds,h=Math.floor(o[0]*i/n),d=Math.floor(o[1]*i/n),l=Math.ceil(o[2]*i/n),u=Math.ceil(o[3]*i/n);s.xMin=Math.min(s.xMin,h),s.yMin=Math.min(s.yMin,d),s.xMax=Math.max(s.xMax,l),s.yMax=Math.max(s.yMax,u)}return this._lastCellBounds!=null&&s.xMin===this._lastCellBounds.xMin&&s.yMin===this._lastCellBounds.yMin&&s.yMin===this._lastCellBounds.yMin&&s.yMax===this._lastCellBounds.yMax||(t=!0,this._lastCellBounds=s),t&&this._clusterCells(s),t}async updateStatistics(r){let e=!1;for(const t of this._clusters.values())t.inner.count>1&&(e=this._updateAggregateStatistics(this._statistics,t.inner)||e);if(e){const t=Array.from(this._statistics.entries()).map(([s,i])=>({fieldName:s,minValue:i.minValue,maxValue:i.maxValue}));await r.container.updateStatistics(this._level,t)}}createAggregateFeatures(r,e){const t=r.subscription,s=[],i=t.tile.transform;for(const n of this._clusters.values()){let a=n.inner.getCentroidX(i);const o=n.inner.getCentroidY(i),h=t.tile.lod,d=h.wrap?h.worldSize[0]:null,l=n.inner.count===1?n.inner.firstObjectId:n.inner.id,u=n.displayId;if(d!=null)if(d===1){const p=new x([],[a,o]),_=new A(p,n.inner.getAttributes(),null);_.geometry.coords[0]-=S,_.objectId=l,_.displayId=u,s.push(_);const c=new x([],[a,o]),g=new A(c,n.inner.getAttributes(),null);g.geometry.coords[0]+=S,g.objectId=l,g.displayId=u,s.push(g)}else a>S+S/2?a-=d*S:a<-S/2&&(a+=d*S);if(a<S+se&&a>=-se&&o<S+se&&o>=-se){const p=new x([],[a,o]),_=new A(p,n.inner.getAttributes(),null);_.objectId=l,_.displayId=u,s.push(_)}}return F.fromOptimizedFeatures(s,e,t.tile.transform)}_clusterCells(r){let e=Array.from(this._cells.values());e=e.sort((a,o)=>o.count-a.count);const t=[];for(const a of this._clusters.values())t.push(a.inner.id);this._clusters.clear();const s=this._clusterRadius*(1/Me(this._indexOptions.spatialReference,this._scale)),i=1+this._clusterRadius/this._indexOptions.cellSize,n=new Set;for(const a of e){if(n.has(a.id)||a.gridX<r.xMin||a.gridX>r.xMax||a.gridY<r.yMin||a.gridY>r.yMax)continue;const o=this._store.createDisplayIdForObjectId(a.id),h=new fr(a.clone(),o);n.add(a.id),this._clusters.set(a.id,h);const d=a.centroidXWorld,l=a.centroidYWorld;for(let u=a.gridY-i;u<=a.gridY+i;u++)for(let p=a.gridX-i;p<=a.gridX+i;p++){if(u===a.gridY&&p===a.gridX)continue;const _=this._cells.get(Te.createId(p,u));if(!_||n.has(_.id))continue;const c=Math.abs(_.centroidXWorld-d),g=Math.abs(_.centroidYWorld-l);c<s&&g<s&&(h.inner.merge(_),n.add(_.id))}}for(const a of t)this._store.releaseDisplayIdForObjectId(a)}_updateAggregateStatistics(r,e){let t=!1;for(const s of e.statistics.values()){if(s.field.type==="esriFieldTypeString")continue;const i=s.value,n=s.field,a=r.get(n.name);if(a){const{minValue:o,maxValue:h}=a,d=Math.min(a.minValue,i),l=Math.max(a.maxValue,i);o===d&&h===l||(a.minValue=d,a.maxValue=l,t=!0)}else r.set(n.name,{minValue:i,maxValue:i}),t=!0}return t}},Ir=class Zt extends ft{static async create(e,t,s,i,n,a){const o=new ye({spatialReference:s}),h={type:"grid",fields:await Promise.all(t.fields.map(async d=>pt.create(o,d))),spatialReference:s,featureFilter:t.featureFilter?await at.create({geometryType:i.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:i.metadata.timeInfo,fieldsIndex:i.metadata.fieldsIndex,spatialReference:s,filterJSON:t.featureFilter}):null,cellSize:t.clusterRadius/4,timeZone:a};return new Zt(e,t.clusterRadius,h,t.fields,i,n)}constructor(e,t,s,i,n,a){super(n,a,s.spatialReference,s.fields),this._connection=e,this._clusterRadius=t,this._indexOptions=s,this._cellsPerScale=new Map,this._metadata=new me({geometryType:"esriGeometryPoint",objectIdField:"aggregateId",fields:[...i,...this._source.metadata.fieldsIndex.fields,{name:"aggregateId",alias:"aggregateId",type:"esriFieldTypeOID"}],globalIdField:null,spatialReference:n.metadata.spatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,typeIdField:null,types:null})}get enablePixelBuffering(){return!1}invalidate(){super.invalidate();for(const e of this._cellsPerScale.values())e.destroy();this._cellsPerScale.clear()}onSubscribe(e){super.onSubscribe(e),this._requiredLevel=e.tile.level,this._requiredScale=e.tile.scale}createState(e){return new yr(e)}async*applyLocalEdit(e){for(const t of this._cellsPerScale.values())t.destroy();this._cellsPerScale.clear();for(const t of this._sendStates.values())t.done=!1}displayMap(e,t,s){const i=new Map(e.map(o=>[t(o),o])),n=[],a=this._getClusterState(this._requiredLevel,this._requiredScale);for(const o of a.clusters()){const h=i.get(o.inner.id);if(h==null){if(o.inner.count===1){const d=i.get(o.inner.firstObjectId);if(d!=null){const l=s(o.displayId,d,o.inner.firstObjectId);n.push(l),i.delete(o.inner.firstObjectId)}}}else{const d=s(o.displayId,h,o.inner.id);n.push(d),i.delete(o.inner.id)}}return n}getDisplayFeatures(e){const t=new Set(e),s=new Set,i=[],n=[],a=this._getClusterState(this._requiredLevel,this._requiredScale);for(const o of a.aggregatesWorldSpace())if(t.has(o.displayId)&&!s.has(o.displayId)){const h=Ne(o,this._metadata.geometryType,!1,!1);if(s.add(o.displayId),h.attributes.cluster_count===1){i.push({...h,displayId:o.displayId});continue}n.push({...h,displayId:o.displayId})}return{features:i,aggregates:n}}getFeatureObjectIdsForAggregate(e){const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.clusters())if(s.inner.id===e)return Array.from(s.inner.containedObjectIds);return[]}async*updateChunks(){const e=this._source.chunks();if(!e.length)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale),s=Array.from(this._sendStates.values()).filter(a=>a.subscription.tile.level===this._requiredLevel);if(t.updateChunks(e,s)||!this._source.updateTracking.updating)for(const a of s)a.subscription.tile.level===this._requiredLevel&&(a.didSend=!1,a.done=!1);const i=Array.from(this._sendStates.values()).filter(a=>a.done).map(a=>a.subscription.tile.key),n=new Set(i);for(const a of this._sendStates.values())this._source.updateTracking.updating&&(i.some(o=>o.containsChild(a.subscription.tile.key))||a.subscription.tile.key.getChildKeys().every(o=>n.has(o)))||a.didSend||a.subscription.tile.level!==this._requiredLevel||(a.didSend=!0,yield*this._update(a,t,this._source));await t.updateStatistics(this._connection)}forEachAggregateWorldSpace(e){if(this._requiredLevel==null||this._requiredScale==null)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.aggregatesWorldSpace())e(s)}_getClusterState(e,t){if(e==null||t==null)throw new Error("InternalError: Level and scale must be defined");let s=this._cellsPerScale.get(t);return s||(s=new mr(e,t,this._indexOptions,this._clusterRadius,this._attributeStore),this._cellsPerScale.set(t,s)),s}async*_update(e,t,s){if(e.done)return;const i=t.createAggregateFeatures(e,this._metadata);this.events.emit("changed"),e.done=!s.updateTracking.updating;const n=i.getCursor(),a=e.subscription.tile.createArcadeEvaluationOptions(this._indexOptions.timeZone);for(;n.next();)this._attributeStore.setAttributeData(n.getDisplayId(),n,a);yield new Fe(e.subscription,i,!0,e.done,{})}},br=class Ht{static fromReader(e){const t=[],s=e.copy(),i=_e();for(;s.next();)s.getBounds(i)&&t.push(s.getIndex());const n=cs(9,a=>(s.setIndex(a),{minX:s.getBoundsXMin(),minY:s.getBoundsYMin(),maxX:s.getBoundsXMax(),maxY:s.getBoundsYMax()}));return n.load(t),new Ht(n)}constructor(e){this._index=e}search(e){const t={minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]};return this._index.search(t)}};const wr=64;function vr(r,e,t,s){const i=[r.xmin,r.ymin,r.xmax,r.ymax],n=us.fromExtent(ls.fromBounds(i,s)),a=H(n,s,M.WGS84,{densificationStep:e*wr});if(!a)return null;const o=Be(new x,a,!1,!1),h=o.coords.filter((f,w)=>!(w%2)),d=o.coords.filter((f,w)=>w%2),l=Math.min(...h),u=Math.min(...d),p=Math.max(...h),_=Math.max(...d),c=qe(l,u,t,M.WGS84),g=qe(p,_,t,M.WGS84);return c&&g?{bounds:i,geohashBounds:{xLL:c[0],yLL:c[1],xTR:g[0],yTR:g[1]},level:t}:null}function qe(r,e,t,s){if(s.isWebMercator){const a=Ve(r/$e.radius),o=a-360*Math.floor((a+180)/360),h=[0,0];return wt(h,0,Ve(Math.PI/2-2*Math.atan(Math.exp(-e/$e.radius))),o,t),h}const i=H({x:r,y:e},s,M.WGS84);if(!i)return null;const n=[0,0];return wt(n,0,i.y,i.x,t),n}function Sr(r,e){let t=-90,s=90,i=-180,n=180;for(let a=0;a<e;a++){const o=Math.ceil((a+1)/2),h=Math.floor((a+1)/2),d=1-a%2,l=30-(3*o+2*h),u=30-(2*o+3*h),p=3*d+2*(1-d),_=2*d+3*(1-d),c=3*d+7*(1-d)<<u,g=(7*d+3*(1-d)<<l&r.geohashX)>>l,f=(c&r.geohashY)>>u;for(let w=p-1;w>=0;w--){const y=(i+n)/2,m=g&1<<w?1:0;i=(1-m)*i+m*y,n=(1-m)*y+m*n}for(let w=_-1;w>=0;w--){const y=(t+s)/2,m=f&1<<w?1:0;t=(1-m)*t+m*y,s=(1-m)*y+m*s}}return[i,t,n,s]}function wt(r,e,t,s,i){i%2&&(i+=1);let n=0,a=0,o=-90,h=90,d=-180,l=180;for(let u=0;u<i/2;u++){for(let p=0;p<5;p++){const _=(d+l)/2,c=s>_?1:0;n|=c<<29-(p+5*u),d=(1-c)*d+c*_,l=(1-c)*_+c*l}for(let p=0;p<5;p++){const _=(o+h)/2,c=t>_?1:0;a|=c<<29-(p+5*u),o=(1-c)*o+c*_,h=(1-c)*_+c*h}}r[2*e]=n,r[2*e+1]=a}let vt=class De extends yt{static create(e,t,s,i){const n=It.create(e),a=new Array(32);for(let o=0;o<a.length;o++)a[o]=null;return new De(n,t,s,i,a)}constructor(e,t,s,i,n){super(e),this.xNode=t,this.yNode=s,this.depth=i,this.children=n,this._objectIds=new Set,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._xGeohashTotal=0,this._yGeohashTotal=0,this.next=null}get id(){return`${this.xNode}.${this.yNode}`}get containedObjectIds(){return this._objectIds}get count(){return this._count}clone(){const e=new De(this._statistics.clone(),this.xNode,this.yNode,this.depth,this.children);return e._count=this._count,e._xWorldTotal=this._xWorldTotal,e._yWorldTotal=this._yWorldTotal,e._xGeohashTotal=this._xGeohashTotal,e._yGeohashTotal=this._yGeohashTotal,e.next=this.next,e._objectIds=new Set(this._objectIds),e}insert(e,t,s,i,n,a){this._count+=1,this._xWorldTotal+=t,this._yWorldTotal+=s,this._xGeohashTotal+=i,this._yGeohashTotal+=n,this._statistics.insert(e,a),this._objectIds.add(e.getObjectId())}merge(e){if(e._count!==0){this._count+=e._count,this._xWorldTotal+=e._xWorldTotal,this._yWorldTotal+=e._yWorldTotal,this._xGeohashTotal+=e._xWorldTotal,this._yGeohashTotal+=e._yWorldTotal,this._statistics.merge(e._statistics);for(const t of e._objectIds.values())this._objectIds.add(t)}}getCentroid(e){throw new Error("getCentroid not supported for GeohashNode")}getGeometry(e,t){const s=this._getLngLatBounds(),[i,n,a,o]=s,h=H({rings:[[[i,n],[i,o],[a,o],[a,n],[i,n]]]},M.WGS84,e),d=Be(new x,h,!1,!1);return t!=null?P(new x,d,!1,!1,"esriGeometryPolygon",t,!1,!1):d}getGeometricCentroid(e,t){const s=this._getLngLatBounds(),[i,n,a,o]=s,h=H({x:(i+a)/2,y:(n+o)/2},M.WGS84,e),d=_s(new x,h);return t!=null?P(new x,d,!1,!1,"esriGeometryPoint",t,!1,!1):d}getAttributes(){const e={aggregateId:this.id};for(const t of this._statistics.values())e[t.field.name]=t.value;return e.aggregateCount=this._count,e}find(e,t,s,i,n,a){if(i>=s)return this;const o=1-i%2,h=3*o+2*(1-o),d=2*o+3*(1-o),l=30-n-h,u=30-a-d,p=((e&7*o+3*(1-o)<<l)>>l)+((t&3*o+7*(1-o)<<u)>>u)*(8*o+4*(1-o)),_=this.children[p];return _==null?null:_.find(e,t,s,i+1,n+h,a+d)}_getLngLatBounds(){const e=this.depth,t=Math.ceil(e/2),s=Math.floor(e/2),i=30-(3*t+2*s),n=30-(2*t+3*s),a=this.xNode<<i,o=this.yNode<<n;return Sr({geohashX:a,geohashY:o},this.depth)}};class xr{constructor(e){this._fields=e,this._size=0,this._depth=0,this._root=vt.create(this._fields,0,0,0)}destroy(){}get size(){return this._size}get depth(){return this._depth}find(e,t,s){return this._root.find(e,t,s,0,0,0)}insert(e,t,s,i,n,a,o){let h=this._root,d=0,l=0,u=0;for(;h!==null;){if(h.insert(e,t,s,i,n,o),d>=a)return;const p=Math.ceil((d+1)/2),_=Math.floor((d+1)/2),c=1-d%2,g=30-(3*p+2*_),f=30-(2*p+3*_),w=(i&7*c+3*(1-c)<<g)>>g,y=(n&3*c+7*(1-c)<<f)>>f,m=w+y*(8*c+4*(1-c));l=l<<3*c+2*(1-c)|w,u=u<<2*c+3*(1-c)|y,h.children[m]==null&&(h.children[m]=vt.create(this._fields,l,u,d+1),this._depth=Math.max(this._depth,d+1),this._size+=1),d+=1,h=h.children[m]}}putBins(e,t){for(const s of this.getNodes(t)){const i=e.get(s.id);i?i.merge(s):e.set(s.id,s.clone())}}getNodes(e){const t=[],{geohashBounds:s,level:i}=e;let n=this._root;for(;n!==null;){const a=n.depth,o=n.xNode,h=n.yNode;if(a>=i){t.push(n),n=n.next;continue}const d=Math.ceil((a+1)/2),l=Math.floor((a+1)/2),u=1-a%2,p=30-(3*d+2*l),_=30-(2*d+3*l),c=~((1<<p)-1),g=~((1<<_)-1),f=(s.xLL&c)>>p,w=(s.yLL&g)>>_,y=(s.xTR&c)>>p,m=(s.yTR&g)>>_,v=o<<3*u+2*(1-u),b=h<<2*u+3*(1-u),k=v+8*u+4*(1-u),C=b+4*u+8*(1-u),T=Math.max(v,f),q=Math.max(b,w),B=Math.min(k,y),es=Math.min(C,m);let V=null,oe=null;for(let he=q;he<=es;he++)for(let de=T;de<=B;de++){const ts=de-v+(he-b)*(8*u+4*(1-u)),U=n.children[ts];U&&(V||(V=U,V.next=n.next),oe&&(oe.next=U),oe=U,U.next=n.next)}n=V||n.next}return t}}let kr=class extends bt{constructor(r){super(r),this._tree=new xr(this._options.fields)}put(r){throw new Error("Geohash tree does not support put")}putBounded(r,e,t){const{geohashLevel:s,spatialReference:i}=this._options,n=vr(e,t,s,i);n!=null&&this._tree.putBins(r,n)}_insert(r,e,t,s){const{geohashLevel:i,spatialReference:n}=this._options,a=qe(e,t,i,n);a&&this._tree.insert(r,e,t,a[0],a[1],i,s)}},Fr=class Le extends fe{static from(e,t){return new Le(e.copy(),t)}constructor(e,t){super(e.metadata),this._currentIndex=-1,this._displayTranslationX=0,this._displayTranslationY=0,this._displayScaleX=1,this._displayScaleY=1,this._reader=e,this._indices=t,this._isPoint=e.geometryType==="esriGeometryPoint"}setTransformForDisplay(e){const t=this._reader.getInTransform();if(t==null){const[u,p]=e.scale,[_,c]=e.translate;return this._displayTranslationX=-_/u,this._displayScaleX=1/u,this._displayTranslationY=c/p,this._displayScaleY=1/-p,void(this._displayTransform=e)}const[s,i]=t.scale,[n,a]=t.translate,[o,h]=e.scale,[d,l]=e.translate;if(this._displayScaleX=s/o,this._displayTranslationX=(n-d)/o,this._displayScaleY=i/h,this._displayTranslationY=(-a+l)/h,!this._isPoint&&t)throw new Error("InternalError: Relative transformations not supported for non-point features");this._displayTransform=e}getInTransform(){return this._reader.getInTransform()}get fields(){return this._reader.fields}get hasNext(){return this._currentIndex+1<this._indices.length}getSize(){return this._indices.length}getCursor(){return this.copy()}copy(){const e=new Le(this._reader.copy(),this._indices);return e._currentIndex=this._currentIndex,e._displayTransform=this._displayTransform,e._displayTranslationX=this._displayTranslationX,e._displayTranslationY=this._displayTranslationY,e._displayScaleX=this._displayScaleX,e._displayScaleY=this._displayScaleY,e}get contextTimeZone(){return this._reader.contextTimeZone}set contextTimeZone(e){this._reader.contextTimeZone=e}_nextIndex(){return++this._currentIndex<this._indices.length&&(this._reader.setIndex(this._indices[this._currentIndex]),!0)}next(){for(;this._nextIndex()&&!this._reader._getExists(););return this._currentIndex<this._indices.length}readXForDisplay(){return this._reader.readXForDisplay()*this._displayScaleX+this._displayTranslationX}readYForDisplay(){return this._reader.readYForDisplay()*this._displayScaleY+this._displayTranslationY}readGeometryForDisplay(){const e=this._reader.readGeometryForDisplay();if(!this._displayTransform)return e;const t=new x;return P(t,e,this.hasZ,this.hasM,this.geometryType,this._displayTransform),t.deltaDecode()}readCentroidForDisplay(){const e=this._reader.readCentroidForDisplay()?.clone();if(e){const[t,s]=e.coords;e.coords[0]=t*this._displayScaleX+this._displayTranslationX,e.coords[1]=s*this._displayScaleY+this._displayTranslationY}return e}get geometryType(){return this._reader.geometryType}get hasFeatures(){return this._reader.hasFeatures}get exceededTransferLimit(){return this._reader.exceededTransferLimit}get hasZ(){return this._reader.hasZ}get hasM(){return this._reader.hasM}readAttribute(e,t=!1){return this._reader.readAttribute(e,t)}readAttributes(){return this._reader.readAttributes()}joinAttributes(e){return this._reader.joinAttributes(e)}getBounds(e){return this._reader.getBounds(e)}getAttributeHash(){return this._reader.getAttributeHash()}getObjectId(){return this._reader.getObjectId()}getDisplayId(){return this._reader.getDisplayId()}setDisplayId(e){return this._reader.setDisplayId(e)}setIndex(e){return this._reader.setIndex(e)}getIndex(){return this._reader.getIndex()}readXWorldSpace(){return this._reader.readXWorldSpace()}readYWorldSpace(){return this._reader.readYWorldSpace()}_readX(){return this._reader.readXForDisplay()}_readY(){return this._reader.readYForDisplay()}_readServerCentroid(){return this._reader._readServerCentroid()}readLegacyFeatureForDisplay(){const e=this.readCentroidForDisplay();return{attributes:this.readAttributes(),geometry:this.readLegacyGeometryForDisplay(),centroid:(e&&{x:e.coords[0],y:e.coords[1]})??null}}readLegacyGeometryForDisplay(){const e=this.readGeometryForDisplay();return ps(e,this.geometryType,!1,!1)}readGeometryArea(){return this._reader.readGeometryArea()}readGeometryWorldSpace(){return this._reader.readGeometryWorldSpace()}_readGeometry(){return this._reader._readGeometry()}_readAttribute(e,t){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}_readAttributes(){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}readArcadeFeature(){return this._reader.readArcadeFeature()}geometry(){return this._reader.geometry()}field(e){return this._reader.field(e)}hasField(e){return this._reader.hasField(e)}setField(e,t){return this._reader.setField(e,t)}keys(){return this._reader.keys()}castToText(e=!1){return this._reader.castToText(e)}},N=class{size(){return this.reader.getSize()}get fields(){return this.reader.fields}invalidate(){this._aggregateIndex=null,this._aggregateIndexHash=null,this._spatialIndex=null}queryFeaturesInBounds(r){const e=this._getSpatialIndex().search(r);return Fr.from(this.reader,e)}getAggregateIndex(r){const e=JSON.stringify(r);if(e!==this._aggregateIndexHash){switch(this._aggregateIndexHash=e,r.type){case"grid":this._aggregateIndex=new gr(r);break;case"geohash":this._aggregateIndex=new kr(r)}this._aggregateIndex.insert(this.reader,this.isTiled)}return this._aggregateIndex}_getSpatialIndex(){return this._spatialIndex||(this._spatialIndex=br.fromReader(this.reader)),this._spatialIndex}},Ee=class extends N{constructor(r,e){super(),this.metadata=r,this.removed=new Set,this.overriddenIds=new Set,this._features=[],this.chunkId=e,this.normalizedChunkId=e}get reader(){return F.fromOptimizedFeatures(this._features,this.metadata)}get queryInfo(){return{}}get first(){return!1}get end(){return!1}get isTiled(){return!1}applyOverrides(r){super.invalidate();const{reader:e,removed:t}=r,s=[],i=new Set,n=e.getCursor(),a=new Set(t);for(this.overriddenIds.clear();n.next();){const o=n.readOptimizedFeatureWorldSpace(),h=o.objectId;s.push(o),i.add(h),this.overriddenIds.add(h),this.removed.delete(h)}for(const o of this._features){const h=o.objectId;a.has(h)||i.has(h)||(s.push(o),this.overriddenIds.add(h))}this._features=s;for(const o of i.values())this.removed.delete(o);for(const o of t)this.removed.add(o),this.overriddenIds.add(o)}removeOverrides(r){this.invalidate();const e=r.reader.getCursor(),t=new Set;for(;e.next();){const s=e.getObjectId();this.overriddenIds.has(s)&&(t.add(s),this.overriddenIds.delete(s))}this._features=this._features.filter(s=>!t.has(s.objectId))}getTileReader(r){if(!this._features.length)return null;const e=this.queryFeaturesInBounds(r.bounds);return e.setTransformForDisplay(r.transform),e}},Cr=class extends ke{},Tr=class extends gt{constructor(r,e,t){super(r,e),this._timeZone=t,this.handledChunks=new Set,this.handledChunksForIdCreation=new Set,this.handledChunksForAttributeData=new Set,this._streamLayerDeferredObjectIdsToRemove=[]}destroy(){super.destroy();for(const r of this._source.chunks())this._cleanupChunkIds(r)}invalidateAttributeData(){this.handledChunksForAttributeData.clear()}onSubscribe(r){super.onSubscribe(r),this._evalOptions=r.tile.createArcadeEvaluationOptions(this._timeZone)}createState(r){return new Cr(r)}get aggregateQueryEngine(){return null}displayMap(r,e,t){const s=new Map(r.map(n=>[e(n),n])),i=[];for(const n of this._source.chunks()){const a=n.reader.getCursor();for(;a.next();){const o=a.getObjectId(),h=a.getDisplayId(),d=s.get(o);if(d!=null){const l=t(h,d,o);i.push(l),s.delete(o)}}}return i}getDisplayFeatures(r){const e=new Set(r),t=new Set,s=[];for(const i of this._source.chunks()){const n=i.reader.getCursor();for(;n.next();){const a=n.getObjectId(),o=n.getDisplayId();e.has(o)&&!t.has(a)&&(s.push({...n.readLegacyFeatureWorldSpace(),displayId:o}),t.add(a))}}return{features:s,aggregates:[]}}async*applyLocalEdit(r){const e=[],t=r.reader.getCursor();for(;t.next();){const a=t.getObjectId();e.push(a);const o=this._attributeStore.createDisplayIdForObjectId(a);t.setDisplayId(o),this._attributeStore.setAttributeData(o,t,this._evalOptions)}const s=this.getDisplayIds(e),i=this.getDisplayIds(r.removed),n=new Ee(this._source.metadata,"localEdit");n.applyOverrides(r),this.handledChunks.add(n.chunkId),this.handledChunksForAttributeData.add(n.chunkId),this.handledChunksForIdCreation.add(n.chunkId);for(const a of this._sendStates.values())a.handledChunks.add(n.chunkId),yield new Ce(a.subscription,null,s,!1,n.queryInfo);for(const a of this._sendStates.values()){const o=n.getTileReader(a.subscription.tile);yield new Ce(a.subscription,o,i,!1,n.queryInfo)}for(const a of r.removed)this._attributeStore.releaseDisplayIdForObjectId(a)}async*updateChunks(){if(this._source.chunks().length){await this._updateAttributeData();for(const r of this._sendStates.values())yield*this._update(r)}}removeChunks(r){for(const e of r)this.handledChunks.delete(e.chunkId),this.handledChunksForAttributeData.delete(e.chunkId),this._cleanupChunkIds(e)}afterUpdateChunks(){for(const r of this._streamLayerDeferredObjectIdsToRemove)this._attributeStore.releaseDisplayIdForObjectId(r);this._streamLayerDeferredObjectIdsToRemove=[]}_cleanupChunkIds(r){if(this.handledChunksForIdCreation.has(r.chunkId)){const e=r.reader.getCursor();for(;e.next();){const t=e.getObjectId();this._source.isStream?this._streamLayerDeferredObjectIdsToRemove.push(t):this._attributeStore.releaseDisplayIdForObjectId(t)}this.handledChunksForIdCreation.delete(r.chunkId)}}async _updateAttributeData(){for(const r of this._source.chunks()){const{chunkId:e,reader:t}=r;if(!this.handledChunksForIdCreation.has(e)){this.handledChunksForIdCreation.add(e);const s=t.getCursor();for(;s.next();){const i=this._attributeStore.createDisplayIdForObjectId(s.getObjectId());s.setDisplayId(i)}}}for(const r of this._source.chunks())if(!this.handledChunksForAttributeData.has(r.chunkId)){this.handledChunksForAttributeData.add(r.chunkId);const e=r.reader.getCursor();for(;e.next();){const t=e.getDisplayId();this._attributeStore.setAttributeData(t,e,this._evalOptions)}}}*_update(r){const{subscription:e,handledChunks:t}=r;for(const s of this._source.chunks()){const{chunkId:i}=s;if(t.has(i))continue;t.add(i);const n=s.getTileReader(e.tile);n&&(yield new Fe(r.subscription,n,!1,s.end,s.queryInfo))}}},Mr=class{constructor(r,e){this._connection=r,this._source=e,this._version=1,this._registry=new Gs,this._proxy=new js({fetch:(t,s)=>this._connection.layerView.fetch(t,s),fetchDictionary:(t,s)=>this._connection.layerView.fetchDictionary(t,s)}),this._attributeStore=new Ds({isLocal:!1,update:t=>ce(this._connection.container.updateAttributeView(t))})}destroy(){this._proxy.destroy(),this._strategy?.destroy(),this._attributeStore.destroy()}get aggregateQueryEngine(){return this._strategy?.aggregateQueryEngine}getDisplayFeatures(r){return this._strategy?this._strategy.getDisplayFeatures(r):{features:[],aggregates:[]}}getFeatureObjectIdsForAggregate(r){return this._strategy?this._strategy.getFeatureObjectIdsForAggregate(r):[]}onSubscribe(r){this._strategy?.onSubscribe(r)}onUnsubscribe(r){this._strategy?.onUnsubscribe(r)}async update(r,e,t,s,i){const n=r.processor,a=Y(this._schema?.storage,n.storage),o=Y(this._schema?.mesh.properties,n.mesh.properties),h=Y(this._schema?.mesh.factory,n.mesh.factory),d=Y(this._schema?.mesh.strategy,n.mesh.strategy),l=o||h||d;if(!(a||l)&&!s)return;I("esri-2d-update-debug")&&console.debug(`Version[${this._version}] SymbolProcessor.update`,{changes:Ye(this._schema,n),schema:n}),this._schema=n;const u=M.fromJSON(this._source.service.outSpatialReference),p=new ye({fields:this._source.metadata.fieldsIndex,spatialReference:u});if(await this._attributeStore.update(n.storage,p,this._source.metadata,u,e),this._strategy?.invalidateAttributeData(),!s&&!l)return;(d||o)&&await this._updateStrategy(n.mesh.strategy,u,i,n.mesh.properties.timeZone),this._updateSortKey(p,"sortKey"in n.mesh.properties?n.mesh.properties.sortKey:null);const _=new rr(p,this._proxy,t,this._registry);return(h||n.mesh.factory.symbology.type==="dictionary")&&(this._factory=await sr.create(_,n.mesh.factory)),this._invalidate(),this._version=e,this._connection.container.updateRenderState(this._version)}async applyLocalEdit(r){if(!this._strategy)return;const e=this._strategy.applyLocalEdit(r);for await(const t of e)try{await this._process(t)}catch{}}async updateChunks(){await this._doUpdateChunks(),this._strategy?.afterUpdateChunks()}async removeChunks(r){this._strategy?.removeChunks(r),this._attributeStore.incrementDisplayIdGeneration()}updateHighlight({highlights:r}){if(!this._strategy)return void this._attributeStore.setHighlight(r.map(({objectId:t,highlightFlags:s})=>({objectId:t,highlightFlags:s,displayId:-1})),r);const e=this._strategy.displayMap(r,({objectId:t})=>t,(t,{highlightFlags:s},i)=>({objectId:i,displayId:t,highlightFlags:s}));this._attributeStore.setHighlight(e,r)}async _doUpdateChunks(){if(!this._strategy)return;const r=this._strategy.updateChunks(),e=[],t=new Map;for await(const s of r){let i=t.get(s.id);i==null&&(i=new ir({concurrency:16,process:a=>this._process(a)}),t.set(s.id,i));const n=i.push(s).catch(a=>pe(a));e.push(n)}try{await Promise.all(e)}catch{}I("esri-2d-update-debug")&&console.log("SendUpdates"),this._attributeStore.sendUpdates(),I("esri-2d-update-debug")&&console.log("SendUpdates.await")}async _updateStrategy(r,e,t,s){switch(this._strategy?.destroy(),r.type){case"feature":this._strategy=new Tr(this._source,this._attributeStore,s);break;case"binning":this._strategy=await ar.create(r,e,this._source,this._attributeStore,s);break;case"cluster":this._strategy=await Ir.create(this._connection,r,e,this._source,this._attributeStore,s)}for(const i of t)this._strategy.onSubscribe(i)}async _updateSortKey(r,e){if(this._sortInfo=Xe(this._sortInfo?.computed),e!=null){const t=e.byRenderer?null:await r.createComputedField(e);this._sortInfo={...e,computed:t}}}_invalidate(){this._strategy&&this._strategy.invalidate()}async _process(r){const e=r.subscription;if(I("esri-2d-update-debug")){const o=e.tile;console.debug(`Version[${this._version}] Tile[${o.key.id}, end=${r.end}] Processor._process`)}await this._fetchResources(r),W(e.signal);const t=await this._write(r,e.tile.createArcadeEvaluationOptions(this._schema?.mesh.properties.timeZone)),s=e.tile.tileInfoView.tileInfo.isWrappable,{message:i,transferList:n}=t.serialize(s),a={objectIdMap:null,inner:r.createMessage(i,this._version,this._attributeStore.epoch)};if(this._schema?.mesh.properties.returnMeshObjectId){a.objectIdMap={};const o=r.reader?.getCursor();if(o)for(;o.next();)a.objectIdMap[o.getDisplayId()]=o.getObjectId()}if(W(e.signal),await this._connection.container.onMessage(a,{signal:e.signal,transferList:n}),this._attributeStore.sendUpdates(),I("esri-2d-update-debug")){const o=e.tile;console.debug(`Version[${this._version}] Tile[${o.key.id}, end=${r.end}] Processor._process.await`)}}async _fetchResources(r){await this._fetchMatcherResources(r),await this._fetchWriterResources(r)}async _fetchMatcherResources(r){if(r.reader)return this._factory.enqueueMatcherRequests(this._proxy,r.reader)}async _fetchWriterResources(r){if(!r.reader)return;const e=r.reader.getCursor(),t=r.subscription.tile.createArcadeEvaluationOptions(this._schema.mesh.properties.timeZone);for(;e.next();)this._factory.enqueueWriterRequests(this._proxy,e,t);await this._proxy.fetchEnqueuedResources()}async _write(r,e){const t=r.subscription.tile,s=r.reader?.getCursor(),i=s?.getSize()??0,n=t.tileInfoView.tileInfo.isWrappable,a=new Xs(t.key,this._strategy.enablePixelBuffering,n,i);if(!s)return a;const o=t.createArcadeEvaluationOptions(this._schema.mesh.properties.timeZone);for(;s.next();){const h=this._getSortKeyValue(s,e);a.entityStart(s.getDisplayId(),h),this._factory.write(a,this._proxy,s,o,t.level),a.entityEnd()}return a}_getSortKeyValue(r,e){if(!this._sortInfo)return 0;const{computed:t,order:s,byRenderer:i}=this._sortInfo,n=i?this._factory.getSortKey(r,e):t?.read(r,e);return n==null||isNaN(n)?0:n*(s==="asc"?-1:1)}},qr=class Jt{static from(e){let t=0,s=0,i=0;return e.forEach(n=>{const a=n._readGeometry();a&&(s+=a.isPoint?1:a.lengths.reduce((o,h)=>o+h,0),i+=a.isPoint?1:a.lengths.length,t+=1)}),new Jt(t,s,i)}constructor(e,t,s){this.featureCount=e,this.vertexCount=t,this.ringCount=s}toJSON(){return{featureCount:this.featureCount,ringCount:this.featureCount,vertexCount:this.featureCount}}};const Oe=4;function Er(r,e,t){const s=r.orderByFields??t.objectIdField+" ASC",i=r.source,n={returnCentroid:!(i!==null&&typeof i=="object"&&"path"in i&&fs(i.path))&&t.geometryType==="esriGeometryPolygon",returnGeometry:!0,timeReferenceUnknownClient:t.timeReferenceUnknownClient??void 0,outSpatialReference:M.fromJSON(r.outSpatialReference),orderByFields:[s],where:e.mutable.dataFilter.definitionExpression??"1=1",outFields:e.mutable.availableFields};if(e.type==="feature"){const{gdbVersion:a,historicMoment:o,timeExtent:h}=e.mutable.dataFilter;return{...n,gdbVersion:a,historicMoment:o?new Date(o):null,timeExtent:h?ys.fromJSON(h):null,outFields:e.mutable.availableFields}}return n}let Or=class Kt{static fromSchema(e,t,s){const i=t.type==="feature"?t.mutable.dataFilter.queryScaleRanges:[];return new Kt(Er(e,t,s),i,s.subtypeField,t.mutable.dataFilter.customParameters,s.geometryType,e.queryMetadata)}constructor(e,t,s,i,n,a){this._queryParams=e,this._queryScaleRanges=t,this._subtypeField=s,this._customParameters=i,this._geometryType=n,this._queryMetadata=a}get pageSize(){if(this._queryMetadata==null)throw new Error("InternalError: Service does not support paged queries");const e=this._queryMetadata.supportsMaxRecordCountFactor?Oe:null,t=(this._queryMetadata.maxRecordCount??8e3)*(e??1);return Math.min(8e3,t)}updateHistoricMoment(e){this._queryParams.historicMoment=e}updateFields(e){this._queryParams.outFields=e}createPatchFieldsQuery(e,t){if(!t.getSize())return null;const s=e.clone();if(this._queryParams.outFields[0]==="*"){if((s.outFields??[])[0]==="*")return null;s.outFields=this._queryParams.outFields}else{const i=new Set(this._queryParams.outFields),n=[];for(const a of i)t.hasField(a)||n.push(a);if(n.length===0)return null;s.outFields=n}return s.returnGeometry=!1,s.returnCentroid=!1,s.quantizationParameters=null,s.cacheHint=!0,{inner:s,customParameters:this._customParameters}}createQuery(e={}){if(!this._queryParams)throw new Error("InternalError: queryInfo should be defined");return{inner:new Qe({...this._queryParams,...e}),customParameters:this._customParameters}}createTileQuery(e,t){if(this._queryMetadata==null)throw new Error("InternalError: Service does not support tile queries");const s=this.createQuery(t),i=s.inner;if(this._queryScaleRanges.length){const n=this._queryScaleRanges.filter(a=>(!a.minScale||a.minScale>=e.maxScale)&&(!a.maxScale||a.maxScale<=e.minScale)).map(a=>a.subtypeCode);if(n.length){const a=`${this._subtypeField} IN (${n})`;i.where=gs(i.where,a)}}if(i.quantizationParameters=t.quantizationParameters??e.getQuantizationParameters(),i.resultType="tile",i.geometry=e.extent,this._queryMetadata.supportsQuantization?this._geometryType==="esriGeometryPolyline"&&(i.maxAllowableOffset=e.resolution*I("feature-polyline-generalization-factor")):this._geometryType!=="esriGeometryPolyline"&&this._geometryType!=="esriGeometryPolygon"||(i.maxAllowableOffset=e.resolution,this._geometryType==="esriGeometryPolyline"&&(i.maxAllowableOffset*=I("feature-polyline-generalization-factor"))),i.defaultSpatialReferenceEnabled=this._queryMetadata.supportsDefaultSpatialReference,i.compactGeometryEnabled=this._queryMetadata.supportsCompactGeometry,this._queryMetadata.supportsMaxRecordCountFactor&&(i.maxRecordCountFactor=Oe),I("esri-tiles-debug")){const n=e.id.replaceAll("/",".");s.customParameters=s.customParameters?{...s.customParameters,tileId:n}:{tileId:n}}return s}createPagedTileQuery(e,t){const s=this.pageSize;return this.createTileQuery(e,{start:s*t,num:s,returnExceededLimitFeatures:!0})}createPagedQuery(e){const t=this.pageSize;return this.createQuery({start:t*e,num:t,returnExceededLimitFeatures:!0,maxRecordCountFactor:Oe})}};const Rr=2500;let re=class extends He{constructor(r){super(),this._connection=r,this._enabledEventTypes=new Set,this._updateInfo={websocket:0,client:0},this._lastTime=performance.now(),this._queuedCommands=[],this.addHandles([ge(()=>this._strategy?.connectionStatus??"disconnected",e=>{this._layerView.setProperty({propertyName:"pipelineConnectionStatus",value:e})},{initial:!0}),ge(()=>this._strategy?.errorString||null,e=>this._layerView.setProperty({propertyName:"pipelineErrorString",value:e}),{initial:!0})])}destroy(){this._strategy=null,this.removeAllHandles()}get _layerView(){return this._connection.layerView}set strategy(r){this._strategy==null&&this._resetUpdateInfo(performance.now());const e="event-handles";this.removeHandles(e),r!=null&&(this.addHandles([r.events.on("data-received",t=>this._onFeature(t)),r.events.on("message-received",t=>this._onWebSocketMessage(t)),r.events.on("features-updated",t=>this._onUpdate(t)),r.events.on("tick",()=>this._onTick())],e),this._queuedCommands.forEach(t=>t(r)),this._queuedCommands=[]),this._strategy=r}updateCustomParameters(r){r!=null&&this._callOrEnqueue(e=>e.updateCustomParameters(r))}sendMessageToSocket(r){this._callOrEnqueue(e=>e.sendMessageToSocket(r))}sendMessageToClient(r){this._callOrEnqueue(e=>e.sendMessageToClient(r))}enableEvent(r,e){e?this._enabledEventTypes.add(r):this._enabledEventTypes.delete(r)}disconnect(){this._strategy?.disconnect()}connect(){this._strategy?.connect()}clear(){this._strategy?.clear()}_onWebSocketMessage(r){this._enabledEventTypes.has("message-received")&&this._layerView.emitEvent({name:"message-received",event:r})}_onFeature(r){this._updateInfo.websocket++,this._enabledEventTypes.has("data-received")&&this._layerView.emitEvent({name:"data-received",event:{attributes:r.attributes,centroid:r.centroid,geometry:r.geometry}})}_onUpdate(r){this._updateInfo.client+=r}_onTick(){const r=performance.now(),e=r-this._lastTime;if(e>Rr){const t=Math.round(this._updateInfo.client/(e/1e3)),s=Math.round(this._updateInfo.websocket/(e/1e3));this._resetUpdateInfo(r),this._layerView.emitEvent({name:"update-rate",event:{client:t,websocket:s}})}}_resetUpdateInfo(r){this._lastTime=r,this._updateInfo.client=0,this._updateInfo.websocket=0}_callOrEnqueue(r){this._strategy!=null?r(this._strategy):this._queuedCommands.push(r)}};j([X()],re.prototype,"_strategy",void 0),re=j([Ze("esri.views.2d.layers.features.sources.StreamMessenger")],re);let St=class{constructor(r){this._store=r,this._controller=new AbortController}destroy(){this._controller.abort()}get _options(){return{signal:this._controller.signal}}unsafeSetQueryHistoricMoment(r){throw new Error("InternalError: LoadStrategy does not support query info")}async queryOverride(r){throw new Error("InternalError: LoadStrategy does not support fetching")}async queryByObjectId(r){throw new Error("InternalError: LoadStrategy does not support fetching")}};const Re=268435455;let Ar=class{constructor(){this.hasFeatures=!1,this.exceededTransferLimit=!1,this.fieldCount=0,this.featureCount=0,this.objectIdFieldIndex=0,this.vertexCount=0,this.offsets={attributes:new Array,geometry:new Array},this.centroid=new Array}};function Pr(r,e,t=!1){const s=r.asUnsafe(),i=s.pos(),n=new Ar;let a=0,o=0;const h=1,d=2,l=4,u=3;let p=null,_=null,c=null,g=!1;const f=[];for(;s.next();)switch(s.tag()){case 1:p=s.getString();break;case 3:_=s.getString();break;case 12:c=s.processMessage(Is);break;case 9:if(n.exceededTransferLimit=s.getBool(),n.exceededTransferLimit){n.offsets.geometry=t?new Float64Array(8e3):new Int32Array(8e3),n.centroid=t?new Float64Array(16e3):new Int32Array(16e3);for(let y=0;y<n.centroid.length;y++)n.centroid[y]=Re}break;case 13:{const y=s.processMessage(ms);y.index=a++,f.push(y);break}case 15:{const y=s.getLength(),m=s.pos()+y;if(!n.exceededTransferLimit){const b=n.offsets.geometry,k=n.centroid;b.push(0),k.push(Re),k.push(Re)}!g&&n.exceededTransferLimit&&(g=!0,n.offsets.attributes=t?new Float64Array(8e3*a):new Uint32Array(8e3*a));let v=o*a;for(;s.pos()<m&&s.next();)switch(s.tag()){case h:{g?n.offsets.attributes[v++]=s.pos():n.offsets.attributes.push(s.pos());const b=s.getLength();s.skipLen(b);break}case d:if(e){const b=s.getLength(),k=s.pos()+b;for(;s.pos()<k&&s.next();)switch(s.tag()){case u:{s.getUInt32();const C=s.getSInt64(),T=s.getSInt64();n.centroid[2*o]=C,n.centroid[2*o+1]=T;break}default:s.skip()}}else{n.offsets.geometry[o]=s.pos();const b=s.getLength();n.vertexCount+=b,s.skipLen(b)}break;case l:{const b=s.getLength(),k=s.pos()+b;for(;s.pos()<k&&s.next();)switch(s.tag()){case u:{s.getUInt32();const C=s.getSInt64(),T=s.getSInt64();n.centroid[2*o]=C,n.centroid[2*o+1]=T;break}default:s.skip()}break}default:s.skip()}o++,n.hasFeatures=!0;break}default:s.skip()}const w=p||_;if(!w)throw new E("FeatureSet has no objectId or globalId field name");return n.fields=new Ge(f),n.featureCount=o,n.fieldCount=a,n.objectIdFieldIndex=n.fields.get(w)?.index,n.transform=c,n.displayIds=new Uint32Array(n.featureCount),n.groupIds=new Uint16Array(n.featureCount),s.move(i),n}const jr=!0,xt=268435455,kt=128,Ft=128e3,L={small:{delta:new Int32Array(kt),decoded:new Int32Array(kt)},large:{delta:new Int32Array(Ft),decoded:new Int32Array(Ft)}};function Ct(r){return r<=L.small.delta.length?L.small:(r<=L.large.delta.length||(L.large.delta=new Int32Array(Math.round(1.25*r)),L.large.decoded=new Int32Array(Math.round(1.25*r))),L.large)}function Dr(r){try{const e=new ws(new Uint8Array(r),new DataView(r));for(;e.next();){if(e.tag()===2)return Lr(e.getMessage());e.skip()}}catch(e){const t=new E("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:e});vs.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF").error(t)}return null}function Lr(r){for(;r.next();){if(r.tag()===1)return r.getMessage();r.skip()}return null}function zr(r){const e=r.getLength(),t=r.pos()+e;for(;r.pos()<t&&r.next();)switch(r.tag()){case 1:return r.getString();case 2:return r.getFloat();case 3:return r.getDouble();case 4:return r.getSInt32();case 5:return r.getUInt32();case 6:return r.getInt64();case 7:return r.getUInt64();case 8:return r.getSInt64();case 9:return r.getBool();default:return r.skip(),null}return null}function Ur(r,e,t,s,i,n){return .5*Math.abs(r*s+t*n+i*e-r*n-t*e-i*s)}function Ae(r,e,t,s){return r*s-t*e===0&&r*t+e*s>0}let Wr=class ze extends fe{static fromBuffer(e,t,s=!1){const i=t.geometryType,n=Dr(e),a=Pr(n,i==="esriGeometryPoint",s);return new ze(n,a,t)}constructor(e,t,s){super(s),this._hasNext=!1,this._isPoints=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0,centroid:void 0,legacyFeature:void 0,optFeature:void 0},this._parseCaches=new Array,this._geometryType=s.geometryType,this._reader=e,this._header=t,this._hasNext=t.hasFeatures,this._isPoints=s.geometryType==="esriGeometryPoint"}get _size(){return this._header.featureCount}get fields(){return this._header.fields}get geometryType(){return this._geometryType}get hasZ(){return!1}get hasM(){return!1}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}getSize(){return this._size}getInTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0,this._featureIndex=e}getAttributeHash(){let e="";for(const t of this._header.fields.fields)e+=this._readAttributeAtIndex(t.index)+".";return e}getObjectId(){return this._readAttributeAtIndex(this._header.objectIdFieldIndex)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}readGeometryArea(){return this._cache.area||this._readGeometry(!0),this._cache.area}copy(){const e=this._reader.clone(),t=new ze(e,this._header,this.metadata);return this.copyInto(t),t}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0;++this._featureIndex<this._size&&!this._getExists(););return this._featureIndex<this._size}_readX(){return this._header.centroid[2*this._featureIndex]}_readY(){return this._header.centroid[2*this._featureIndex+1]}_readServerCentroid(){const e=this._header.centroid[2*this._featureIndex],t=this._header.centroid[2*this._featureIndex+1];return e===xt?null:new x([],[e,t])}_readGeometry(e=!1){if(this._cache.geometry===void 0){let t=null;if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===xt)return null;const s=this._header.centroid[2*this._featureIndex],i=this._header.centroid[2*this._featureIndex+1];t=new x([],[s,i])}else{const s=this._header.offsets.geometry[this._featureIndex],i=this._reader;if(s===0)return null;i.move(s);try{t=e?this._parseGeometryForDisplay(i):this._parseGeometry(i)}catch{return null}}return t?.coords.length===0&&(t=null),this._cache.geometry=t,t}return this._cache.geometry}_readAttribute(e,t){const s=this._header.fields.get(e);if(s==null)return;let i=this._readAttributeAtIndex(s.index);this.fields.get(e)?.type==="esriFieldTypeTimestampOffset"&&(i=this.parseTimestampOffset(i));const n=this._header.fields.isDateField(s.name);return t?i==null?i:n?new Date(i):i:i}_readAttributes(){const e={};for(const t of this._header.fields.fields)e[t.name]=this._readAttributeAtIndex(t.index);return e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext,e._parseCaches=this._parseCaches}_readAttributeAtIndex(e){let t=this._parseCaches[e];if(t||(t=new Ls(this.getSize()),this._parseCaches[e]=t),t.has(this._featureIndex))return t.get(this._featureIndex);const s=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],i=this._reader;i.move(s);const n=zr(i);return t.set(this._featureIndex,n),n}_readGeometryDeltaDecoded(e=!1){if(this._cache.unquantGeometry===void 0){const t=this._readGeometry(e);if(!t)return this._cache.unquantGeometry=void 0,null;if(!this.getInTransform())return this._cache.unquantGeometry=t,t;const s=Ct(t.coords.length).decoded,i=t.clone(s),n=i.coords;let a=0;for(const o of i.lengths){for(let h=1;h<o;h++){const d=2*(a+h),l=2*(a+h-1);n[d]+=n[l],n[d+1]+=n[l+1]}a+=o}return this._cache.unquantGeometry=i,i}return this._cache.unquantGeometry}_parseGeometry(e){const t=e.asUnsafe(),s=t.getLength(),i=t.pos()+s,n=[],a=[];for(;t.pos()<i&&t.next();)switch(t.tag()){case 2:{const o=t.getUInt32(),h=t.pos()+o;for(;t.pos()<h;)a.push(t.getUInt32());break}case 3:{const o=t.getUInt32(),h=t.pos()+o;for(n.push(t.getSInt64()),n.push(t.getSInt64()),this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64();t.pos()<h;)n.push(t.getSInt64()),n.push(t.getSInt64()),this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64();break}default:t.skip()}return new x(a,n)}_parseGeometryForDisplay(e){const t=e.asUnsafe(),s=t.getLength(),i=t.pos()+s,n=[],a=[];let o=0,h=0,d=null,l=0;const u=this.geometryType==="esriGeometryPolygon";for(;t.pos()<i&&t.next();)switch(t.tag()){case 2:{const p=t.getUInt32(),_=t.pos()+p;for(;t.pos()<_;){const c=t.getUInt32();n.push(c),o+=c}d=Ct(2*o).delta;break}case 3:{t.getUInt32();const p=2+(this.hasZ?1:0)+(this.hasM?1:0);bs(d);for(const _ of n)if(h+p*_>d.length)for(let c=0;c<_;c++)t.getSInt32(),t.getSInt32(),this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32();else if(u&&jr){const c=this.getAreaSimplificationThreshold(_,this._header.vertexCount);let g=2,f=1;const w=!1;let y=t.getSInt32(),m=t.getSInt32();d[h++]=y,d[h++]=m,this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32();let v=t.getSInt32(),b=t.getSInt32();for(this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32();g<_;){let k=t.getSInt32(),C=t.getSInt32();this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32();const T=y+v,q=m+b;Ur(y,m,T,q,T+k,q+C)>=c?(l+=-.5*(T-y)*(q+m),f>1&&Ae(d[h-2],d[h-1],v,b)?(d[h-2]+=v,d[h-1]+=b):(d[h++]=v,d[h++]=b,f++),y=T,m=q):(k+=v,C+=b),v=k,b=C,g++}f<3||w?h-=2*f:(l+=-.5*(y+v-y)*(m+b+m),Ae(d[h-2],d[h-1],v,b)?(d[h-2]+=v,d[h-1]+=b,a.push(f)):(d[h++]=v,d[h++]=b,a.push(++f)))}else{let c=0,g=t.getSInt32(),f=t.getSInt32();this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32(),d[h++]=g,d[h++]=f,c+=1;for(let w=1;w<_;w++){const y=t.getSInt32(),m=t.getSInt32(),v=g+y,b=f+m;l+=-.5*(v-g)*(b+f),this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32(),w>2&&Ae(d[h-2],d[h-1],y,m)?(d[h-2]+=y,d[h-1]+=m):(d[h++]=y,d[h++]=m,c+=1),g=v,f=b}a.push(c)}break}default:t.skip()}return this._cache.area=l,a.length?new x(a,d):d!=null?this._createQuantizedExtrudedGeometry(d[0],d[1]):null}};class ie{constructor(e,t){this.service=e,this._metadata=t}destroy(){}}function Gr(r,e){switch(r.type){case"memory":return new Br(r,e);case"ogc":return new Yr(r,e);case"feature-service":return r.queryMetadata.supportsFormatPBF&&I("featurelayer-pbf")?new Vr(r,e):new $r(r,e)}}async function Nr(r){const e=new xs;return await e.open(r,{}),e}let Br=class extends ie{constructor(r,e){super(r,e),this._portsOpen=Nr(r.source).then(t=>this.client=t)}destroy(){this.client.close(),this.client=null}async executeQuery(r,e){await this._portsOpen;const t=await this.client.invoke("queryFeatures",r.toJSON(),e);return F.fromFeatureSet(t,this._metadata)}};class Vr extends ie{async executeQuery(e,t){const{data:s}=await Ss(this.service.source,e,t),i=!e.quantizationParameters;return Wr.fromBuffer(s,this._metadata,i)}}class $r extends ie{async executeQuery(e,t){const{source:s,queryMetadata:i}=this.service;if(e.quantizationParameters!=null&&!i.supportsQuantization){const a=e.clone(),o=Je(a.quantizationParameters);a.quantizationParameters=null;const{data:h}=await Ke(s,a,this._metadata.spatialReference,t),d=We(h,this._metadata.objectIdField);return et(o,d),F.fromOptimizedFeatureSet(d,this._metadata)}const{data:n}=await Ke(s,e,this._metadata.spatialReference,t);return this._metadata.geometryType==="esriGeometryPoint"&&(n.features=n.features?.filter(a=>{if(a.geometry!=null){const o=a.geometry;return Number.isFinite(o.x)&&Number.isFinite(o.y)}return!0})),F.fromFeatureSet(n,this._metadata)}}let Yr=class extends ie{async executeQuery(r,e){if(r.quantizationParameters&&!this.service.queryMetadata.supportsQuantization){const s=r.clone(),i=Je(s.quantizationParameters);s.quantizationParameters=null;const n=await ht(this.service.source,r,e);return et(i,n),F.fromOptimizedFeatureSet(n,this._metadata)}const t=await ht(this.service.source,r,e);return F.fromOptimizedFeatureSet(t,this._metadata)}},Tt=class extends St{constructor(r,e,t,s,i){super(t),this._serviceInfo=r,this._queryInfo=e,this._metadata=s,this._connection=i,this._queue=new Ue({concurrency:16,process:async n=>{const a={signal:n.options?.signal,query:n.query.customParameters};return this._adapter.executeQuery(n.query.inner,a)}}),this._adapter=Gr(r,s)}unsafeSetQueryHistoricMoment(r){this._queryInfo.updateHistoricMoment(r)}async updateFields(r){this._queryInfo.updateFields(r);const e=Array.from(this._store.chunks()).map(async s=>{const i=Qe.fromJSON(s.queryInfo.queryJSON);if(i)try{return await this._tryUpdateFields(s.reader,i),null}catch(n){return n}}),t=(await Promise.all(e)).filter(s=>s);if(t.length)throw new E("featurelayer-query","Encountered errors when downloading fields",{errors:t})}async queryByObjectId(r){if(r.length===0)return F.empty(this._metadata);const e=this._queryInfo.createQuery({objectIds:r});return this._fetch(e)}async _fetch(r,e){const t=await this._enqueue(r,e);return await this._tryUpdateFields(t,r.inner),t}async _tryUpdateFields(r,e){const t=this._queryInfo.createPatchFieldsQuery(e,r);if(!t)return;const s=await this._enqueue(t,this._options);r.joinAttributes(s)}async _enqueue(r,e){return this._connection.onEvent({type:"fetchStart"}),this._queue.push({query:r,options:e}).finally(()=>{this._connection.onEvent({type:"fetchEnd",done:this._queue.length===0})})}},Mt=class extends Tt{constructor(){super(...arguments),this._chunksById=new Map}unload(r){this._removeChunks(r.tile)}_addChunk(r){const e=r.tile.id;this._chunksById.has(e)||this._chunksById.set(e,[]);const t=r.size();(t||r.first||r.end)&&(I("esri-2d-update-debug")&&console.debug(`Chunk[${r.chunkId}] ATileLoadStrategy.addChunk [count=${t}]`),this._chunksById.get(e).push(r),this._store.insert(r))}_removeChunks(r){const e=this._chunksById.get(r.key.id)??[];for(const t of e)I("esri-2d-update-debug")&&console.debug(`Tile[${r.key.id}] Chunk[${t.chunkId}] ATileLoadStrategy.removeChunk`),this._store.remove(t);this._chunksById.delete(r.key.id)}},qt=class extends N{constructor(r,e,t,s,i,n){super(),this._reader=r,this._queryJSON=e,this._tile=t,this._sourceTile=s,this._sourceTileDepth=i,this._end=n,this.chunkId=`${this._tile.key.id}.${this._sourceTile?.key.id}${this._end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._sourceTile?.key.normalizedId}${this._end?"e":""}`}get queryInfo(){return{type:"drill-down-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,sourceTileDepth:this._sourceTileDepth,sourceTileId:this._sourceTile?.key.id,size:this.size(),end:this.end}}get first(){return this._sourceTileDepth===0}get reader(){return this._reader}get end(){return this._end}get tile(){return this._tile}get isTiled(){return!0}getTileReader(r){return this._tile.key.id===r.key.id?this.reader:null}},Xr=class{constructor(r,e){this.subscription=r,this._tileIdToResult=new Map,this._controller=new AbortController,this._handles=Q([Z(r.signal,()=>this._controller.abort()),Z(e,()=>this._controller.abort())])}destroy(){this._controller.abort(),this._handles.remove()}get(r){return this._tileIdToResult.get(r)}set(r,e){this._tileIdToResult.set(r,e)}get options(){return{signal:this._controller.signal}}},Qr=class extends Mt{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const r of this._loadStates.values())r.destroy();this._loadStates.clear()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(r){this._loadStates.has(r.key.id)||this._loadStates.set(r.key.id,new Xr(r,this._options));const e=this._loadStates.get(r.key.id);let t;try{for await(const i of this._fetchChunkInfos(e,r.tile,0)){const{queryJSON:n,reader:a,sourceTile:o,sourceTileDepth:h,tile:d}=i,l=new qt(a,n,d,o,h,!1);W(e.options),this._addChunk(l)}}catch(i){t=i}const s=new qt(F.empty(this._metadata),null,r.tile,null,-1,!0);if(this._addChunk(s),t)throw t}unload(r){super.unload(r),this._loadStates.get(r.key.id)?.destroy(),this._loadStates.delete(r.key.id)}async*_fetchChunkInfos(r,e,t){let s=r.get(e.id);const i=!!s;if(s||(s=await this._fetchChunkInfo(r,e,t),r.set(e.id,s)),s.reader.exceededTransferLimit&&t<I("featurelayer-query-max-depth"))for(const n of e.createChildTiles())yield*this._fetchChunkInfos(r,n,t+1);else i||(yield s)}async _fetchChunkInfo(r,e,t){const s=r.subscription.tile.getQuantizationParameters(),i=this._queryInfo.createTileQuery(e,{returnExceededLimitFeatures:!1,quantizationParameters:s});return{reader:await this._fetch(i,r.options),queryJSON:i.inner.toJSON(),tile:r.subscription.tile,sourceTile:e,sourceTileDepth:t}}},Et=class extends N{constructor(r,e,t,s,i){super(),this._reader=r,this._queryJSON=e,this._tile=t,this._page=s,this._end=i,this.chunkId=`${this._tile.key.id}.${this._page}${this.end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._page}${this.end?"e":""}`}get queryInfo(){return{type:"paged-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get reader(){return this._reader}get first(){return this._page===0}get end(){return this._end}get page(){return this._page}get tile(){return this._tile}get isTiled(){return!0}getTileReader(r){return this._tile.key.id===r.key.id?this.reader:null}},Zr=class{constructor(r,e){this.subscription=r,this._pages=new Set,this._controller=new AbortController,this._done=!1,this._handles=Q([Z(r.signal,()=>this._controller.abort()),Z(e,()=>this._controller.abort())])}destroy(){this._controller.abort(),this._handles.remove()}get pageStart(){let r=-1;for(const e of this._pages.values())r=Math.max(r,e);return r+1}get done(){return this._done}get options(){return{signal:this._controller.signal}}add(r,e){this._pages.add(r),this._done=this._done||e}};class Hr extends Mt{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const e of this._loadStates.values())e.destroy();this._loadStates.clear()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){this._loadStates.has(e.key.id)||this._loadStates.set(e.key.id,new Zr(e,this._options));const t=this._loadStates.get(e.key.id);let s;try{await this._fetchPages(t)}catch(n){s=n}const i=new Et(F.empty(this._metadata),null,e.tile,-1,!0);if(ks(t.options)||this._addChunk(i),s)throw s}unload(e){super.unload(e),this._loadStates.get(e.key.id)?.destroy(),this._loadStates.delete(e.key.id)}async _fetchPages(e){let t=0,s=e.pageStart,i=1;for(;t<20&&!e.done;){const n=[];for(let o=0;o<i;o++)n.push(this._fetchChunk(e,s++));const a=await Promise.all(n);for(const o of a)(o.size()!==0||o.first)&&(e.add(o.page,!o.reader.exceededTransferLimit),W(e.options),this._addChunk(o));t++,i=Math.min(i+1,4)}}async _fetchChunk(e,t){const s=e.subscription.tile,i=this._queryInfo.createPagedTileQuery(s,t),n=await this._fetch(i,e.options);return new Et(n,i.inner.toJSON(),s,t,!1)}}let Ot=class extends N{constructor(r,e,t,s){super(),this._reader=r,this._queryJSON=e,this._page=t,this._end=s,this.chunkId=`${this._page}${this.end?"e":""}`,this.normalizedChunkId=this.chunkId}get reader(){return this._reader}get first(){return this._page===0}get end(){return this._end}get queryInfo(){return{type:"snapshot",chunkId:this.chunkId,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(r){const e=this.queryFeaturesInBounds(r.bounds);return e.setTransformForDisplay(r.transform),e}};class Jr extends Tt{constructor(e,t,s,i,n,a){super(e,t,s,n,a),this._random=new tt(1e3),this._featureCount=i}get about(){return{willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}load(e){return this._promise==null&&(this._promise=this._downloadPages(this._featureCount)),this._promise}unload(e){}async _downloadPages(e){const t=Math.ceil(e/this._queryInfo.pageSize),s=Array.from({length:t},(o,h)=>h).sort((o,h)=>this._random.getInt()-this._random.getInt()),i=await Promise.all(s.map(o=>this._downloadPage(o))),n=new Ot(F.empty(this._metadata),null,-1,!0);this._store.insert(n);const a=i.filter(o=>o);if(a.length)throw new E("featurelayer-query","Encountered errors when downloading data",{errors:a})}async _downloadPage(e){try{const t=this._queryInfo.createPagedQuery(e),s=await this._fetch(t,this._options),i=new Ot(s,t.inner.toJSON(),e,!1);return W(this._options),this._store.insert(i),null}catch(t){return t}}}const Kr="__esri_stream_id__",Rt="__esri_timestamp__",At=1e3;class ei{constructor(e,t,s,i,n=128){this._trackIdToObservations=new Map,this._idCounter=0,this._lastPurge=performance.now(),this._addOrUpdated=new Map,this._removed=[],this._maxAge=0,this._timeInfo=s,this._purgeOptions=i,this.store=e,this.objectIdField=t,this.purgeInterval=n,this._useGeneratedIds=this.objectIdField===Kr}removeById(e){this._removed.push(e)}removeByTrackId(e){const t=this._trackIdToObservations.get(e);if(t)for(const s of t.entries)this._removed.push(s)}add(e){if(this._useGeneratedIds){const a=this._nextId();e.attributes[this.objectIdField]=a,e.objectId=a}else e.objectId=e.attributes[this.objectIdField];const t=e.objectId;if(this._addOrUpdated.set(t,e),this._maxAge=Math.max(this._maxAge,e.attributes[this._timeInfo.startTimeField]),!this._timeInfo.trackIdField)return this._trackIdLessObservations==null&&(this._trackIdLessObservations=new dt(1e5)),void this._trackIdLessObservations.enqueue(t);const s=e.attributes[this._timeInfo.trackIdField];if(!this._trackIdToObservations.has(s)){const a=this._purgeOptions?.maxObservations!=null?this._purgeOptions.maxObservations:At,o=Fs(a,0,At);this._trackIdToObservations.set(s,new dt(o))}const i=this._trackIdToObservations.get(s),n=i?.enqueue(t);n!=null&&(this._addOrUpdated.has(n)?this._addOrUpdated.delete(n):this._removed.push(n))}checkForUpdates(){const e=this._getToAdd(),t=this._getToRemove(),s=performance.now();s-this._lastPurge>=this.purgeInterval&&(this._purge(s),this._lastPurge=s);const i=[];if(t!=null)for(const a of t){const o=this.store.removeById(a);o!=null&&i.push(o)}const n=[];if(e!=null){const a=new Set(t??[]);for(const o of e)a.has(o.objectId)||(o.attributes[Rt]=s,this.store.add(o),n.push(o))}return!(!n.length&&!i?.length)&&(this.store.update(n,i),!0)}_getToAdd(){if(!this._addOrUpdated.size)return null;const e=new Array(this._addOrUpdated.size);let t=0;return this._addOrUpdated.forEach(s=>e[t++]=s),this._addOrUpdated.clear(),e}_getToRemove(){const e=this._removed;return this._removed.length?(this._removed=[],e):null}_nextId(){const e=this._idCounter;return this._idCounter=(this._idCounter+1)%4294967294+1,e}_purge(e){const t=this._purgeOptions;t!=null&&(this._purgeSomeByDisplayCount(t),this._purgeByAge(t),this._purgeByAgeReceived(e,t),this._purgeTracks())}_purgeSomeByDisplayCount(e){if(!e.displayCount)return;let t=this.store.size;if(t>e.displayCount){if(this._timeInfo.trackIdField){for(const s of this._trackIdToObservations.values())if(t>e.displayCount&&s.size){const i=s.dequeue();this._removed.push(i),t--}}if(this._trackIdLessObservations!=null){let s=t-e.displayCount;for(;s-- >0;){const i=this._trackIdLessObservations.dequeue();i!=null&&this._removed.push(i)}}}}_purgeByAge(e){const t=this._timeInfo?.startTimeField;if(!e.age||!t)return;const s=60*e.age*1e3,i=this._maxAge-s;this.store.forEach(n=>{n.attributes[t]<i&&this._removed.push(n.objectId)})}_purgeByAgeReceived(e,t){if(!t.ageReceived)return;const s=e-60*t.ageReceived*1e3;this.store.forEach(i=>{i.attributes[Rt]<s&&this._removed.push(i.objectId)})}_purgeTracks(){this._trackIdToObservations.forEach((e,t)=>{e.size===0&&this._trackIdToObservations.delete(t)})}}let z=class extends He{constructor(r){super(r)}get connectionStatus(){return this.connection?.connectionStatus}get errorString(){return this.connection?.errorString}};j([X()],z.prototype,"connection",void 0),j([X()],z.prototype,"connectionStatus",null),j([X()],z.prototype,"errorString",null),z=j([Ze("esri.views.2d.layers.features.sources.StreamConnectionState")],z);let ti=class{constructor(r,e){this._metadata=r,this._onUpdate=e,this._objectIdToFeature=new Map}get size(){return this._objectIdToFeature.size}get reader(){return F.fromFeatures([...this._objectIdToFeature.values()],this._metadata)}add(r){this._objectIdToFeature.set(r.objectId,r)}forEach(r){this._objectIdToFeature.forEach(r)}removeById(r){const e=this._objectIdToFeature.get(r);return e?(this._objectIdToFeature.delete(r),e):null}clear(){this._objectIdToFeature=new Map}update(r,e){this._onUpdate(r?.length??0)}};class si extends N{constructor(e){super(),this._reader=e,this.chunkId="stream-chunk",this.normalizedChunkId="stream-chunk"}get reader(){return this._reader}get first(){return!0}get end(){return!0}get queryInfo(){return{type:"stream",chunkId:this.chunkId,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(e){const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}}class ri extends St{constructor(e,t,s,i,n){super(s),this._service=e,this._dataFilter=t,this._streamOptions=i,this._metadata=n,this._connectionState=new z,this._forceRefresh=!1,this.events=new le;const{objectIdField:a,timeInfo:o}=this._metadata,{purgeOptions:h}=t;this._stagingStore=new ti(this._metadata,d=>this.events.emit("features-updated",d)),this._manager=new ei(this._stagingStore,a,o,h),this.connect()}destroy(){super.destroy(),this.disconnect()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}get connectionStatus(){return this._connectionState.connectionStatus}get errorString(){return this._connectionState?.errorString}async refresh(){const e=this._chunk!=null;this._manager.checkForUpdates()||!e||this._forceRefresh?(this._chunk&&this._store.remove(this._chunk),this._forceRefresh=!1,this._chunk=new si(this._stagingStore.reader),this._store.insert(this._chunk),this.events.emit("tick")):this.events.emit("tick")}async updateFields(e){throw new Error("Updating available fields not supported for StreamLayer")}async load(e){}unload(e){}disconnect(){this._connection=Xe(this._connection),this._connectionState.connection=null,this._handlesGroup?.remove()}connect(){if(this._connection!=null)return;const{geometryType:e,spatialReference:t}=this._metadata,{maxReconnectionAttempts:s,maxReconnectionInterval:i,geometryDefinition:n,definitionExpression:a,customParameters:o}=this._dataFilter;this._connection=Vs(this._service.source,t,this._streamOptions.outSR,e,a,n,s,i,o),this._handlesGroup=Q([this._connection.on("data-received",h=>this._onFeature(h)),this._connection.on("message-received",h=>this._onWebSocketMessage(h))]),this._connectionState.connection=this._connection}clear(){this._manager.checkForUpdates(),this._stagingStore.clear(),this._forceRefresh=!0}updateCustomParameters(e){this._connection?.updateCustomParameters(e)}sendMessageToSocket(e){this._connection?.sendMessageToSocket(e)}sendMessageToClient(e){this._connection?.sendMessageToClient(e)}_onWebSocketMessage(e){if("type"in e)switch(e.type){case"delete":if(e.objectIds)for(const t of e.objectIds)this._manager.removeById(t);if(e.trackIds)for(const t of e.trackIds)this._manager.removeByTrackId(t);break;case"clear":this.clear()}this.events.emit("message-received",e)}_onFeature(e){try{this._manager.add(e),this.events.emit("data-received",e)}catch{}}}class ii{constructor(e){this._onChange=e,this._chunks=new Map,this._chunksToRemove=[],this.events=new le,this.featureAdapter=new zs}destroy(){this.clear()}clear(){for(const e of this._chunks.values())this._chunksToRemove.push(e);this._chunks.clear(),this._localEditChunk!=null&&this._chunksToRemove.push(this._localEditChunk),this._localEditChunk=null}*chunks(){this._localEditChunk&&(yield this._localEditChunk),this._localOverridesChunk&&(yield this._localOverridesChunk),yield*this._chunks.values()}insert(e){I("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.insert`),this._localOverridesChunk?.overriddenIds.size&&(e.reader.removeIds(this._localOverridesChunk.overriddenIds),e.invalidate()),this._localEditChunk?.overriddenIds.size&&this._localEditChunk.removeOverrides(e),this._chunks.set(e.chunkId,e),this.events.emit("changed"),this._onChange()}remove(e){I("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.remove`),this._chunks.delete(e.chunkId),this._chunksToRemove.push(e)}cleanupRemovedChunks(){const e=this._chunksToRemove;return this._chunksToRemove=[],e}applyLocalOverrides(e,t){this._localOverridesChunk==null&&(this._localOverridesChunk=new Ee(t,"localOverride")),this._localOverridesChunk.applyOverrides(e);for(const s of this._chunks.values())s.reader.removeIds(this._localOverridesChunk.overriddenIds),s.invalidate()}applyLocalEdit(e,t){this._localEditChunk==null&&(this._localEditChunk=new Ee(t,"localEdit")),this._localEditChunk.applyOverrides(e);for(const s of this._chunks.values())s.reader.removeIds(this._localEditChunk.overriddenIds),s.invalidate()}forEach(e){const t=new Set;for(const s of this.chunks()){const i=s.reader.getCursor();for(;i.next();){const n=i.getObjectId();t.has(n)||(e(i.copy()),t.add(n))}}}forEachUnsafe(e){const t=new Set;for(const s of this.chunks()){const i=s.reader.getCursor();for(;i.next();){const n=i.getObjectId();t.has(n)||(e(i),t.add(n))}}}forEachInBounds(e,t){const s=new Set;for(const i of this.chunks()){const n=i.queryFeaturesInBounds(e);for(;n.next();){const a=n.getObjectId();s.has(a)||(t(n.copy()),s.add(a))}}}forEachBounds(e,t){const s=_e();for(const i of e)i.getBounds(s)&&t(s)}}class ni{constructor(e,t,s,i,n){this.service=e,this._aggregateAdapter=t,this._subscriptions=s,this._onChange=i,this._connection=n,this._updateTracking=new $s({debugName:"FeatureSource"}),this._didInvalidateData=!1,this._store=new ii(this._onChange),this._metadata=new me(e.metadata)}destroy(){this._strategy?.destroy(),this._store.destroy(),this._streamMessenger?.destroy(),this.service.type==="memory"&&this.service.source.map(e=>e.close())}get metadata(){if(!this._metadata)throw new Error("InternalError: Metadata not defined. Was update called?");return this._metadata}get store(){return this._store}get streamMessenger(){return this._streamMessenger==null&&this._initStreamMessenger(),this._streamMessenger}get statistics(){return qr.from(this._store)}get updateTracking(){return this._updateTracking}get queryEngine(){if(!this._queryEngine){if(!this._schema)return null;const{dataFilter:e}=this._schema.mutable,t=this._schema.mutable.availableFields,s=this._metadata;this._queryEngine=new ot({featureStore:this._store,fieldsIndex:s.fieldsIndex,geometryType:s.geometryType,objectIdField:s.objectIdField,hasM:!1,hasZ:!1,spatialReference:this.service.outSpatialReference,cacheSpatialQueries:!0,aggregateAdapter:this._aggregateAdapter,timeInfo:s.timeInfo,definitionExpression:e.definitionExpression,availableFields:t})}return this._queryEngine}get isStream(){return this._schema.type==="stream"}chunks(){return Array.from(this._store.chunks())}cleanupRemovedChunks(){return this._store.cleanupRemovedChunks()}onSubscribe(e){this._connection.onEvent({type:"subscribe",tile:e.tile.id});const t=this._strategy?.load(e);t&&(t.then(()=>this._connection.onEvent({type:"loaded",tile:e.tile.id})).catch(s=>this._connection.onEvent({type:"error",tile:e.tile.id,error:s})),this._updateTracking.addPromise(t))}onResume(e){this._updateTracking.addPromise(st(this._strategy?.load(e)))}onUnsubscribe(e){this._connection.onEvent({type:"unsubscribe",tile:e.tile.id}),this._strategy?.unload(e)}getLocalEdit(e){return this._updateTracking.addPromise(this._getGetLocalEdit(e))}applyLocalEdit(e){this._didInvalidateData=!0,this._store.applyLocalEdit(e,this.metadata)}async update(e,t){const s=e.source,i=Ye(this._schema?.mutable,s.mutable);if(!i)return!1;if(I("esri-2d-update-debug")&&console.debug(`Version[${t}] FeatureSource.update`,{changes:i}),this._schema=s,this._queryEngine?.destroy(),this._queryEngine=null,this.service.type==="feature-service"&&this.service.queryMetadata.lastEditDate!=null&&(this._lastEditDate=this.service.queryMetadata.lastEditDate),this._streamMessenger==null&&this._schema.type==="stream"&&this._initStreamMessenger(),rt(i,"sourceRefreshVersion")&&this._strategy?.refresh)return await this._strategy.refresh(),!0;if(s.type==="feature"&&rt(i,"availableFields")){if(await this._queryLastEditDateChanged()||this._didInvalidateData)this._didInvalidateData=!1,await this._updateStrategy(t);else{this._connection.onEvent({type:"updateFieldsStart"});try{await this._strategy.updateFields(s.mutable.availableFields),this._connection.onEvent({type:"updateFieldsEnd"})}catch(n){this._connection.onEvent({type:"updateFieldsError",error:n})}}return!1}return!(!it(i,"dataFilter")&&!it(i,"sourceRefreshVersion"))&&(await this._updateStrategy(t),!0)}_initStreamMessenger(){this._streamMessenger==null&&(this._streamMessenger=new re(this._connection))}async _getGetLocalEdit(e){if(e.historicMoment&&this._schema.type==="feature"&&(this._schema.mutable.dataFilter.historicMoment=e.historicMoment,this._strategy.unsafeSetQueryHistoricMoment(new Date(e.historicMoment))),e.type==="edit-by-feature"){const i=[...e.added,...e.updated].map(n=>A.fromJSON(n,this.metadata.objectIdField));return{reader:F.fromOptimizedFeatures(i,this.metadata),removed:this._resolveIdentifiers(e.removed)}}const t=this._resolveIdentifiers(e.removed);if(!e.updated.length&&!e.added.length)return{reader:F.empty(this.metadata),removed:t};const s=this._resolveIdentifiers([...e.added,...e.updated]);return{reader:await this._strategy.queryByObjectId(s),removed:t}}_resolveIdentifiers(e){const t=[],s=[];for(const i of e)i.objectId!=null&&i.objectId!==-1?s.push(i.objectId):t.push(i.globalId);if(t.length){const i=new Set(t),n=this.metadata.globalIdField;if(n==null)throw new Error("InternalError: Recieved an edit with globalIds, but not supported by the service");this._store.forEachUnsafe(a=>{const o=a.readAttribute(n);i.has(o)&&s.push(a.getObjectId())})}return s}async _queryLastEditDateChanged(){if(this._lastEditDate==null)return!1;const e=this.service.source,t={...e.query,f:"json"},s=(await Cs(e.path,{query:t,responseType:"json"})).data.editingInfo.lastEditDate;return s!==this._lastEditDate&&(this._lastEditDate=s,!0)}async _createStrategy(){const e="isSourceHosted"in this.service&&this.service.isSourceHosted,t=Array.isArray(this.service.source),s=this.service.source&&"collection"in this.service.source,i=e||t||s;if(this._schema.type==="stream"){const h=new ri(this.service,this._schema.mutable.dataFilter,this._store,{outSR:this.service.outSpatialReference},this.metadata);return this._streamMessenger.strategy=h,h}const n=this.service,a=Or.fromSchema(n,this._schema,this._metadata),o=await this._supportSnapshotMode(n,a);return o?new Jr(n,a,this._store,o.featureCount,this.metadata,this._connection):i?new Hr(n,a,this._store,this.metadata,this._connection):new Qr(n,a,this._store,this.metadata,this._connection)}async _updateStrategy(e){const t=await this._createStrategy();this._connection.onEvent({type:"updateStrategyStart",about:t.about});const s=!!this._strategy;this._store.clear(),this._strategy?.destroy(),this._strategy=t,I("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategy`,{strategy:t});const i=Array.from(this._subscriptions.values());if(!i.length)return void this._connection.onEvent({type:"updateStrategyEnd"});const n=Promise.all(i.map(a=>this._strategy.load(a).then(()=>this._connection.onEvent({type:"loaded",tile:a.tile.id})).catch(o=>this._connection.onEvent({type:"error",tile:a.tile.id,error:o}))));this._updateTracking.addPromise(n);try{s&&await n}catch(a){pe(a)}this._connection.onEvent({type:"updateStrategyEnd"}),I("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategyEnd`,{strategy:t})}async _supportSnapshotMode(e,t){const{queryMetadata:s}=e,i=s.snapshotInfo;if(!i||!i.supportsSnapshotMinThreshold||!i.snapshotCountThresholds)return null;const n=e.source,a=t.createQuery();a.inner.orderByFields=[],a.inner.returnGeometry=!1;const o=(await Ts(n,a.inner,{query:a.customParameters})).data.count,{min:h,max:d}=i.snapshotCountThresholds;return o<=h||i.supportsSnapshotMaxThreshold&&o<d?{featureCount:o}:null}}class ai{constructor(e,t){this.tile=e,this.version=t,this._abortController=new AbortController}get key(){return this.tile.key}get signal(){return this._abortController.signal}abort(){this._abortController.abort()}}class ne{constructor(e){this.inner=e,this.resolver=As()}}class oi{constructor(){this._aggregateAdapter={getFeatureObjectIds:e=>this._processor.getFeatureObjectIdsForAggregate(e)},this._subscriptions=new Map,this._updateRequested=!1,this._updateSubscriptionRequests=[],this._updateHighlightRequests=[]}destroy(){this._subscriptions.clear(),this._processor.destroy(),this._source.destroy(),this._handles.remove(),this._updateLocalEditsRequest=null,this._tileInfoView=null}onAttach(e){I("esri-2d-update-debug")&&console.debug("Pipeline.onAttach");const t=this._connection,s=Ms.fromJSON(e.tileInfoJSON);this._tileInfoView=new qs(s),this._source=new ni(e.service,this._aggregateAdapter,this._subscriptions,()=>this._requestUpdate(),t),this._processor=new Mr(t,this._source),this._handles=Q([ge(()=>this._source.updateTracking.updating,()=>{this._requestUpdate(),st(this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0}))})])}onDetach(){I("esri-2d-update-debug")&&console.debug("Pipeline.onDetach"),this.destroy()}set remoteClient(e){this._connection=new Ys(e)}get features(){const e=this._source?.queryEngine;if(!e)throw new E("no-queryEngine","No query engine defined");return e}get aggregates(){const e=this._processor?.aggregateQueryEngine;if(!e)throw new E("no-queryEngine","No aggregate query engine defined");return e}get processor(){return this._processor}get streamMessenger(){return this._source.streamMessenger}getDisplayFeatures(e){return this._processor.getDisplayFeatures(e)}async updateSchema(e,t){return I("esri-2d-update-debug")&&this._updateSchemaRequest&&console.error("InternalError: Schema already updating"),this._updateSchemaRequest=new ne({schema:e,version:t}),this._requestUpdate(),this._updateSchemaRequest.resolver.promise}updateSubscriptions(e){const t=new ne(e);return this._updateSubscriptionRequests.push(t),this._requestUpdate(),t.resolver.promise}updateHighlight(e){const t=new ne(e);return this._updateHighlightRequests.push(t),this._requestUpdate(),t.resolver.promise}async onEdits(e){if(this._updateLocalEditsRequest!=null)throw new E("InternalError - Already processing an edit");this._updateLocalEditsRequest=new ne(e);const t=this._updateLocalEditsRequest.resolver.promise;return this._requestUpdate(),t}queryStatistics(){return this._source.statistics.toJSON()}async queryVisibleFeatures(e,t){return this.features.executeQuery(e,t)}async queryHeatmapStatistics(e){const t=Math.round(Es(e.radius));let s=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY;const n=typeof e.fieldOffset=="string",a=e.fieldOffset??0,o=Array.from(this._subscriptions.values()),h=this._source.chunks(),d=t**2,l=3/(Math.PI*d),u=2*t,p=Math.ceil(S/u);for(const _ of o){const c=_.tile,g=new Float64Array(p*p);for(const f of h){const w=f.getTileReader(c);if(!w)continue;const y=w.getCursor();for(;y.next();){let m=1;if(e.field!=null){const B=y.readAttribute(e.field);m=n?-1*+B:+B+a}const v=y.readXForDisplay()/u,b=y.readYForDisplay()/u,k=Math.floor(v),C=Math.floor(b);if(k<0||C<0||k>=p||C>=p)continue;const T=((.5+k-v)*u)**2+((.5+C-b)*u)**2;if(T>d)continue;const q=m*(l*(1-T/d)**2);g[C+k*p]+=q}}for(let f=0;f<g.length;f++)s=Math.min(s,g[f]),i=Math.max(i,g[f])}return{max:i,min:s}}async getSampleFeatures(e){const t=this._source.chunks();if(t.reduce((h,d)=>h+d.size(),0)<=e.minFeatureCount){if(!this._source.updateTracking.updating){const h=[];return this._source.store.forEachUnsafe(d=>h.push(d.readLegacyFeatureWorldSpace())),h}return null}const s=new Set,i=[],n=t.map(h=>h.reader.getCursor()),a=new tt,o=3*e.sampleSize;for(let h=0;h<o&&i.length<e.sampleSize;h++){const d=n[a.getIntRange(0,t.length-1)];if(d.getSize()===0)continue;const l=a.getIntRange(0,d.getSize()-1);d.setIndex(l);const u=d.getObjectId();s.has(u)||(s.add(u),i.push(d.readLegacyFeatureWorldSpace()))}return i.length>=e.sampleSize?i:null}_requestUpdate(){this._updateRequested||(this._updateRequested=!0,Os(()=>this._scheduleNextUpdate()))}_scheduleNextUpdate(){this._updateRequested&&(this._ongoingUpdate||(this._ongoingUpdate=ce(this._doUpdate()).finally(()=>{this._ongoingUpdate=null,this._scheduleNextUpdate()}),this._updateRequested=!1))}_subscribe(e){const t=e.tileId;if(this._subscriptions.has(t))return;I("esri-2d-update-debug")&&console.debug(`Tile[${t}] Pipeline.subscribe`);const s=new Rs(this._tileInfoView,t),i=new ai(s,e.version);this._subscriptions.set(t,i),this._source.onSubscribe(i),this._processor.onSubscribe(i)}_unsubscribe(e){const t=this._subscriptions.get(e);t&&(I("esri-2d-update-debug")&&console.debug(`Tile[${e}] Pipeline.unsubscribe`),t.abort(),this._source.onUnsubscribe(t),this._processor.onUnsubscribe(t),this._subscriptions.delete(t.key.id))}async _doUpdate(){if(I("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateStart"),await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0}),this._updateSubscriptionRequests.length){const i=this._updateSubscriptionRequests;this._updateSubscriptionRequests=[];for(const n of i)this._doUpdateSubscriptions(n.inner),n.resolver.resolve()}const e=this._updateSchemaRequest;if(this._updateSchemaRequest=null,e!=null){const{schema:i,version:n}=e.inner;await this._doUpdateSchema(i,n)}const t=this._updateLocalEditsRequest;if(this._updateLocalEditsRequest=null,t!=null){I("esri-2d-update-debug")&&console.debug("Pipeline.applyEditOverride",t.inner);const i=await this._source.getLocalEdit(t.inner);await this._processor.applyLocalEdit(i),this._source.applyLocalEdit(i),I("esri-2d-update-debug")&&console.debug("Pipeline.endEditOverride",t.inner)}if(this._updateHighlightRequests.length){const i=this._updateHighlightRequests;this._updateHighlightRequests=[];for(const n of i)this._processor.updateHighlight(n.inner),n.resolver.resolve()}const s=this._source.cleanupRemovedChunks();this._processor.removeChunks(s);try{this._subscriptions.size&&(I("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksStart"),await this._processor.updateChunks(),I("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksEnd"))}catch(i){pe(i)}t?.resolver.resolve(),e?.resolver.resolve(),this._updateRequested?(I("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=true]"),await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0})):(I("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=false, After flush]"),await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:this._updateRequested}))}async _doUpdateSchema(e,t){I("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateStart`,{schema:e});const s={tileInfo:this._tileInfoView?.tileInfo},i=await this._source.update(e,t),n=Array.from(this._subscriptions.values());await this._processor.update(e,t,s,i,n),I("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateEnd`)}_doUpdateSubscriptions(e){I("esri-2d-update-debug")&&console.debug("Pipeline.updateSubscriptions",e);for(const t of e.subscribe)this._subscribe(t);for(const t of e.unsubscribe)this._unsubscribe(t)}}export{oi as default};
