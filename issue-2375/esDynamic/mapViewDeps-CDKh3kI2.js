import{pi as Dt,pj as Lt,pk as k,pl as Nt,k8 as ne,pm as Ut,pn as me,po as M,pp as Pe,pq as Te,pr as ie,aQ as Xe,ad as $e,ps as fe,pt as Ce,pu as Ye,pv as Vt,pw as Gt,px as Ht,py as Wt,cN as $,pz as qt,pA as jt,D as Ee,pB as B,jx as Xt,cP as $t,fa as Ke,eH as Yt,fj as Kt,ac as V,oO as Jt,pC as Qt,oP as Zt,ge as ei,jk as ti,pD as ii,fh as P,pE as ri,f6 as si,a2 as le,mY as Je,jT as ai,my as oi,s as Y,nj as ni,dm as Re,M as Qe,a4 as li,ag as hi,f4 as ci,aI as ze,bG as Fe,fo as ke,mP as ui,bM as Ze,bN as di,bK as pi,m7 as _i,m9 as mi,kH as fi,iq as gi,pF as yi,pG as vi,mA as et,pH as bi,ft as wi,ka as xi,Z as Mi,fb as Oi,S as Be,T as Si,aP as tt,cY as Pi,pI as Ti}from"./main-C02UbYD7.js";import{y as Ci,b as re,z as Ei,t as Ri,G as zi,I as Fi}from"./UpdateTracking2D-Dbow3jYu.js";import{i as ge}from"./enums-BsbtGCGp.js";import{m as it,a as rt,l as ki,c as Bi}from"./SDFHelper-D8YEDp87.js";import{l as st}from"./PieChartMeshWriter-DHDfWlls.js";import{s as Ai,i as at,t as G,n as Ae,l as Ii,m as ot,u as Di,o as Li,L as Ie,H as he,I as Ni,S as nt,T as Ui,W as Vi,X as Gi,w as Hi}from"./definitions-Doe0g1C2.js";import{A as ye,E as D,t as Wi,i as qi,o as lt,h as ji,s as Xi}from"./Container-opHDNgle.js";import{d as $i,e as ht,a as W,c as ct,h as ut,i as Yi,m as Ki}from"./WGLContainer-DpYvmPLF.js";import{L as A}from"./enums-qHpGJ28Q.js";import{a as Ji,e as ve,o as De}from"./ProgramTemplate-zI547AoJ.js";import{glslifyDefineMap as be}from"./webglDeps-Da-JVdMK.js";import{e as dt,r as Qi,t as Zi,a as er,n as tr,b as ir,c as rr}from"./MagnifierPrograms-gHYFEO3-.js";import{d as sr,y as ar}from"./MagnifierPrograms-gHYFEO3-.js";import{c as Le,E as L,i as Ne,s as or}from"./Program-kooLQgoA.js";import{R as v,E as ce,F as Ue,G as z,D as E,L as N,O as Ve,I as Ge,C as pt,B as He,U as _t,T as mt,N as We,P as nr}from"./enums-DDkmfb-t.js";import{o as lr,y as hr}from"./RenderingContext-BqQkoF4X.js";import{p as cr,s as ur}from"./imageUtils-CQXEtJq3.js";import{e as dr,i as pr}from"./rasterizingUtils-_u6zbwbK.js";import{t as U}from"./Rect-DD6XS68q.js";import{e as R,c as H}from"./Texture-BNs5xfWp.js";import{o as _r}from"./floatRGBA-BLC568ta.js";import{j as mr,M as fr,y as gr}from"./LabelMetric-BYq7UFJE.js";import{f as yr}from"./utils-B9vCU6Yh.js";import{t as ft}from"./VertexElementDescriptor-BAy1DPb3.js";import{T as vr,w as br}from"./FeatureCommandQueue-CZzTPMLL.js";import{W as wr}from"./MeshWriterRegistry-B6cRyTw8.js";import{V as xr}from"./GraphicsView2D-RmB8rv3h.js";import{t as Mr}from"./GraphicContainer-CQ0qcVit.js";import{t as gt}from"./requestImageUtils-xoP4MAkE.js";const Or=()=>Ee.getLogger("esri.symbols.cim.cimAnalyzer");function Sr(i){const e=i.markerPlacement;return e&&e.angleToLine?ge.MAP:ge.SCREEN}class Pr{constructor(e){this._cimLayers=[],this._poMap={},this._primitiveOverrides=[],e&&(this._resourceManager=e)}analyzeSymbolReference(e,t,r){if(this._cimLayers=r??[],!e)return this._cimLayers;if(this._reset(),e.primitiveOverrides){this._primitiveOverrides=e.primitiveOverrides;for(const s of this._primitiveOverrides){const a=s.valueExpressionInfo;if(a)this._setPoMap(s.primitiveName,s.propertyName,a);else if(s.value!=null){let o=s.value;s.propertyName.includes("Color")&&(Dt(o)&&(o=Lt(o)),o=k(o)),this._setPoMap(s.primitiveName,s.propertyName,o)}}}return this._analyzeSymbol(e.symbol,t),this._cimLayers}_reset(){this._cimLayers=[],this._poMap={},this._primitiveOverrides=[]}_analyzeSymbol(e,t){switch(e?.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":this._analyzeMultiLayerSymbol(e,t)}}_analyzeMultiLayerSymbol(e,t){const r=e?.symbolLayers;if(!r)return;const s=e.effects;let a=ge.SCREEN;const o=Nt(e)??0;e.type==="CIMPointSymbol"&&e.angleAlignment==="Map"&&(a=ge.MAP);const n=e.type==="CIMPolygonSymbol";let l=r.length;for(;l--;){const h=r[l];if(!h||h.enable===!1)continue;let u;s?.length&&(u=[...s]);const c=h.effects;c?.length&&(s?u.push(...c):u=[...c]);let d=null;if(u){d=[];for(const _ of u){const m=ne.findEffectOverrides(_,this._primitiveOverrides);m&&d.push(m)}}const p=[];switch(ne.findApplicableOverrides(h,this._primitiveOverrides,p),h.type){case"CIMSolidFill":this._analyzeSolidFill(h,d);break;case"CIMPictureFill":this._analyzePictureFill(h,d);break;case"CIMHatchFill":this._analyzeHatchFill(h,d);break;case"CIMGradientFill":this._analyzeGradientFill(h,d);break;case"CIMSolidStroke":this._analyzeSolidStroke(h,d,n,o);break;case"CIMPictureStroke":this._analyzePictureStroke(h,d,n,o);break;case"CIMGradientStroke":this._analyzeGradientStroke(h,d,n,o);break;case"CIMCharacterMarker":case"CIMPictureMarker":case"CIMVectorMarker":{e.type!=="CIMLineSymbol"&&e.type!=="CIMPolygonSymbol"||(a=Sr(h));const _=[],m=h.primitiveName;m&&_.push(m);const f=n&&Ut(h.markerPlacement);this._analyzeMarker(h,d,null,_,a,o,t,[],!1,f);break}default:Or().error("Cannot analyze CIM layer",h.type)}}}_analyzeSolidFill(e,t){const{primitiveName:r,type:s}=e,a=k(e.color);this._cimLayers.push({type:"fill",spriteRasterizationParam:null,colorLocked:!!e.colorLocked,color:this._getValueOrOverrideExpression(s,r,"Color",a),height:0,angle:0,offsetX:0,offsetY:0,scaleX:1,effects:t,applyRandomOffset:!1,sampleAlphaOnly:!0,hasUnresolvedReplacementColor:!1})}_analyzePictureFill(e,t){const{primitiveName:r,type:s}=e,a=me(e),o=M(e.height,B.CIMPictureFill.height);let n=M(e.scaleX,1);if("width"in e&&typeof e.width=="number"){const h=e.width;let u=1;const c=this._resourceManager.getResource(e.url);c!=null&&(u=c.width/c.height),n/=u*(o/h)}const l={type:"sprite-rasterization-param",resource:e,overrides:this._getPrimitiveMaterialOverrides(r,s)};this._cimLayers.push({type:"fill",spriteRasterizationParam:l,colorLocked:!!e.colorLocked,effects:t,color:this._getValueOrOverrideExpression(s,r,"TintColor",a),height:this._getValueOrOverrideExpression(s,r,"Height",o),scaleX:this._getValueOrOverrideExpression(s,r,"ScaleX",n),angle:this._getValueOrOverrideExpression(s,r,"Rotation",M(e.rotation)),offsetX:this._getValueOrOverrideExpression(s,r,"OffsetX",M(e.offsetX)),offsetY:this._getValueOrOverrideExpression(s,r,"OffsetY",M(e.offsetY)),applyRandomOffset:!1,sampleAlphaOnly:!1,hasUnresolvedReplacementColor:!1})}_analyzeHatchFill(e,t){const{primitiveName:r,type:s}=e,a=this._analyzeMaterialOverrides(r,["Rotation","OffsetX","OffsetY"]),o=Pe(a);let n=[255,255,255,1],l=!1;if(e.lineSymbol?.symbolLayers)for(const u of e.lineSymbol.symbolLayers){if(u.type!=="CIMSolidStroke")continue;const c=u.primitiveName??r;l||!c||u.colorLocked||this._poMap[c]?.Color==null&&this._poMap[c]?.StrokeColor==null||(n=k(u.color),n=this._maybeGetValueOrOverrideExpression(c,"StrokeColor")??this._getValueOrOverrideExpression(s,c,"Color",n),l=!0);const d=this._maybeGetValueOrOverrideExpression(c,"StrokeWidth");if(d){let p=null,_=null;typeof d=="number"?p=d:_=d.valueExpressionInfo;let m=o.find(f=>f.propertyName==="strokeWidth");m?m.propertyName="width":(m={type:"CIMPrimitiveOverride",primitiveName:c,propertyName:"width",valueExpressionInfo:_,value:p,defaultValue:Te(s,"width")},o.push(m))}}const h={type:"sprite-rasterization-param",resource:e,overrides:o};this._cimLayers.push({type:"fill",spriteRasterizationParam:h,colorLocked:!!e.colorLocked,effects:t,color:n,height:this._getValueOrOverrideExpression(s,r,"Separation",M(e.separation,B.CIMHatchFill.separation)),scaleX:1,angle:this._getValueOrOverrideExpression(s,r,"Rotation",M(e.rotation)),offsetX:this._getValueOrOverrideExpression(s,r,"OffsetX",M(e.offsetX)),offsetY:this._getValueOrOverrideExpression(s,r,"OffsetY",M(e.offsetY)),applyRandomOffset:!1,sampleAlphaOnly:!0,hasUnresolvedReplacementColor:!l})}_analyzeGradientFill(e,t){this._cimLayers.push({type:"fill",spriteRasterizationParam:null,colorLocked:!!e.colorLocked,effects:t,color:[128,128,128,1],height:0,angle:0,offsetX:0,offsetY:0,scaleX:1,applyRandomOffset:!1,sampleAlphaOnly:!1,hasUnresolvedReplacementColor:!1})}_analyzeSolidStroke(e,t,r,s){const{primitiveName:a,type:o}=e,n=k(e.color),l=M(e.width,B.CIMSolidStroke.width),h=ie(e.capStyle,B.CIMSolidStroke.capstyle),u=ie(e.joinStyle,B.CIMSolidStroke.joinstyle),c=e.miterLimit;let d,p,_=[];if(this._analyzePrimitiveOverrides(a,t,null,null)&&(_=this._getPrimitiveMaterialOverrides(a,o)),t&&Array.isArray(t)&&t.length>0){const f=t[t.length-1].effect;f&&f.type==="CIMGeometricEffectDashes"&&f.lineDashEnding==="NoConstraint"&&f.offsetAlongLine===null&&(d=f.dashTemplate,p=f.scaleDash,(t=[...t]).pop())}const m=d!==void 0?{type:"sprite-rasterization-param",resource:{type:"dash",dashTemplate:d,capStyle:h},overrides:_}:null;this._cimLayers.push({type:"line",spriteRasterizationParam:m,isOutline:r,colorLocked:!!e.colorLocked,effects:t,color:this._getValueOrOverrideExpression(o,a,"Color",n),width:this._getValueOrOverrideExpression(o,a,"Width",l),cap:this._getValueOrOverrideExpression(o,a,"CapStyle",h),join:this._getValueOrOverrideExpression(o,a,"JoinStyle",u),miterLimit:c&&this._getValueOrOverrideExpression(o,a,"MiterLimit",c),referenceWidth:s,zOrder:qe(e.name),dashTemplate:d,scaleDash:p,sampleAlphaOnly:!0})}_analyzePictureStroke(e,t,r,s){const{primitiveName:a,type:o}=e,n=me(e),l=M(e.width,B.CIMPictureStroke.width),h=ie(e.capStyle,B.CIMPictureStroke.capstyle),u=ie(e.joinStyle,B.CIMPictureStroke.joinstyle),c=e.miterLimit,d={type:"sprite-rasterization-param",resource:e,overrides:this._getPrimitiveMaterialOverrides(a,o)};this._cimLayers.push({type:"line",spriteRasterizationParam:d,isOutline:r,colorLocked:!!e.colorLocked,effects:t,color:this._getValueOrOverrideExpression(o,a,"TintColor",n),width:this._getValueOrOverrideExpression(o,a,"Width",l),cap:this._getValueOrOverrideExpression(o,a,"CapStyle",h),join:this._getValueOrOverrideExpression(o,a,"JoinStyle",u),miterLimit:c&&this._getValueOrOverrideExpression(o,a,"MiterLimit",c),referenceWidth:s,zOrder:qe(e.name),dashTemplate:null,scaleDash:!1,sampleAlphaOnly:!1})}_analyzeGradientStroke(e,t,r,s){const{primitiveName:a,type:o}=e,n=M(e.width,B.CIMSolidStroke.width),l=ie(e.capStyle,B.CIMGradientStroke.capstyle),h=ie(e.joinStyle,B.CIMGradientStroke.joinstyle),u=e.miterLimit;this._cimLayers.push({type:"line",spriteRasterizationParam:null,isOutline:r,colorLocked:!!e.colorLocked,effects:t,color:[128,128,128,1],width:this._getValueOrOverrideExpression(o,a,"Width",n),cap:this._getValueOrOverrideExpression(o,a,"CapStyle",l),join:this._getValueOrOverrideExpression(o,a,"JoinStyle",h),miterLimit:u&&this._getValueOrOverrideExpression(o,a,"MiterLimit",u),referenceWidth:s,zOrder:qe(e.name),dashTemplate:null,scaleDash:!1,sampleAlphaOnly:!1})}_analyzeMarker(e,t,r,s,a,o,n,l,h=!1,u=!1){if(h||=!!e.colorLocked,this._analyzeMarkerInsidePolygon(e,t,h))return;const c=M(e.size,B.CIMVectorMarker.size),d=M(e.rotation),p=M(e.offsetX),_=M(e.offsetY),{primitiveName:m,type:f}=e,g=this._getValueOrOverrideExpression(f,m,"Size",c),y=this._getValueOrOverrideExpression(f,m,"Rotation",d),w=this._getValueOrOverrideExpression(f,m,"OffsetX",p),x=this._getValueOrOverrideExpression(f,m,"OffsetY",_);switch(e.type){case"CIMPictureMarker":this._analyzePictureMarker(e,t,r,s,a,o,g,y,w,x,l,h,u);break;case"CIMVectorMarker":this._analyzeVectorMarker(e,t,r,s,a,o,g,y,w,x,l,n,h,u)}}_analyzeMarkerInsidePolygon(e,t,r){const{markerPlacement:s,type:a}=e;if(!s||s.type!=="CIMMarkerPlacementInsidePolygon")return!1;if(a==="CIMVectorMarker"||a==="CIMPictureMarker"){const d=e.primitiveName;if(d&&this._analyzePrimitiveOverrides([d],t,null,null))return!1;const p=s.primitiveName;if(p&&this._analyzePrimitiveOverrides([p],t,null,null))return!1;if(a==="CIMVectorMarker"){const{markerGraphics:_}=e;if(_)for(const m of _){const{symbol:f}=m;if(f?.type==="CIMPolygonSymbol"&&f.symbolLayers){const{symbolLayers:g}=f;for(const y of g)if(y.type==="CIMSolidStroke")return!1}}}else{const{animatedSymbolProperties:_}=e;if(_)return!1}}const o=Math.abs(s.stepX),n=Math.abs(s.stepY);if(o===0||n===0)return!0;let l,h;if(s.gridType==="Random"){const d=Xt(Ai),p=Math.max(Math.floor(d/o),1);l=n*Math.max(Math.floor(d/n),1),h=p*o/l}else s.shiftOddRows?(l=2*n,h=o/n*.5):(l=n,h=o/n);const u=me(e),c=e.type==="CIMCharacterMarker"?null:{type:"sprite-rasterization-param",resource:e,overrides:[]};return this._cimLayers.push({type:"fill",spriteRasterizationParam:c,colorLocked:r,effects:t,color:u,height:l,scaleX:h,angle:s.gridAngle,offsetX:M(s.offsetX),offsetY:M(s.offsetY),applyRandomOffset:s.gridType==="Random",sampleAlphaOnly:e.type!=="CIMPictureMarker",hasUnresolvedReplacementColor:!0}),!0}_analyzePictureMarker(e,t,r,s,a,o,n,l,h,u,c,d,p){const{animatedSymbolProperties:_,primitiveName:m,type:f}=e;let g=M(e.scaleX,1);const y=me(e);r||(r=this._createMarkerPlacementOverrideExpression(e.markerPlacement));const w=this._createGIFAnimatedSymbolPropertiesOverrideExpression(_),x=e.anchorPoint??{x:0,y:0};if("width"in e&&typeof e.width=="number"){const S=e.width;let F=1;const C=this._resourceManager.getResource(e.url);C!=null&&(F=C.width/C.height),g/=F*(M(e.size)/S)}const b=[...s];let O;e.primitiveName&&b.push(e.primitiveName),_||w?O={type:"animated",url:e.url,urlHash:"H"+Xe(e.url),playAnimation:e.animatedSymbolProperties?.playAnimation,reverseAnimation:e.animatedSymbolProperties?.reverseAnimation,randomizeStartTime:e.animatedSymbolProperties?.randomizeStartTime,randomizeStartSeed:e.animatedSymbolProperties?.randomizeStartSeed,startTimeOffset:e.animatedSymbolProperties?.startTimeOffset,duration:e.animatedSymbolProperties?.duration,repeatType:e.animatedSymbolProperties?.repeatType,repeatDelay:e.animatedSymbolProperties?.repeatDelay}:(O=$e(e),O.markerPlacement=null);const T={type:"sprite-rasterization-param",resource:O,overrides:this._getMaterialOverrides(b,f)};w&&T.overrides.push(...w.overrides),this._cimLayers.push({type:"marker",spriteRasterizationParam:T,colorLocked:d,effects:t,scaleSymbolsProportionally:!1,alignment:a,size:n,scaleX:this._getValueOrOverrideExpression(f,m,"ScaleX",g),rotation:l,offsetX:h,offsetY:u,transform:{type:"cim-marker-transform-param",params:c},color:this._getValueOrOverrideExpression(f,m,"TintColor",y),anchorPoint:{x:x.x,y:x.y},isAbsoluteAnchorPoint:e.anchorPointUnits!=="Relative",outlineColor:[0,0,0,0],outlineWidth:0,frameHeight:0,widthRatio:1,rotateClockwise:!!e.rotateClockwise,referenceSize:o,sizeRatio:1,isOutline:p,markerPlacement:r})}_analyzeVectorMarker(e,t,r,s,a,o,n,l,h,u,c,d,p,_){const m=e.markerGraphics;if(!m)return;const f=e.frame;let g=0;if(g=f?f.ymax-f.ymin:o,g){const y={offsetX:h,offsetY:u,rotation:l,size:n,frameHeight:g,rotateClockWise:!!e.rotateClockwise};c=[...c,y]}r||(r=this._createMarkerPlacementOverrideExpression(e.markerPlacement));for(const y of m)if(y){const w=y.symbol;if(!w)continue;const x=y.primitiveName;let b;if(x&&s.push(x),(w.type==="CIMPointSymbol"||w.type==="CIMTextSymbol")&&f){let O=0,T=0;const S=y.geometry;"x"in S&&"y"in S&&(O+=S.x-.5*(f.xmin+f.xmax),T+=S.y-.5*(f.ymin+f.ymax));const F=e.anchorPoint;F&&(e.anchorPointUnits==="Absolute"?(O-=F.x,T-=F.y):f&&(O-=(f.xmax-f.xmin)*F.x,T-=(f.ymax-f.ymin)*F.y));const C={offsetX:O,offsetY:T,rotation:0,size:0,frameHeight:0,rotateClockWise:!1};b=[...c,C]}switch(w.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":d||Er(w)?this._analyzeMultiLayerGraphicNonSDF(e,t,r,y,s,a,o,b??c,g,p,_):this._analyzeMultiLayerGraphic(e,t,r,y,s,a,o,b??c,g,p,_);break;case"CIMTextSymbol":this._analyzeTextGraphic(t,r,y,s,a,o,b??c,p)}x&&s.pop()}}_analyzeMultiLayerGraphic(e,t,r,s,a,o,n,l,h,u,c){const d=s.symbol,p=d.symbolLayers;if(!p)return;let _=p.length;if(Cr(p))return void this._analyzeCompositeMarkerGraphic(e,t,r,s,p,o,n,l,h,u,c);const m=this._resourceManager.geometryEngine,f=st.applyEffects(d.effects,s.geometry,m);if(f)for(;_--;){const g=p[_];if(!g||g.enable===!1)continue;const y=g.primitiveName;switch(y&&a.push(y),g.type){case"CIMSolidFill":case"CIMSolidStroke":{const w=st.applyEffects(g.effects,f,m),x=it(w);if(!x)continue;const b=e.anchorPointUnits!=="Relative",[O,T,S,F]=rt(x,e.frame,e.size,e.anchorPoint,b),C=g.type==="CIMSolidFill",Q={type:"sdf",geom:w,asFill:C},{path:j}=g,Z=C?k(fe(g)):j==null?k(Ce(g)):[0,0,0,0],ee=C?[0,0,0,0]:k(Ce(g)),se=Ye(g)??0;if(!C&&!se)break;const te=s.primitiveName;let ae=null;C&&!g.colorLocked&&(ae=this._maybeGetValueOrOverrideExpression(te,"FillColor"));let de=null;C||g.colorLocked||(de=this._maybeGetValueOrOverrideExpression(te,"StrokeColor"));const pe=ae??this._getValueOrOverrideExpression(g.type,y,"Color",Z),Se=de??this._getValueOrOverrideExpression(g.type,y,"Color",ee),X=this._maybeGetValueOrOverrideExpression(te,"StrokeWidth")??this._getValueOrOverrideExpression(g.type,y,"Width",se),_e=j?{type:"sprite-rasterization-param",resource:{type:"path",path:j,asFill:C},overrides:[]}:{type:"sprite-rasterization-param",resource:Q,overrides:[]};this._cimLayers.push({type:"marker",spriteRasterizationParam:_e,colorLocked:!!g.colorLocked||!!u,effects:t,scaleSymbolsProportionally:!!e.scaleSymbolsProportionally,alignment:o,anchorPoint:{x:T,y:S},isAbsoluteAnchorPoint:b,size:h,rotation:0,offsetX:0,offsetY:0,scaleX:1,transform:{type:"cim-marker-transform-param",params:l},frameHeight:h,widthRatio:F,rotateClockwise:!1,referenceSize:n,sizeRatio:O,color:pe,outlineColor:Se,outlineWidth:X,isOutline:c,markerPlacement:r});break}case"CIMPictureMarker":case"CIMVectorMarker":g.markerPlacement?this._analyzeMultiLayerGraphicNonSDF(e,t,r,s,a,o,n,l,h,!!g.colorLocked||!!u,c):this._analyzeMarker(g,t,r,a,o,n,!1,l,u,c);break;default:this._analyzeMultiLayerGraphicNonSDF(e,t,r,s,a,o,n,l,h,!!g.colorLocked||!!u,c)}y&&a.pop()}}_analyzeTextGraphic(e,t,r,s,a,o,n,l){const h=[];ne.findApplicableOverrides(r,this._primitiveOverrides,h);const u=r.geometry;if(!("x"in u)||!("y"in u))return;const c=r.symbol,d=Vt(c),p=Gt(c.fontStyleName),_=Ci(c.fontFamilyName);c.font={family:_,decoration:d,...p};const m=M(c.height,B.CIMTextSymbol.height),f=M(c.angle),g=M(c.offsetX),y=M(c.offsetY),w=k(fe(c));let x=k(Ce(c)),b=Ye(c)??0;b||(x=k(fe(c.haloSymbol)),b=M(c.haloSize));let O=!1;if(c.symbol?.symbolLayers)for(const X of c.symbol.symbolLayers)k(fe(X))!=null&&(O=!!X.colorLocked);const T=r.primitiveName;let S=null;O||(S=this._maybeGetValueOrOverrideExpression(T,"FillColor"));const F=this._maybeGetValueOrOverrideExpression(T,"TextSize"),C=this._maybeGetValueOrOverrideExpression(T,"TextAngle"),Q=this._maybeGetValueOrOverrideExpression(T,"TextOffsetX"),j=this._maybeGetValueOrOverrideExpression(T,"TextOffsetY");let Z=null,ee=null,se=0;if(c.callout&&c.callout.type==="CIMBackgroundCallout"){const X=c.callout;if(X.backgroundSymbol){const _e=X.backgroundSymbol.symbolLayers;if(_e)for(const oe of _e)oe.type==="CIMSolidFill"?Z=k(oe.color):oe.type==="CIMSolidStroke"&&(ee=k(oe.color),se=M(oe.width,B.CIMSolidStroke.width))}}const te=this._getValueOrOverrideExpression(c.type,r.primitiveName,"TextString",r.textString??"");if(te==null)return;const{fontStyleName:ae}=c,de=_+(ae?"-"+ae.toLowerCase():"-regular"),pe=this._getMaterialOverrides(s,c.type);pe.push(...this._getPrimitiveMaterialOverrides(r.primitiveName,c.type));const Se={type:"text-rasterization-param",resource:{type:"text",textString:r.textString??"",font:c.font,symbol:c,primitiveName:r.primitiveName},overrides:pe};this._cimLayers.push({type:"text",lineWidth:c.lineWidth,textRasterizationParam:Se,colorLocked:!!l||!!O,effects:e,alignment:a,anchorPoint:{x:0,y:0},isAbsoluteAnchorPoint:!1,fontName:de,decoration:d,weight:p.weight,style:p.style,size:F??m,angle:C??f,offsetX:Q??g,offsetY:j??y,transform:{type:"cim-marker-transform-param",params:n},horizontalAlignment:Ht(c.horizontalAlignment),verticalAlignment:Wt(c.verticalAlignment),text:te,color:S??this._getValueOrOverrideExpression(c.type,r.primitiveName,"Color",w),outlineColor:x,outlineSize:b,backgroundColor:Z,borderLineColor:ee,borderLineWidth:se,referenceSize:o,sizeRatio:1,markerPlacement:t})}_analyzeMultiLayerGraphicNonSDF(e,t,r,s,a,o,n,l,h,u,c){const d=Tr(e,s),p=e.primitiveName,_=this._analyzeMaterialOverrides(p,["Rotation","OffsetX","OffsetY"]),m=Pe(_),[f,g,y]=re.getTextureAnchor(d,this._resourceManager),w=this._getMaterialOverrides(a,e.type);w.push(...m);const x={type:"sprite-rasterization-param",resource:{...d,avoidSDFRasterization:!0},overrides:w};this._cimLayers.push({type:"marker",spriteRasterizationParam:x,colorLocked:u,effects:t,scaleSymbolsProportionally:!!e.scaleSymbolsProportionally,alignment:o,anchorPoint:{x:f,y:g},isAbsoluteAnchorPoint:!1,size:h,rotation:0,offsetX:0,offsetY:0,transform:{type:"cim-marker-transform-param",params:l},color:[255,255,255,1],outlineColor:[0,0,0,0],outlineWidth:0,scaleX:1,frameHeight:h,widthRatio:1,rotateClockwise:!!e.rotateClockwise,referenceSize:n,sizeRatio:y/$(e.size),isOutline:c,markerPlacement:r})}_createMarkerPlacementOverrideExpression(e){if(!e)return null;const t=[];return ne.findApplicableOverrides(e,this._primitiveOverrides,t),{type:"cim-marker-placement-param",placement:e,overrides:yt(t)}}_createGIFAnimatedSymbolPropertiesOverrideExpression(e){if(!e)return null;const t=[];return ne.findApplicableOverrides(e,this._primitiveOverrides,t),{type:"cim-gif-animation-params",animation:e,overrides:yt(t)}}_analyzeCompositeMarkerGraphic(e,t,r,s,a,o,n,l,h,u,c){const d=s.geometry,p=a[0],_=a[1],m=it(d);if(!m)return;const f=e.anchorPointUnits!=="Relative",[g,y,w,x]=rt(m,e.frame,e.size,e.anchorPoint,f),{path:b}=_,O=_.primitiveName,T=p.primitiveName,S=s.primitiveName;let F=null;_.colorLocked||u||(F=this._maybeGetValueOrOverrideExpression(S,"FillColor"));const C=F??this._getValueOrOverrideExpression(_.type,O,"Color",k(_.color));let Q=null;p.colorLocked||u||(Q=this._maybeGetValueOrOverrideExpression(S,"StrokeColor"));const j=Q??this._getValueOrOverrideExpression(p.type,T,"Color",k(p.color)),Z=this._maybeGetValueOrOverrideExpression(S,"StrokeWidth")??this._getValueOrOverrideExpression(p.type,T,"Width",M(p.width,B.CIMSolidStroke.width)),ee={type:"sprite-rasterization-param",resource:b?{type:"path",path:b,asFill:!0}:{type:"sdf",geom:d,asFill:!0},overrides:[]};this._cimLayers.push({type:"marker",spriteRasterizationParam:ee,colorLocked:u,effects:t,scaleSymbolsProportionally:!!e.scaleSymbolsProportionally,alignment:o,anchorPoint:{x:y,y:w},isAbsoluteAnchorPoint:f,size:h,rotation:0,offsetX:0,offsetY:0,scaleX:1,transform:{type:"cim-marker-transform-param",params:l},frameHeight:h,widthRatio:x,rotateClockwise:!1,referenceSize:n,sizeRatio:g,color:C,outlineColor:j,outlineWidth:Z,isOutline:c,markerPlacement:r})}_setPoMap(e,t,r){let s;this._poMap[e]?s=this._poMap[e]:(s={},this._poMap[e]=s),s[t]=r}_maybeGetValueOrOverrideExpression(e,t,r){return this._getValueOrOverrideExpression("",e,t,r,!1)}_getValueOrOverrideExpression(e,t,r,s,a=!0){if(a&&!qt(s)&&(s=Te(e,r.toLowerCase())),t==null)return s;const o=this._poMap[t];if(o==null)return s;const n=o[r];return typeof n=="string"||typeof n=="number"||Array.isArray(n)?n:n?{valueExpressionInfo:n,defaultValue:s}:s}_analyzePrimitiveOverrides(e,t,r,s){if(e==null)return!1;typeof e=="string"&&(e=[e]);for(const a of this._primitiveOverrides)if(e.includes(a.primitiveName)&&a.valueExpressionInfo)return!0;if(t!=null){for(const a of t)if(a?.overrides.length>0)return!0}if(r!=null){for(const a of r)if(a?.overrides.length>0)return!0}if(s!=null){for(const a of s)if(a?.overrides.length>0)return!0}return!1}_getMaterialOverrides(e,t){if(!e)return[];const r=[];for(const s of e)r.push(...this._getPrimitiveMaterialOverrides(s,t));return r}_getPrimitiveMaterialOverrides(e,t){if(!e)return[];const r=Pe(this._primitiveOverrides.filter(s=>s.primitiveName===e));return r.forEach(s=>s.defaultValue=Te(t,s.propertyName.toLowerCase())),r}_analyzeMaterialOverrides(e,t){return this._primitiveOverrides.filter(r=>r.primitiveName!==e||!t.includes(r.propertyName))}}function Tr(i,e){return{type:i.type,enable:!0,name:i.name,colorLocked:i.colorLocked,primitiveName:i.primitiveName,anchorPoint:i.anchorPoint,anchorPointUnits:i.anchorPointUnits,offsetX:0,offsetY:0,rotateClockwise:i.rotateClockwise,rotation:0,size:i.size,billboardMode3D:i.billboardMode3D,depth3D:i.depth3D,frame:i.frame,markerGraphics:[e],scaleSymbolsProportionally:i.scaleSymbolsProportionally,respectFrame:i.respectFrame,clippingPath:i.clippingPath}}function qe(i){if(i&&i.indexOf("Level_")===0){const e=parseInt(i.substr(6),10);if(!isNaN(e))return e}return 0}const Cr=i=>i&&i.length===2&&i[0].enable&&i[1].enable&&i[0].type==="CIMSolidStroke"&&i[1].type==="CIMSolidFill"&&i[0].path==null&&i[1].path==null&&!i[0].effects&&!i[1].effects;function Er(i){const e=i.symbolLayers;if(!e||e.length!==2)return!1;const t=e.find(s=>s.effects?.find(a=>a.type==="CIMGeometricEffectDashes"&&a.dashTemplate!=null)),r=e.find(s=>s.effects?.find(a=>a.type==="CIMGeometricEffectAddControlPoints"));return!!t||!!r}function yt(i){return $e(i).map(e=>({...e,propertyName:jt(e.propertyName)}))}let Rr=class{constructor(i){this.events=new $t,this._hasMajorPerformanceCaveat=!1,this._lastRenderFrameCounter=0,this._canvas=document.createElement("canvas"),this._canvas.setAttribute("style","width: 100%; height:100%; display:block; willChange:transform");const e={failIfMajorPerformanceCaveat:!0,alpha:!0,antialias:!1,depth:!0,stencil:!0};i.appendChild(this._canvas);let t=Ke(this._canvas,e);t||(t=Ke(this._canvas,{...e,failIfMajorPerformanceCaveat:!1}),this._hasMajorPerformanceCaveat=!0),this._gl=t,this._handles=Yt([Kt(this._canvas,"webglcontextlost",r=>this.events.emit("webgl-context-lost",r))])}destroy(){this._canvas.parentNode?.removeChild(this._canvas),this._canvas=null,this._handles.remove(),this._gl=null}get gl(){return this._gl}render(i,e){if(this._hasMajorPerformanceCaveat||V("esri-force-performance-mode")){if(++this._lastRenderFrameCounter>=V("esri-performance-mode-frames-between-render")&&(e(),this._lastRenderViewState=i.state.clone(),this._lastRenderFrameCounter=0),this._lastRenderViewState){const[t,r,s,a,o,n]=this._computeViewTransform(this._lastRenderViewState,i.state);this._canvas.style.transform=`matrix(${t}, ${r}, ${s}, ${a}, ${o}, ${n})`}}else e()}resize(i){const e=this._canvas,t=e.style,{state:{size:r},pixelRatio:s}=i,a=r[0],o=r[1],n=Math.round(a*s),l=Math.round(o*s);e.width===n&&e.height===l||(e.width=n,e.height=l),t.width=a+"px",t.height=o+"px"}_computeViewTransform(i,e){const[t,r]=i.center,[s,a]=e.center,[o,n]=i.toScreen([0,0],s,a),[l,h]=i.toScreen([0,0],t,r),u=l-o,c=h-n,d=i.scale/e.scale,p=e.rotation-i.rotation,_=ii();return Jt(_),Qt(_,_,[d,d]),Zt(_,_,ei(p)),ti(_,_,[u,c]),_}};const zr={background:{"background.frag":`#ifdef PATTERN
uniform lowp float u_opacity;
uniform lowp sampler2D u_texture;
varying mediump vec4 v_tlbr;
varying mediump vec2 v_tileTextureCoord;
#else
uniform lowp vec4 u_color;
#endif
void main() {
#ifdef PATTERN
mediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);
mediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);
lowp vec4 color = texture2D(u_texture, samplePos);
gl_FragColor = u_opacity * color;
#else
gl_FragColor = u_color;
#endif
}`,"background.vert":`precision mediump float;
attribute vec2 a_pos;
uniform highp mat3 u_dvsMat3;
uniform mediump float u_coord_range;
uniform mediump float u_depth;
#ifdef PATTERN
uniform mediump mat3 u_pattern_matrix;
varying mediump vec2 v_tileTextureCoord;
uniform mediump vec4 u_tlbr;
uniform mediump vec2 u_mosaicSize;
varying mediump vec4 v_tlbr;
#endif
void main() {
gl_Position = vec4((u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0)).xy, u_depth, 1.0);
#ifdef PATTERN
v_tileTextureCoord = (u_pattern_matrix * vec3(a_pos, 1.0)).xy;
v_tlbr             = u_tlbr / u_mosaicSize.xyxy;
#endif
}`},circle:{"circle.frag":`precision lowp float;
varying lowp vec4 v_color;
varying lowp vec4 v_stroke_color;
varying mediump float v_blur;
varying mediump float v_stroke_width;
varying mediump float v_radius;
varying mediump vec2 v_offset;
void main()
{
mediump float dist = length(v_offset);
mediump float alpha = smoothstep(0.0, -v_blur, dist - 1.0);
lowp float color_mix_ratio = v_stroke_width < 0.01 ? 0.0 : smoothstep(-v_blur, 0.0, dist - v_radius / (v_radius + v_stroke_width));
gl_FragColor = alpha * mix(v_color, v_stroke_color, color_mix_ratio);
}`,"circle.vert":`precision mediump float;
attribute vec2 a_pos;
#pragma header
varying lowp vec4 v_color;
varying lowp vec4 v_stroke_color;
varying mediump float v_blur;
varying mediump float v_stroke_width;
varying mediump float v_radius;
varying mediump vec2 v_offset;
uniform highp mat3 u_dvsMat3;
uniform highp mat3 u_displayMat3;
uniform mediump vec2 u_circleTranslation;
uniform mediump float u_depth;
uniform mediump float u_antialiasingWidth;
void main()
{
#pragma main
v_color = color * opacity;
v_stroke_color = stroke_color * stroke_opacity;
v_stroke_width = stroke_width;
v_radius = radius;
v_blur = max(blur, u_antialiasingWidth / (radius + stroke_width));
mediump vec2 offset = vec2(mod(a_pos, 2.0) * 2.0 - 1.0);
v_offset = offset;
mediump vec3 pos = u_dvsMat3 * vec3(a_pos * 0.5, 1.0) + u_displayMat3 * vec3((v_radius + v_stroke_width) * offset + u_circleTranslation, 0.0);
gl_Position = vec4(pos.xy, u_depth, 1.0);
}`},fill:{"fill.frag":`precision lowp float;
#ifdef PATTERN
uniform lowp sampler2D u_texture;
varying mediump vec2 v_tileTextureCoord;
varying mediump vec4 v_tlbr;
#endif
varying lowp vec4 v_color;
vec4 mixColors(vec4 color1, vec4 color2) {
float compositeAlpha = color2.a + color1.a * (1.0 - color2.a);
vec3 compositeColor = color2.rgb + color1.rgb * (1.0 - color2.a);
return vec4(compositeColor, compositeAlpha);
}
void main()
{
#ifdef PATTERN
mediump vec2 normalizedTextureCoord = fract(v_tileTextureCoord);
mediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);
lowp vec4 color = texture2D(u_texture, samplePos);
gl_FragColor = v_color[3] * color;
#else
gl_FragColor = v_color;
#endif
}`,"fill.vert":`precision mediump float;
attribute vec2 a_pos;
#pragma header
uniform highp mat3 u_dvsMat3;
uniform highp mat3 u_displayMat3;
uniform mediump float u_depth;
uniform mediump vec2 u_fillTranslation;
#ifdef PATTERN
#include <util/util.glsl>
uniform mediump vec2 u_mosaicSize;
uniform mediump float u_patternFactor;
varying mediump vec2 v_tileTextureCoord;
varying mediump vec4 v_tlbr;
#endif
varying lowp vec4 v_color;
void main()
{
#pragma main
v_color = color * opacity;
#ifdef PATTERN
float patternWidth = nextPOT(tlbr.z - tlbr.x);
float patternHeight = nextPOT(tlbr.w - tlbr.y);
float scaleX = 1.0 / (patternWidth * u_patternFactor);
float scaleY = 1.0 / (patternHeight * u_patternFactor);
mat3 patterMat = mat3(scaleX, 0.0,    0.0,
0.0,    -scaleY, 0.0,
0.0,    0.0,    1.0);
v_tileTextureCoord = (patterMat * vec3(a_pos, 1.0)).xy;
v_tlbr             = tlbr / u_mosaicSize.xyxy;
#endif
vec3 pos = u_dvsMat3 * vec3(a_pos, 1.0) + u_displayMat3 * vec3(u_fillTranslation, 0.0);
gl_Position = vec4(pos.xy, u_depth, 1.0);
}`},icon:{"icon.frag":`precision mediump float;
uniform lowp sampler2D u_texture;
#ifdef SDF
uniform lowp vec4 u_color;
uniform lowp vec4 u_outlineColor;
#endif
varying mediump vec2 v_tex;
varying lowp float v_opacity;
varying mediump vec2 v_size;
varying lowp vec4 v_color;
#ifdef SDF
varying mediump flaot v_halo_width;
#endif
#include <util/encoding.glsl>
vec4 mixColors(vec4 color1, vec4 color2) {
float compositeAlpha = color2.a + color1.a * (1.0 - color2.a);
vec3 compositeColor = color2.rgb + color1.rgb * (1.0 - color2.a);
return vec4(compositeColor, compositeAlpha);
}
void main()
{
#ifdef SDF
lowp vec4 fillPixelColor = v_color;
float d = rgba2float(texture2D(u_texture, v_tex)) - 0.5;
const float softEdgeRatio = 0.248062016;
float size = max(v_size.x, v_size.y);
float dist = d * softEdgeRatio * size;
fillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);
if (v_halo_width > 0.25) {
lowp vec4 outlinePixelColor = u_outlineColor;
const float outlineLimitRatio = (16.0 / 86.0);
float clampedOutlineSize = softEdgeRatio * min(v_halo_width, outlineLimitRatio * max(v_size.x, v_size.y));
outlinePixelColor *= clamp(0.5 - (abs(dist) - clampedOutlineSize), 0.0, 1.0);
gl_FragColor = v_opacity * mixColors(fillPixelColor, outlinePixelColor);
}
else {
gl_FragColor = v_opacity * fillPixelColor;
}
#else
lowp vec4 texColor = texture2D(u_texture, v_tex);
gl_FragColor = v_opacity * texColor;
#endif
}`,"icon.vert":`attribute vec2 a_pos;
attribute vec2 a_vertexOffset;
attribute vec4 a_texAngleRange;
attribute vec4 a_levelInfo;
attribute float a_opacityInfo;
#pragma header
varying lowp vec4 v_color;
#ifdef SDF
varying mediump float v_halo_width;
#endif
uniform highp mat3 u_dvsMat3;
uniform highp mat3 u_displayMat3;
uniform highp mat3 u_displayViewMat3;
uniform mediump vec2 u_iconTranslation;
uniform vec2 u_mosaicSize;
uniform mediump float u_depth;
uniform mediump float u_mapRotation;
uniform mediump float u_level;
uniform lowp float u_keepUpright;
uniform mediump float u_fadeDuration;
varying mediump vec2 v_tex;
varying lowp float v_opacity;
varying mediump vec2 v_size;
const float C_OFFSET_PRECISION = 1.0 / 8.0;
const float C_256_TO_RAD = 3.14159265359 / 128.0;
const float C_DEG_TO_RAD = 3.14159265359 / 180.0;
const float tileCoordRatio = 1.0 / 8.0;
uniform highp float u_time;
void main()
{
#pragma main
v_color = color;
v_opacity = opacity;
#ifdef SDF
v_halo_width = halo_width;
#endif
float modded = mod(a_opacityInfo, 128.0);
float targetOpacity = (a_opacityInfo - modded) / 128.0;
float startOpacity = modded / 127.0;
float interpolatedOpacity = clamp(startOpacity + 2.0 * (targetOpacity - 0.5) * u_time / u_fadeDuration, 0.0, 1.0);
v_opacity *= interpolatedOpacity;
mediump float a_angle         = a_levelInfo[1];
mediump float a_minLevel      = a_levelInfo[2];
mediump float a_maxLevel      = a_levelInfo[3];
mediump vec2 a_tex            = a_texAngleRange.xy;
mediump float delta_z = 0.0;
mediump float rotated = mod(a_angle + u_mapRotation, 256.0);
delta_z += (1.0 - step(u_keepUpright, 0.0)) * step(64.0, rotated) * (1.0 - step(192.0, rotated));
delta_z += 1.0 - step(a_minLevel, u_level);
delta_z += step(a_maxLevel, u_level);
delta_z += step(v_opacity, 0.0);
vec2 offset = C_OFFSET_PRECISION * a_vertexOffset;
v_size = abs(offset);
#ifdef SDF
offset = (120.0 / 86.0) * offset;
#endif
mediump vec3 pos = u_dvsMat3 * vec3(a_pos, 1.0) + u_displayViewMat3 * vec3(size * offset, 0.0) + u_displayMat3 * vec3(u_iconTranslation, 0.0);
gl_Position = vec4(pos.xy, u_depth + delta_z, 1.0);
v_tex = a_tex.xy / u_mosaicSize;
}`},line:{"line.frag":`precision lowp float;
varying mediump vec2 v_normal;
varying highp float v_accumulatedDistance;
varying mediump float v_lineHalfWidth;
varying lowp vec4 v_color;
varying mediump float v_blur;
#if defined (PATTERN) || defined(SDF)
varying mediump vec4 v_tlbr;
varying mediump vec2 v_patternSize;
varying mediump float v_widthRatio;
uniform sampler2D u_texture;
uniform mediump float u_antialiasing;
#endif
#ifdef SDF
#include <util/encoding.glsl>
#endif
void main()
{
mediump float fragDist = length(v_normal) * v_lineHalfWidth;
lowp float alpha = clamp((v_lineHalfWidth - fragDist) / v_blur, 0.0, 1.0);
#ifdef PATTERN
mediump float relativeTexX = fract(v_accumulatedDistance / (v_patternSize.x * v_widthRatio));
mediump float relativeTexY = 0.5 + v_normal.y * v_lineHalfWidth / (v_patternSize.y * v_widthRatio);
mediump vec2 texCoord = mix(v_tlbr.xy, v_tlbr.zw, vec2(relativeTexX, relativeTexY));
lowp vec4 color = texture2D(u_texture, texCoord);
gl_FragColor = alpha * v_color[3] * color;
#elif defined(SDF)
mediump float relativeTexX = fract((v_accumulatedDistance * 0.5) / (v_patternSize.x * v_widthRatio));
mediump float relativeTexY =  0.5 + 0.25 * v_normal.y;
mediump vec2 texCoord = mix(v_tlbr.xy, v_tlbr.zw, vec2(relativeTexX, relativeTexY));
mediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;
float dist = d * (v_lineHalfWidth + u_antialiasing / 2.0);
gl_FragColor = alpha * clamp(0.5 - dist, 0.0, 1.0) * v_color;
#else
gl_FragColor = alpha * v_color;
#endif
}`,"line.vert":`precision mediump float;
attribute vec2 a_pos;
attribute vec4 a_extrude_offset;
attribute vec4 a_dir_normal;
attribute vec2 a_accumulatedDistance;
#pragma header
uniform highp mat3 u_dvsMat3;
uniform highp mat3 u_displayMat3;
uniform highp mat3 u_displayViewMat3;
uniform mediump float u_zoomFactor;
uniform mediump vec2 u_lineTranslation;
uniform mediump float u_antialiasing;
uniform mediump float u_depth;
varying mediump vec2 v_normal;
varying highp float v_accumulatedDistance;
const float scale = 1.0 / 31.0;
const mediump float tileCoordRatio = 8.0;
#if defined (SDF)
const mediump float sdfPatternHalfWidth = 15.5;
#endif
#if defined (PATTERN) || defined(SDF)
uniform mediump vec2 u_mosaicSize;
varying mediump vec4 v_tlbr;
varying mediump vec2 v_patternSize;
varying mediump float v_widthRatio;
#endif
varying lowp vec4 v_color;
varying mediump float v_lineHalfWidth;
varying mediump float v_blur;
void main()
{
#pragma main
v_color = color * opacity;
v_blur = blur + u_antialiasing;
v_normal = a_dir_normal.zw * scale;
#if defined (PATTERN) || defined(SDF)
v_tlbr          = tlbr / u_mosaicSize.xyxy;
v_patternSize   = vec2(tlbr.z - tlbr.x, tlbr.y - tlbr.w);
#if defined (PATTERN)
v_widthRatio = width / v_patternSize.y;
#else
v_widthRatio = width / sdfPatternHalfWidth / 2.0;
#endif
#endif
v_lineHalfWidth = (width + u_antialiasing) * 0.5;
mediump vec2 dir = a_dir_normal.xy * scale;
mediump vec2 offset_ = a_extrude_offset.zw * scale * offset;
mediump vec2 dist = v_lineHalfWidth * scale * a_extrude_offset.xy;
mediump vec3 pos = u_dvsMat3 * vec3(a_pos + offset_ * tileCoordRatio / u_zoomFactor, 1.0) + u_displayViewMat3 * vec3(dist, 0.0) + u_displayMat3 * vec3(u_lineTranslation, 0.0);
gl_Position = vec4(pos.xy, u_depth, 1.0);
#if defined (PATTERN) || defined(SDF)
v_accumulatedDistance = a_accumulatedDistance.x * u_zoomFactor / tileCoordRatio + dot(dir, dist + offset_);
#endif
}`},outline:{"outline.frag":`varying lowp vec4 v_color;
varying mediump vec2 v_normal;
void main()
{
lowp float dist = abs(v_normal.y);
lowp float alpha = smoothstep(1.0, 0.0, dist);
gl_FragColor = alpha * v_color;
}`,"outline.vert":`attribute vec2 a_pos;
attribute vec2 a_offset;
attribute vec2 a_xnormal;
#pragma header
varying lowp vec4 v_color;
uniform highp mat3 u_dvsMat3;
uniform highp mat3 u_displayMat3;
uniform mediump vec2 u_fillTranslation;
uniform mediump float u_depth;
uniform mediump float u_outline_width;
varying lowp vec2 v_normal;
const float scale = 1.0 / 15.0;
void main()
{
#pragma main
v_color = color * opacity;
v_normal = a_xnormal;
mediump vec2 dist = u_outline_width * scale * a_offset;
mediump vec3 pos = u_dvsMat3 * vec3(a_pos, 1.0) + u_displayMat3 * vec3(dist + u_fillTranslation, 0.0);
gl_Position = vec4(pos.xy, u_depth, 1.0);
}`},text:{"text.frag":`uniform lowp sampler2D u_texture;
varying lowp vec2 v_tex;
varying lowp vec4 v_color;
varying mediump float v_edgeWidth;
varying mediump float v_edgeDistance;
void main()
{
lowp float dist = texture2D(u_texture, v_tex).a;
mediump float alpha = smoothstep(v_edgeDistance - v_edgeWidth, v_edgeDistance + v_edgeWidth, dist);
gl_FragColor = alpha * v_color;
}`,"text.vert":`attribute vec2 a_pos;
attribute vec2 a_vertexOffset;
attribute vec4 a_texAngleRange;
attribute vec4 a_levelInfo;
attribute float a_opacityInfo;
#pragma header
varying lowp vec4 v_color;
uniform highp mat3 u_dvsMat3;
uniform highp mat3 u_displayMat3;
uniform highp mat3 u_displayViewMat3;
uniform mediump vec2 u_textTranslation;
uniform vec2 u_mosaicSize;
uniform mediump float u_depth;
uniform mediump float u_mapRotation;
uniform mediump float u_level;
uniform lowp float u_keepUpright;
uniform mediump float u_fadeDuration;
varying lowp vec2 v_tex;
const float offsetPrecision = 1.0 / 8.0;
const mediump float edgePos = 0.75;
uniform mediump float u_antialiasingWidth;
varying mediump float v_edgeDistance;
varying mediump float v_edgeWidth;
uniform lowp float u_halo;
const float sdfFontScale = 1.0 / 24.0;
const float sdfPixel = 3.0;
uniform highp float u_time;
void main()
{
#pragma main
if (u_halo > 0.5)
{
v_color = halo_color * opacity;
halo_width *= sdfPixel;
halo_blur *= sdfPixel;
}
else
{
v_color = color * opacity;
halo_width = 0.0;
halo_blur = 0.0;
}
float modded = mod(a_opacityInfo, 128.0);
float targetOpacity = (a_opacityInfo - modded) / 128.0;
float startOpacity = modded / 127.0;
float interpolatedOpacity = clamp(startOpacity + 2.0 * (targetOpacity - 0.5) * u_time / u_fadeDuration, 0.0, 1.0);
v_color *= interpolatedOpacity;
mediump float a_angle       = a_levelInfo[1];
mediump float a_minLevel    = a_levelInfo[2];
mediump float a_maxLevel    = a_levelInfo[3];
mediump vec2 a_tex          = a_texAngleRange.xy;
mediump float a_visMinAngle    = a_texAngleRange.z;
mediump float a_visMaxAngle    = a_texAngleRange.w;
mediump float delta_z = 0.0;
mediump float angle = mod(a_angle + u_mapRotation, 256.0);
if (a_visMinAngle < a_visMaxAngle)
{
delta_z += (1.0 - step(u_keepUpright, 0.0)) * (step(a_visMaxAngle, angle) + (1.0 - step(a_visMinAngle, angle)));
}
else
{
delta_z += (1.0 - step(u_keepUpright, 0.0)) * (step(a_visMaxAngle, angle) * (1.0 - step(a_visMinAngle, angle)));
}
delta_z += 1.0 - step(a_minLevel, u_level);
delta_z += step(a_maxLevel, u_level);
delta_z += step(v_color[3], 0.0);
v_tex = a_tex.xy / u_mosaicSize;
v_edgeDistance = edgePos - halo_width / size;
v_edgeWidth = (u_antialiasingWidth + halo_blur) / size;
mediump vec3 pos = u_dvsMat3 * vec3(a_pos, 1.0) + sdfFontScale * u_displayViewMat3 * vec3(offsetPrecision * size * a_vertexOffset, 0.0) + u_displayMat3 * vec3(u_textTranslation, 0.0);
gl_Position = vec4(pos.xy, u_depth + delta_z, 1.0);
}`},util:{"encoding.glsl":`const vec4 rgba2float_factors = vec4(
255.0 / (256.0),
255.0 / (256.0 * 256.0),
255.0 / (256.0 * 256.0 * 256.0),
255.0 / (256.0 * 256.0 * 256.0 * 256.0)
);
float rgba2float(vec4 rgba) {
return dot(rgba, rgba2float_factors);
}`,"util.glsl":`float nextPOT(in float x) {
return pow(2.0, ceil(log2(abs(x))));
}`}};function Fr(i){let e=zr;return i.split("/").forEach(t=>{e&&(e=e[t])}),e}const kr=new Ji(Fr);function I(i){return kr.resolveIncludes(i)}const vt=i=>be({PATTERN:i.pattern}),Br={shaders:i=>({vertexShader:vt(i)+I("background/background.vert"),fragmentShader:vt(i)+I("background/background.frag")})},Ar={shaders:i=>({vertexShader:I("circle/circle.vert"),fragmentShader:I("circle/circle.frag")})},bt=i=>be({PATTERN:i.pattern}),Ir={shaders:i=>({vertexShader:bt(i)+I("fill/fill.vert"),fragmentShader:bt(i)+I("fill/fill.frag")})},Dr={shaders:i=>({vertexShader:I("outline/outline.vert"),fragmentShader:I("outline/outline.frag")})},wt=i=>be({SDF:i.sdf}),Lr={shaders:i=>({vertexShader:wt(i)+I("icon/icon.vert"),fragmentShader:wt(i)+I("icon/icon.frag")})},xt=i=>be({PATTERN:i.pattern,SDF:i.sdf}),Nr={shaders:i=>({vertexShader:xt(i)+I("line/line.vert"),fragmentShader:xt(i)+I("line/line.frag")})},Ur={shaders:i=>({vertexShader:I("text/text.vert"),fragmentShader:I("text/text.frag")})};let Vr=class{constructor(){this._programByKey=new Map}dispose(){this._programByKey.forEach(i=>i.dispose()),this._programByKey.clear()}getMaterialProgram(i,e,t){const r=e.key<<3|this._getMaterialOptionsValue(e.type,t);if(this._programByKey.has(r))return this._programByKey.get(r);const s=this._getProgramTemplate(e.type),{shaders:a}=s,{vertexShader:o,fragmentShader:n}=a(t),l=e.getShaderHeader(),h=e.getShaderMain(),u=o.replace("#pragma header",l).replace("#pragma main",h),c=i.programCache.acquire(u,n,e.getAttributeLocations());return this._programByKey.set(r,c),c}_getMaterialOptionsValue(i,e){switch(i){case A.BACKGROUND:return(e.pattern?1:0)<<1;case A.FILL:return(e.pattern?1:0)<<1;case A.OUTLINE:return 0;case A.LINE:{const t=e;return(t.sdf?1:0)<<2|(t.pattern?1:0)<<1}case A.ICON:return(e.sdf?1:0)<<1;case A.CIRCLE:case A.TEXT:default:return 0}}_getProgramTemplate(i){switch(i){case A.BACKGROUND:return Br;case A.CIRCLE:return Ar;case A.FILL:return Ir;case A.ICON:return Lr;case A.LINE:return Nr;case A.OUTLINE:return Dr;case A.TEXT:return Ur;default:return null}}},Mt=class{constructor(){this._initialized=!1}dispose(){this._program=P(this._program),this._vertexArrayObject=P(this._vertexArrayObject)}render(i,e,t,r){i&&(this._initialized||this._initialize(i),i.setBlendFunctionSeparate(v.ONE,v.ONE_MINUS_SRC_ALPHA,v.ONE,v.ONE_MINUS_SRC_ALPHA),i.bindVAO(this._vertexArrayObject),i.useProgram(this._program),e.setSamplingMode(t),i.bindTexture(e,0),this._program.setUniform1i("u_tex",0),this._program.setUniform1f("u_opacity",r),i.drawArrays(ce.TRIANGLE_STRIP,0,4),i.bindTexture(null,0),i.bindVAO())}_initialize(i){if(this._initialized)return!0;const e=ve(i,dt);if(!e)return!1;const t=new Int8Array(16);t[0]=-1,t[1]=-1,t[2]=0,t[3]=0,t[4]=1,t[5]=-1,t[6]=1,t[7]=0,t[8]=-1,t[9]=1,t[10]=0,t[11]=1,t[12]=1,t[13]=1,t[14]=1,t[15]=1;const r=dt.attributes,s=new De(i,r,$i,{geometry:Le.createVertex(i,Ue.STATIC_DRAW,t)});return this._program=e,this._vertexArrayObject=s,this._initialized=!0,!0}};class Gr{constructor(e){this._rctx=e,this._programByKey=new Map}dispose(){this._programByKey.forEach(e=>e.dispose()),this._programByKey.clear()}getProgram(e,t=[]){const r=e.vsPath+"."+e.fsPath+JSON.stringify(t);if(this._programByKey.has(r))return this._programByKey.get(r);const s={...t.map(u=>typeof u=="string"?{name:u,value:!0}:u).reduce((u,c)=>({...u,[c.name]:c.value}),{})},{vsPath:a,fsPath:o,attributes:n}=e,l=lr(a,o,n,s),h=this._rctx.programCache.acquire(l.shaders.vertexShader,l.shaders.fragmentShader,l.attributes);if(!h)throw new Error("Unable to get program for key: ${key}");return this._programByKey.set(r,h),h}}let Hr=class{constructor(){this._resourceMap=new Map,this._inFlightResourceMap=new Map,this.geometryEngine=null,this.geometryEnginePromise=null}destroy(){this._inFlightResourceMap.clear(),this._resourceMap.clear()}getResource(i){return this._resourceMap.get(i)??null}async fetchResource(i,e){const t=this._resourceMap.get(i);if(t)return{width:t.width,height:t.height};let r=this._inFlightResourceMap.get(i);return r?r.then(s=>({width:s.width,height:s.height})):(r=cr(i,e),this._inFlightResourceMap.set(i,r),r.then(s=>(this._inFlightResourceMap.delete(i),this._resourceMap.set(i,s),{width:s.width,height:s.height}),()=>({width:0,height:0})))}deleteResource(i){this._inFlightResourceMap.delete(i),this._resourceMap.delete(i)}loadFont(i){return Ei(i)}};const Wr=512;let qr=class{constructor(i){this._resourceManager=i,this._cachedRasterizationCanvas=null}dispose(){this._cachedRasterizationCanvas=null}get _canvas(){return this._cachedRasterizationCanvas||(this._cachedRasterizationCanvas=document.createElement("canvas")),this._cachedRasterizationCanvas}rasterizeJSONResource(i){switch(i.type){case"dash":{const e=i.dashTemplate,t=i.capStyle,[r,s,a]=pr(e,t);return{size:[s,a],image:new Uint32Array(r.buffer),sdf:!0,simplePattern:!0,anchorX:0,anchorY:0}}case"fill-style":{const[e,t,r,s]=dr(this._canvas,i,at);return{size:[t,r],image:new Uint32Array(e.buffer),sdf:!1,simplePattern:!0,anchorX:0,anchorY:0,rasterizationScale:s}}case"sdf":return Ot(i);case"CIMHatchFill":case"CIMVectorMarker":case"CIMPictureMarker":return this._rasterizeCIMJSONResource(i)}}_rasterizeCIMJSONResource(i){switch(i.type){case"CIMHatchFill":{const e=re.fromCIMHatchFill(i,at);return this._rasterizeCIMVectorMarker(e)}case"CIMPictureMarker":{const e=re.fromCIMInsidePolygon(i);return this._rasterizeCIMVectorMarker(e)}case"CIMVectorMarker":{if(i.markerPlacement?.type==="CIMMarkerPlacementInsidePolygon"){const t=re.fromCIMInsidePolygon(i);return this._rasterizeCIMVectorMarker(t)}const e=ki(i);return e&&!i.avoidSDFRasterization?Ot(e):this._rasterizeCIMVectorMarker(i,!1)}}}_rasterizeCIMVectorMarker(i,e=!0){const t=e?Ri.fromExtent(i.frame):null,[r,s,a,o,n]=re.rasterize(this._canvas,i,t,this._resourceManager);return r?{size:[s,a],image:new Uint32Array(r.buffer),sdf:!1,simplePattern:!1,anchorX:o,anchorY:n}:null}rasterizeImageResource(i,e,t,r){this._canvas.width=i,this._canvas.height=e;const s=this._canvas.getContext("2d",{willReadFrequently:!0});t instanceof ImageData?s.putImageData(t,0,0):(t.setAttribute("width",`${i}px`),t.setAttribute("height",`${e}px`),s.drawImage(t,0,0,i,e));const a=s.getImageData(0,0,i,e),o=new Uint8Array(a.data);if(r){for(const d of r)if(d&&d.oldColor&&d.oldColor.length===4&&d.newColor&&d.newColor.length===4){const[p,_,m,f]=d.oldColor,[g,y,w,x]=d.newColor;if(p===g&&_===y&&m===w&&f===x)continue;for(let b=0;b<o.length;b+=4)p===o[b]&&_===o[b+1]&&m===o[b+2]&&f===o[b+3]&&(o[b]=g,o[b+1]=y,o[b+2]=w,o[b+3]=x)}}let n;for(let d=0;d<o.length;d+=4)n=o[d+3]/255,o[d]=o[d]*n,o[d+1]=o[d+1]*n,o[d+2]=o[d+2]*n;let l=o,h=i,u=e;const c=Wr;if(h>=c||u>=c){const d=h/u;d>1?(h=c,u=Math.round(c/d)):(u=c,h=Math.round(c*d)),l=new Uint8Array(4*h*u);const p=new Uint8ClampedArray(l.buffer);ri(o,i,e,p,h,u,!1)}return{size:[h,u],image:new Uint32Array(l.buffer),sdf:!1,simplePattern:!1,anchorX:0,anchorY:0}}};function Ot(i){if(!i)return null;const[e,t,r]=Bi(i);return e?{size:[t,r],image:new Uint32Array(e.buffer),sdf:!0,simplePattern:!0,anchorX:0,anchorY:0}:null}let we=class{constructor(i,e){this._width=0,this._height=0,this._free=[],this._width=i,this._height=e,this._free.push(new U(0,0,i,e))}get width(){return this._width}get height(){return this._height}allocate(i,e){if(i>this._width||e>this._height)return new U;let t=null,r=-1;for(let s=0;s<this._free.length;++s){const a=this._free[s];i<=a.width&&e<=a.height&&(t===null||a.y<=t.y&&a.x<=t.x)&&(t=a,r=s)}return t===null?new U:(this._free.splice(r,1),t.width<t.height?(t.width>i&&this._free.push(new U(t.x+i,t.y,t.width-i,e)),t.height>e&&this._free.push(new U(t.x,t.y+e,t.width,t.height-e))):(t.width>i&&this._free.push(new U(t.x+i,t.y,t.width-i,t.height)),t.height>e&&this._free.push(new U(t.x,t.y+e,i,t.height-e))),new U(t.x,t.y,i,e))}release(i){for(let e=0;e<this._free.length;++e){const t=this._free[e];if(t.y===i.y&&t.height===i.height&&t.x+t.width===i.x)t.width+=i.width;else if(t.x===i.x&&t.width===i.width&&t.y+t.height===i.y)t.height+=i.height;else if(i.y===t.y&&i.height===t.height&&i.x+i.width===t.x)t.x=i.x,t.width+=i.width;else{if(i.x!==t.x||i.width!==t.width||i.y+i.height!==t.y)continue;t.y=i.y,t.height+=i.height}this._free.splice(e,1),this.release(i)}this._free.push(i)}};const jr=256,Xr=i=>Math.floor(i/256);function $r(i){const e=new Set;for(const t of i)e.add(Xr(t));return e}function Yr(i,e,t){return i.has(e)||i.set(e,t().then(()=>{i.delete(e)}).catch(r=>{i.delete(e),si(r)})),i.get(e)}const Kr=i=>({rect:new U(0,0,0,0),page:0,metrics:{left:0,width:0,height:0,advance:0,top:0},code:i,sdf:!0});let Jr=class{constructor(i,e,t){this.width=0,this.height=0,this._dirties=[],this._glyphData=[],this._currentPage=0,this._glyphCache={},this._textures=[],this._rangePromises=new Map,this._preloadCache={},this.width=i,this.height=e,this._glyphSource=t,this._binPack=new we(i-4,e-4),this._glyphData.push(new Uint8Array(i*e)),this._dirties.push(!0),this._textures.push(null),this._initDecorationGlyphs()}dispose(){this._binPack=null;for(const i of this._textures)i&&i.dispose();this._textures.length=0,this._glyphData.length=0}_initDecorationGlyphs(){const i=[117,149,181,207,207,181,149,117],e=[],t=[];for(let a=0;a<i.length;a++){const o=i[a];for(let n=0;n<11;n++){const l=a>=3&&a<5&&n>=3&&n<8?255:0;e.push(o),t.push(l)}}const r={metrics:{width:5,height:2,left:0,top:0,advance:0},bitmap:new Uint8Array(e)},s={metrics:{width:5,height:2,left:0,top:0,advance:0},bitmap:new Uint8Array(t)};this._recordGlyph(r),this._recordGlyph(s)}getTexture(i,e){if(!this._textures[e]){const t=new R;t.pixelFormat=z.ALPHA,t.wrapMode=E.CLAMP_TO_EDGE,t.width=this.width,t.height=this.height,this._textures[e]=new H(i,t,new Uint8Array(this.width*this.height))}return this._dirties[e]&&(this._textures[e].setData(this._glyphData[e]),this._dirties[e]=!1),this._textures[e]}async getGlyphItems(i,e,t){const r=this._getGlyphCache(i);return await this._fetchRanges(i,e,t),e.map(s=>this._getMosaicItem(r,i,s))}bind(i,e,t,r){const s=this.getTexture(i,t);s.setSamplingMode(e),i.bindTexture(s,r)}preloadASCIIGlyphCache(i){const e=this._preloadCache[i];if(e!=null)return e;const t=this._glyphSource.preloadASCIIRange(i).then(()=>{const r=this._getGlyphCache(i);for(let s=0;s<256;s++)this._getMosaicItem(r,i,s)});return this._preloadCache[i]=t,t}_getGlyphCache(i){return this._glyphCache[i]||(this._glyphCache[i]={}),this._glyphCache[i]}_invalidate(){this._dirties[this._currentPage]=!0}async _fetchRanges(i,e,t){const r=$r(e),s=[];r.forEach(a=>{s.push(this._fetchRange(i,a,t))}),await Promise.all(s)}async _fetchRange(i,e,t){if(e>jr)return;const r=i+e;return Yr(this._rangePromises,r,()=>this._glyphSource.getRange(i,e,t))}_getMosaicItem(i,e,t){if(!i[t]){const r=this._glyphSource.getGlyph(e,t);if(!r?.metrics)return Kr(t);const s=this._recordGlyph(r),a=this._currentPage,o=r.metrics;i[t]={rect:s,page:a,metrics:o,code:t,sdf:!0},this._invalidate()}return i[t]}_recordGlyph(i){const e=i.metrics;let t;if(e.width===0)t=new U(0,0,0,0);else{const r=e.width+6,s=e.height+2*3;t=this._binPack.allocate(r,s),t.isEmpty&&(this._dirties[this._currentPage]||(this._glyphData[this._currentPage]=null),this._currentPage=this._glyphData.length,this._glyphData.push(new Uint8Array(this.width*this.height)),this._dirties.push(!0),this._textures.push(null),this._initDecorationGlyphs(),this._binPack=new we(this.width-4,this.height-4),t=this._binPack.allocate(r,s));const a=this._glyphData[this._currentPage],o=i.bitmap;let n,l;if(o)for(let h=0;h<s;h++){n=r*h,l=this.width*(t.y+h)+t.x;for(let u=0;u<r;u++)a[l+u]=o[n+u]}V("esri-glyph-debug")&&this._showDebugPage(a)}return t}_showDebugPage(i){const e=document.createElement("canvas"),t=e.getContext("2d"),r=new ImageData(this.width,this.height),s=r.data;e.width=this.width,e.height=this.height,e.style.border="1px solid black";for(let a=0;a<i.length;++a)s[4*a]=i[a],s[4*a+1]=0,s[4*a+2]=0,s[4*a+3]=255;t.putImageData(r,0,0),document.body.appendChild(e)}},St=class{constructor(i){for(this._metrics=[],this._bitmaps=[];i.next();)switch(i.tag()){case 1:{const e=i.getMessage();for(;e.next();)switch(e.tag()){case 3:{const t=e.getMessage();let r,s,a,o,n,l,h;for(;t.next();)switch(t.tag()){case 1:r=t.getUInt32();break;case 2:s=t.getBytes();break;case 3:a=t.getUInt32();break;case 4:o=t.getUInt32();break;case 5:n=t.getSInt32();break;case 6:l=t.getSInt32();break;case 7:h=t.getUInt32();break;default:t.skip()}t.release(),r&&(this._metrics[r]={width:a,height:o,left:n,top:l,advance:h},this._bitmaps[r]=s);break}default:e.skip()}e.release();break}default:i.skip()}}getMetrics(i){return this._metrics[i]}getBitmap(i){return this._bitmaps[i]}},Qr=class{constructor(){this._ranges=[]}getRange(i){return this._ranges[i]}addRange(i,e){this._ranges[i]=e}},Zr=class{constructor(i){this._glyphInfo={},this._baseURL=i}getRange(i,e,t){const r=this._getFontStack(i);if(r.getRange(e))return Promise.resolve();const s=256*e,a=s+255,o=this._baseURL.replace("{fontstack}",i).replace("{range}",s+"-"+a);return le(o,{responseType:"array-buffer",...t}).then(n=>{r.addRange(e,new St(new Je(new Uint8Array(n.data),new DataView(n.data))))})}async preloadASCIIRange(i){const e=this._getFontStack(i),t=0,r=255,s=this._baseURL.replace("{fontstack}",i).replace("{range}",t+"-"+r),a=await le(s,{responseType:"array-buffer"}),o=new St(new Je(new Uint8Array(a.data),new DataView(a.data)));for(let n=t;n<=r;n++)e.getRange(n)||e.addRange(n,o)}getGlyph(i,e){const t=this._getFontStack(i);if(!t)return;const r=Math.floor(e/256),s=t.getRange(r);return s?{metrics:s.getMetrics(e),bitmap:s.getBitmap(e)}:void 0}_getFontStack(i){let e=this._glyphInfo[i];return e||(e=this._glyphInfo[i]=new Qr),e}};const ue=1e20;let es=class{constructor(i,e=2){this._textureSize=i,this._rasterizationScale=e,this._canvasSize=this._textureSize*this._rasterizationScale,this._svg=null;const{_canvasSize:t}=this,r=document.createElement("canvas");r.width=r.height=t,this._context=r.getContext("2d",{willReadFrequently:!1}),this._gridOuter=new Float64Array(t*t),this._gridInner=new Float64Array(t*t),this._f=new Float64Array(t),this._d=new Float64Array(t),this._z=new Float64Array(t+1),this._v=new Int16Array(t)}dispose(){this._context=this._gridOuter=this._gridInner=this._f=this._d=this._z=this._v=null,this._svg&&(document.body.removeChild(this._svg),this._svg=null)}draw(i,e,t){const{_canvasSize:r,_textureSize:s,_rasterizationScale:a}=this,o=s/4;this._initSVG();const n=this.createSVGString(i,e);return new Promise((l,h)=>{const u=new Image;u.src="data:image/svg+xml; charset=utf8, "+encodeURIComponent(n),u.onload=()=>{u.onload=null,this._context.clearRect(0,0,r,r),this._context.drawImage(u,0,0,r,r);const d=this._context.getImageData(0,0,r,r),p=new Uint8Array(s*s*4);for(let _=0;_<r*r;_++){const m=d.data[4*_+3]/255;this._gridOuter[_]=m===1?0:m===0?ue:Math.max(0,.5-m)**2,this._gridInner[_]=m===1?ue:m===0?0:Math.max(0,m-.5)**2}this._edt(this._gridOuter,r,r),this._edt(this._gridInner,r,r);for(let _=0;_<s*s;_++){let m=0;for(let f=0;f<a;f++){const g=Math.floor(_/s)*a+f;for(let y=0;y<a;y++){const w=g*r+(_%s*a+y);m+=this._gridOuter[w]-this._gridInner[w]}}m/=a*a,m/=a,_r(.5-m/(2*o),p,4*_)}l(p)};const c=t?.signal;c&&ai(c,()=>h(oi()))})}_initSVG(){if(!this._svg){const i=document.createElementNS("http://www.w3.org/2000/svg","svg");i.setAttribute("style","position: absolute;"),i.setAttribute("width","0"),i.setAttribute("height","0"),i.setAttribute("aria-hidden","true"),i.setAttribute("role","presentation"),document.body.appendChild(i),this._svg=i}return this._svg}createSVGString(i,e){const t=this._initSVG(),r=document.createElementNS("http://www.w3.org/2000/svg","path");r.setAttribute("d",i),t.appendChild(r);const s=r.getBBox(),a=s.width/s.height,o=this._canvasSize/2;let n,l,h;if(a>1){n=o/s.width;const p=o*(1/a);l=this._canvasSize/4,h=o-p/2}else n=o/s.height,l=o-o*a/2,h=this._canvasSize/4;const u=-s.x*n+l,c=-s.y*n+h;r.setAttribute("style",`transform: matrix(${n}, 0, 0, ${n}, ${u}, ${c})`),r.setAttribute("stroke-width",""+.5/n);const d=`<svg style="fill:${e?"red":"none"}; stroke:${e?"none":"red"}" height="${this._canvasSize}" width="${this._canvasSize}" xmlns="http://www.w3.org/2000/svg">${t.innerHTML}</svg>`;return t.removeChild(r),d}_edt(i,e,t){const r=this._f,s=this._d,a=this._v,o=this._z;for(let n=0;n<e;n++){for(let l=0;l<t;l++)r[l]=i[l*e+n];this._edt1d(r,s,a,o,t);for(let l=0;l<t;l++)i[l*e+n]=s[l]}for(let n=0;n<t;n++){for(let l=0;l<e;l++)r[l]=i[n*e+l];this._edt1d(r,s,a,o,e);for(let l=0;l<e;l++)i[n*e+l]=Math.sqrt(s[l])}}_edt1d(i,e,t,r,s){t[0]=0,r[0]=-ue,r[1]=+ue;for(let a=1,o=0;a<s;a++){let n=(i[a]+a*a-(i[t[o]]+t[o]*t[o]))/(2*a-2*t[o]);for(;n<=r[o];)o--,n=(i[a]+a*a-(i[t[o]]+t[o]*t[o]))/(2*a-2*t[o]);o++,t[o]=a,r[o]=n,r[o+1]=+ue}for(let a=0,o=0;a<s;a++){for(;r[o+1]<a;)o++;e[a]=(a-t[o])*(a-t[o])+i[t[o]]}}};function q(i){return i&&i.type==="static"}let ts=class At{constructor(e,t,r=0){this._mosaicPages=[],this._maxItemSize=0,this._currentPage=0,this._pageWidth=0,this._pageHeight=0,this._mosaicRects=new Map,this._spriteCopyQueue=[],this.pixelRatio=1,this._pageWidth=e,this._pageHeight=t,r>0&&(this._maxItemSize=r),this.pixelRatio=window.devicePixelRatio||1,this._binPack=new we(this._pageWidth,this._pageHeight);const s=Math.floor(this._pageWidth),a=Math.floor(this._pageHeight);this._mosaicPages.push({mosaicsData:{type:"static",data:new Uint32Array(s*a)},size:[this._pageWidth,this._pageHeight],dirty:!0,texture:void 0})}getWidth(e){return e>=this._mosaicPages.length?-1:this._mosaicPages[e].size[0]}getHeight(e){return e>=this._mosaicPages.length?-1:this._mosaicPages[e].size[1]}getPageTexture(e){return e<this._mosaicPages.length?this._mosaicPages[e].texture:null}has(e){return this._mosaicRects.has(e)}get itemCount(){return this._mosaicRects.size}getSpriteItem(e){return this._mosaicRects.get(e)}addSpriteItem(e,t,r,s,a,o,n=1){if(this._mosaicRects.has(e))return this._mosaicRects.get(e);let l,h,u;if(q(r)?[l,h,u]=this._allocateImage(t[0],t[1]):(l=new U(0,0,t[0],t[1]),h=this._mosaicPages.length,this._mosaicPages.push({mosaicsData:r,size:[t[0]+2*G,t[1]+2*G],dirty:!0,texture:void 0})),l.width<=0||l.height<=0)return null;const c={type:"sprite",rect:l,width:t[0],height:t[1],sdf:a,simplePattern:o,rasterizationScale:n,page:h};return this._mosaicRects.set(e,c),q(r)&&(V("esri-mosaic-debug")&&this._showDebugSprite(t,r.data),this._copy({rect:l,spriteSize:t,spriteData:r.data,page:h,pageSize:u,repeat:s,sdf:a})),c}hasItemsToProcess(){return this._spriteCopyQueue.length!==0}processNextItem(){const e=this._spriteCopyQueue.pop();e&&this._copy(e)}getMosaicItemPosition(e){const t=this.getSpriteItem(e),r=t?.rect;if(!r)return null;r.width=t.width,r.height=t.height;const s=t.width,a=t.height,o=G,n=this._mosaicPages[t.page].size;return{size:[t.width,t.height],tl:[(r.x+o)/n[0],(r.y+o)/n[1]],br:[(r.x+o+s)/n[0],(r.y+o+a)/n[1]],page:t.page}}bind(e,t,r=0,s=0){const a=this._mosaicPages[r],o=a.mosaicsData;let n=a.texture;n||(n=Pt(e,a.size),a.texture=n),n.setSamplingMode(t),q(o)?(e.bindTexture(n,s),a.dirty&&(n.setData(new Uint8Array(o.data.buffer)),n.generateMipmap(),V("esri-mosaic-debug")&&this._showDebugPage(r))):(o.data.loadFrame(n),e.bindTexture(n,s),n.generateMipmap()),a.dirty=!1}getTexture(e,t=0){const r=this._mosaicPages[t],s=r.mosaicsData;let a=r.texture;return a||(a=Pt(e,r.size),r.texture=a),q(s)?r.dirty&&(a.setData(new Uint8Array(s.data.buffer)),a.generateMipmap(),V("esri-mosaic-debug")&&this._showDebugPage(t)):(s.data.loadFrame(a),a.generateMipmap()),r.dirty=!1,a}dispose(){this._binPack=null;for(const e of this._mosaicPages){const t=e.texture;t&&t.dispose();const r=e.mosaicsData;q(r)||r.data.destroy()}this._mosaicPages=null,this._mosaicRects.clear()}static _copyBits(e,t,r,s,a,o,n,l,h,u,c){let d=s*t+r,p=l*o+n;if(c){p-=o;for(let _=-1;_<=u;_++,d=((_+u)%u+s)*t+r,p+=o)for(let m=-1;m<=h;m++)a[p+m]=e[d+(m+h)%h]}else for(let _=0;_<u;_++){for(let m=0;m<h;m++)a[p+m]=e[d+m];d+=t,p+=o}}_copy(e){if(e.page>=this._mosaicPages.length)return;const t=this._mosaicPages[e.page],r=t.mosaicsData;if(!q(t.mosaicsData))throw new Y("mapview-invalid-resource","unsuitable data type!");const s=e.spriteData,a=r.data;At._copyBits(s,e.spriteSize[0],0,0,a,e.pageSize[0],e.rect.x+G,e.rect.y+G,e.spriteSize[0],e.spriteSize[1],e.repeat),t.dirty=!0}_allocateImage(e,t){e+=2*G,t+=2*G;const r=Math.max(e,t);if(this._maxItemSize&&this._maxItemSize<r){const a=2**Math.ceil(ht(e)),o=2**Math.ceil(ht(t)),n=new U(0,0,e,t);return this._mosaicPages.push({mosaicsData:{type:"static",data:new Uint32Array(a*o)},size:[a,o],dirty:!0,texture:void 0}),[n,this._mosaicPages.length-1,[a,o]]}const s=this._binPack.allocate(e,t);if(s.width<=0){const a=this._mosaicPages[this._currentPage];return!a.dirty&&q(a.mosaicsData)&&(a.mosaicsData.data=null),this._currentPage=this._mosaicPages.length,this._mosaicPages.push({mosaicsData:{type:"static",data:new Uint32Array(this._pageWidth*this._pageHeight)},size:[this._pageWidth,this._pageHeight],dirty:!0,texture:void 0}),this._binPack=new we(this._pageWidth,this._pageHeight),this._allocateImage(e,t)}return[s,this._currentPage,[this._pageWidth,this._pageHeight]]}_showDebugSprite([e,t],r){const s=document.createElement("canvas");s.width=e,s.height=t,s.setAttribute("style",`position: absolute; top: ${4+204*is++}px; right: 208px; width: 200px; height: 200px; border: 1px solid black;`);const a=s.getContext("2d"),o=new ImageData(e,t);o.data.set(new Uint8Array(r.buffer)),a.putImageData(o,0,0),document.body.appendChild(s)}_showDebugPage(e){const t=this._mosaicPages[e],{size:[r,s],mosaicsData:a}=t;if(!q(a))return;const o=`mosaicDebugPage${e}`,n=document.getElementById(o)??document.createElement("canvas");n.id=o,n.width=r,n.height=s,n.setAttribute("style",`position: absolute; top: ${4+204*e}px; right: 4px; width: 200px; height: 200px; border: 1px solid black;`);const l=n.getContext("2d"),h=new ImageData(r,s);h.data.set(new Uint8Array(a.data.buffer)),l.putImageData(h,0,0),document.body.appendChild(n)}},is=0;function Pt(i,e){const t=new R;return t.width=e[0],t.height=e[1],t.wrapMode=E.CLAMP_TO_EDGE,new H(i,t,null)}let rs=class{constructor(i,e,t,r){this._animation=i,this._frameData=null;const s=a=>{this._frameData=a,e.requestRender()};this.frameCount=this._animation.frameDurations.length,this.width=this._animation.width,this.height=this._animation.height,this._playHandle=yr(this._animation,t,r,s)}destroy(){this._playHandle.remove()}loadFrame(i){const e=this._frameData;if(e==null)return;const t="width"in e?e.width:e.codedWidth,r="height"in e?e.height:e.codedHeight;i.updateData(0,G,G,t,r,e),this._frameData=null}};const Tt="arial-unicode-ms-regular",ss=()=>Ee.getLogger("esri.views.2d.engine.webgl.TextureManager"),K=(i,e,t)=>ss().error(new Y(i,e,t));let as=class It{static fromMosaic(e,t){return new It(e,t.page,t.sdf)}constructor(e,t,r){this.mosaicType=e,this.page=t,this.sdf=r}};class os{constructor(e){this._requestRender=e,this._resourceManager=new Hr,this._invalidFontsMap=new Map,this._sdfConverter=new es(Ae),this._bindingInfos=new Array,this._hashToBindingIndex=new Map,this._ongoingRasterizations=new Map,this._imageRequestQueue=new ni({concurrency:10,process:async(t,r)=>{Re(r);try{return await le(t,{responseType:"image",signal:r})}catch(s){throw Qe(s)?s:new Y("mapview-invalid-resource",`Could not fetch requested resource at ${t}`,s)}}}),this._spriteMosaic=new ts(2048,2048,500),this._glyphSource=new Zr(`${li.fontsUrl}/{fontstack}/{range}.pbf`),this._glyphMosaic=new Jr(1024,1024,this._glyphSource),this._rasterizer=new qr(this.resourceManager)}dispose(){this._spriteMosaic.dispose(),this._glyphMosaic.dispose(),this._rasterizer.dispose(),this._sdfConverter.dispose(),this._spriteMosaic=null,this._glyphMosaic=null,this._sdfConverter=null,this._hashToBindingIndex.clear(),this._hashToBindingIndex=null,this._bindingInfos=null,this._ongoingRasterizations.clear(),this._ongoingRasterizations=null,this._imageRequestQueue.clear(),this._imageRequestQueue=null,this._resourceManager.destroy()}get sprites(){return this._spriteMosaic}get glyphs(){return this._glyphMosaic}get resourceManager(){return this._resourceManager}async rasterizeItem(e,t){if(e==null)return K("mapview-null-resource","Unable to rasterize null resource"),null;if(e.type!=="cim-rasterization-info")return K("mapview-unexpected-resource","Unable to rasterize resource"),null;const{resource:r}=e;if(r.type==="text"){const a=await this._rasterizeText(r,t);for(const o of a.glyphs)this._setTextureBinding(ye.GLYPH,o);return a}const s=await this._rasterizeSprite(r,t);return s&&this._setTextureBinding(ye.SPRITE,s),s}getMosaicInfo(e,t,r=!1){const s=this._getTextureBindingInfo(e,t,r);return s?{size:s.size,texture:{texture:s.texture,unit:s.type==="sprite"?Ii:ot}}:(K("mapview-invalid-resource",`Unable to find resource for ${t}`),{size:[0,0],texture:{texture:null,unit:0}})}_getTextureBindingInfo(e,t,r){const s=this._bindingInfos[t-1],a=s.page,o=r?N.LINEAR_MIPMAP_LINEAR:N.LINEAR;switch(s.mosaicType){case ye.SPRITE:{const n=[this.sprites.getWidth(a),this.sprites.getHeight(a)],l=this._spriteMosaic.getTexture(e,a);return l.setSamplingMode(o),{type:"sprite",texture:l,size:n}}case ye.GLYPH:{const n=[this.glyphs.width,this.glyphs.height],l=this._glyphMosaic.getTexture(e,a);return this._glyphMosaic.bind(e,o,a,ot),l.setSamplingMode(o),{type:"glyph",texture:l,size:n}}default:return K("mapview-texture-manager",`Cannot handle unknown type ${s.mosaicType}`),null}}_hashMosaic(e,t){return 1|e<<1|(t.sdf?1:0)<<2|t.page<<3}_setTextureBinding(e,t){const r=this._hashMosaic(e,t);if(!this._hashToBindingIndex.has(r)){const s=as.fromMosaic(e,t),a=this._bindingInfos.length+1;this._hashToBindingIndex.set(r,a),this._bindingInfos.push(s)}t.textureBinding=this._hashToBindingIndex.get(r)}async _rasterizeText(e,t){const{font:r,textString:s}=e,a=zi(r),o=this._invalidFontsMap.has(a),[n,l]=Fi(s),h=mr(n);try{const u=o?Tt:a;return V("esri-2d-stabilize-glyphs")&&await this._glyphMosaic.preloadASCIIGlyphCache(u),{type:"glyphs",glyphs:await this._glyphMosaic.getGlyphItems(u,h,t),isRightToLeft:l}}catch{return K("mapview-invalid-resource",`Couldn't find font ${a}. Falling back to Arial Unicode MS Regular`),this._invalidFontsMap.set(a,!0),{type:"glyphs",glyphs:await this._glyphMosaic.getGlyphItems(Tt,h,t),isRightToLeft:l}}}_hashSpriteResource(e){switch(e.type){case"path":return`path:${e.path}.${e.asFill?1:0}`;case"CIMPictureMarker":return`${e.type}:${e.url}:${e.size}`;case"CIMPictureFill":return`${e.type}:${e.url}:${e.height}`;case"CIMPictureStroke":return`${e.type}:${e.url}:${e.width}`;case"dash":return`dash:${e.capStyle}.${e.dashTemplate.join("")}`;case"sdf":return`sdf:${JSON.stringify(e.geom)}.${e.asFill?1:0}`;case"fill-style":return`fill_style:${e.style}`;case"animated":return JSON.stringify(fr(e));case"CIMHatchFill":case"CIMVectorMarker":return JSON.stringify(e)}}async _rasterizeSprite(e,t){if(!e)return null;const r=Xe(this._hashSpriteResource(e));if(this._spriteMosaic.has(r))return this._spriteMosaic.getSpriteItem(r);if("url"in e&&e.url||e.type==="CIMPictureFill"||e.type==="CIMPictureStroke"||e.type==="CIMPictureMarker"||e.type==="CIMVectorMarker"){const s=[];re.fetchResources({type:"CIMPointSymbol",symbolLayers:[e]},this._resourceManager,s),s.length>0&&await Promise.all(s)}switch(e.type){case"CIMPictureMarker":return e.markerPlacement?.type==="CIMMarkerPlacementInsidePolygon"?this._rasterizeJSONResource(r,e):this._handleAsyncResource(r,e,t);case"animated":case"CIMPictureFill":case"CIMPictureStroke":case"path":return this._handleAsyncResource(r,e,t);case"sdf":case"dash":case"fill-style":case"CIMVectorMarker":case"CIMHatchFill":return this._rasterizeJSONResource(r,e)}}_rasterizeJSONResource(e,t){const r=this._rasterizer.rasterizeJSONResource(t);if(r){const{size:s,image:a,sdf:o,simplePattern:n,rasterizationScale:l}=r;return this._addItemToMosaic(e,s,{type:"static",data:a},xe(t),o,n,l)}return null}async _handleAsyncResource(e,t,r){if(this._ongoingRasterizations.has(e))return this._ongoingRasterizations.get(e);let s;return s=t.type==="path"?this._handleSVG(t,e,r):this._handleImage(t,e,r),this._ongoingRasterizations.set(e,s),s.finally(()=>this._ongoingRasterizations.delete(e)),s}async _handleSVG(e,t,r){const s=[Ae,Ae],{asFill:a}=e,o=await this._sdfConverter.draw(e.path,a,r);return this._addItemToMosaic(t,s,{type:"static",data:new Uint32Array(o.buffer)},!1,!0,!0)}async _handleGIFOrPNG(e,t,r){const s=e.url,a=this.resourceManager.getResource(s);if(a==null)return null;const{width:o,height:n}=a;if(a instanceof HTMLImageElement){if(e.type==="animated")return K("mapview-unexpected-resource","Attempt to configure animations for a non-animated image."),null;const d="colorSubstitutions"in e?e.colorSubstitutions:void 0,{size:p,sdf:_,image:m}=this._rasterizer.rasterizeImageResource(o,n,a,d);return this._addItemToMosaic(t,p,{type:"static",data:m},xe(e),_,!1)}let l,h,u;e.type==="animated"?(l=!1,h={playAnimation:e.playAnimation,reverseAnimation:e.reverseAnimation,randomizeStartTime:e.randomizeStartTime,randomizeStartSeed:e.randomizeStartSeed,startTimeOffset:e.startTimeOffset,duration:e.duration,repeatType:e.repeatType,repeatDelay:e.repeatDelay},u=e.startGroup||0):(l=xe(e),h={},u=0);const c=new rs(a,this._requestRender,h,u);return this._addItemToMosaic(t,[c.width,c.height],{type:"animated",data:c},l,!1,!1)}async _handleImage(e,t,r){const s=e.url;if(ls(s)||cs(s))return this._handleGIFOrPNG(e,t,r);if(e.type==="animated")return K("mapview-unexpected-resource","Attempt to configure animations for a non-animated image."),null;try{let a;const o=this.resourceManager.getResource(s);if(o!=null&&o instanceof HTMLImageElement)a=o;else{const{data:p}=await this._imageRequestQueue.push(s,{...r});a=p}if(gr(s)){if("width"in e&&"height"in e)a.width=$(e.width),a.height=$(e.height);else if("cim"in e){const p=e;a.width=$(p.width??p.scaleX*p.size),a.height=$(p.size)}}if(!a.width||!a.height)return null;const n=a.width,l=a.height,h="colorSubstitutions"in e?e.colorSubstitutions:void 0,{size:u,sdf:c,image:d}=this._rasterizer.rasterizeImageResource(n,l,a,h);return this._addItemToMosaic(t,u,{type:"static",data:d},xe(e),c,!1)}catch(a){throw Qe(a)?a:new Y("mapview-invalid-resource",`Could not fetch requested resource at ${s}. ${a.message}`)}}_addItemToMosaic(e,t,r,s,a,o,n){return this._spriteMosaic.addSpriteItem(e,t,r,s,a,o,n)}}function xe(i){switch(i.type){case"CIMVectorMarker":case"CIMPictureMarker":return us(i);default:return!0}}const ns=i=>i!=null&&i.startsWith("data:image/gif"),ls=i=>i&&(i.includes(".gif")||ns(i)),hs=i=>i!=null&&i.startsWith("data:image/png"),cs=i=>i&&(i.includes(".png")||hs(i)),us=i=>i&&"markerPlacement"in i&&i.markerPlacement&&i.markerPlacement.type==="CIMMarkerPlacementInsidePolygon";let ds=class{constructor(i){this._queue=[],this._refreshable=i}destroy(){this._queue=[]}enqueueTextureUpdate(i,e){const t=hi(),r=i,s=Li,a=Math.ceil(r.height/s);Re(e);for(let o=0;o<a;o++){const n=o*s,l=o===a-1,h=l?r.height-s*o:s;this._queue.push({type:"chunk",request:i,resolver:t,chunk:o,chunkOffset:n,destHeight:h,chunkIsLast:l,options:e})}return ci(e,o=>t.reject(o)),t.promise}upload(){let i=0;for(;this._queue.length;){const e=performance.now(),t=this._queue.shift();if(t){if(t.options.signal!=null&&t.options.signal.aborted)continue;switch(t.type){case"chunk":this._uploadChunk(t);break;case"no-chunk":this._uploadNoChunk(t)}const r=performance.now()-e;if(i+=r,i+r>=Di)break}}this._queue.length&&this._refreshable.requestRender()}_uploadChunk(i){const{request:e,resolver:t,chunkOffset:r,chunkIsLast:s,destHeight:a}=i,{data:o,texture:n,width:l}=e;o!=null&&(n.updateData(0,0,r,l,a,o,r),s&&t.resolve())}_uploadNoChunk(i){const{request:e,resolver:t}=i,{data:r,texture:s}=e;s.setData(r),t.resolve()}};const ps=_i(-.5,-.5);let _s=class{constructor(){this._centerNdc=ze(),this._pxToNdc=ze(),this._worldDimensionsPx=ze(),this._mat3=Fe(),this._initialized=!1}dispose(){this._program=P(this._program),this._quad=P(this._quad)}render(i,e,t){const{context:r}=i,s=this._updateGeometry(i,t);if(e!=null){const{r:a,g:o,b:n,a:l}=e;r.setClearColor(l*a/255,l*o/255,l*n/255,l)}else r.setClearColor(0,0,0,0);if(r.setStencilFunction(Ve.ALWAYS,0,255),r.setStencilWriteMask(255),!s)return r.setClearStencil(1),void r.clear(r.gl.STENCIL_BUFFER_BIT|r.gl.COLOR_BUFFER_BIT);r.setClearStencil(0),r.clear(r.gl.STENCIL_BUFFER_BIT|r.gl.COLOR_BUFFER_BIT),this._initialized||this._initialize(r),r.setDepthWriteEnabled(!1),r.setDepthTestEnabled(!1),r.setColorMask(!1,!1,!1,!1),r.setBlendingEnabled(!1),r.setStencilOp(Ge.KEEP,Ge.KEEP,Ge.REPLACE),r.setStencilFunction(Ve.ALWAYS,1,255),r.setStencilTestEnabled(!0),r.useProgram(this._program),this._program.setUniformMatrix3fv("u_worldExtent",this._mat3),this._quad.draw(),this._quad.unbind()}_initialize(i){if(this._initialized)return;const e=ve(i,Qi);e&&(this._program=e,this._quad=new W(i,[0,0,1,0,0,1,1,1]),this._initialized=!0)}_updateGeometry(i,e){const{state:t,pixelRatio:r}=i,{size:s,rotation:a}=t,o=Math.round(s[0]*r),n=Math.round(s[1]*r);if(!t.spatialReference.isWrappable)return!1;const l=mi(a),h=Math.abs(Math.cos(l)),u=Math.abs(Math.sin(l)),c=Math.round(o*h+n*u),d=Math.round(r*t.worldScreenWidth);if(c<=d)return!1;const p=o*u+n*h,_=(e.left-e.right)*r/o,m=(e.bottom-e.top)*r/n;ke(this._worldDimensionsPx,d,p,1),ke(this._pxToNdc,2/o,-2/n,1),ke(this._centerNdc,_,m,1);const f=this._mat3;return ui(f,this._centerNdc),Ze(f,f,this._pxToNdc),a!==0&&di(f,f,l),Ze(f,f,this._worldDimensionsPx),pi(f,f,ps),!0}},Me=class{constructor(){this.name=this.constructor.name}createOptions(i,e){return null}},ms=class extends Me{constructor(){super(...arguments),this.defines=[],this._desc={vsPath:"fx/integrate",fsPath:"fx/integrate",attributes:new Map([["a_position",0]])}}dispose(){this._quad&&this._quad.dispose()}bind(){}unbind(){}draw(i,e){if(!e?.size)return;const{context:t,renderingOptions:r}=i;this._quad||(this._quad=new W(t,[0,0,1,0,0,1,1,1]));const s=t.getBoundFramebufferObject(),{x:a,y:o,width:n,height:l}=t.getViewport(),h=e.getBlock(Ie.Animation);if(h==null)return;const u=e.getUniforms(t);t.setViewport(0,0,e.size,e.size);const c=u.filterFlags,d=u.animation,p=V("featurelayer-animation-enabled")?r.labelsAnimationTime:1,_=h.getFBO(t,1);t.unbindTexture(_.colorTexture),this._computeDelta(i,_,d,c,p);const m=h.getFBO(t);t.unbindTexture(m.colorTexture),this._updateAnimationState(i,_,m),t.bindFramebuffer(s),t.setViewport(a,o,n,l)}_computeDelta(i,e,t,r,s){const{context:a,painter:o,displayLevel:n}=i,l=o.materialManager.getProgram(this._desc,["delta"]);if(a.bindFramebuffer(e),a.setColorMask(!0,!0,!0,!0),a.setClearColor(0,0,0,0),a.clear(a.gl.COLOR_BUFFER_BIT),a.useProgram(l),!("type"in r.texture)||!("type"in t.texture))throw new Error("InternalError: Expected to find texture");a.bindTexture(r.texture,r.unit),a.bindTexture(t.texture,t.unit),l.setUniform1i("u_maskTexture",r.unit),l.setUniform1i("u_sourceTexture",t.unit),l.setUniform1f("u_timeDelta",i.deltaTime),l.setUniform1f("u_animationTime",s),l.setUniform1f("u_zoomLevel",Math.round(10*n)),this._quad.draw()}_updateAnimationState(i,e,t){const{context:r,painter:s}=i,a=s.materialManager.getProgram(this._desc,["update"]);r.bindTexture(e.colorTexture,1),r.useProgram(a),a.setUniform1i("u_sourceTexture",1),r.bindFramebuffer(t),r.setColorMask(!0,!0,!0,!0),r.setClearColor(0,0,0,0),r.clear(r.gl.COLOR_BUFFER_BIT),this._quad.draw()}};const fs=i=>i.replace("-","_").toUpperCase(),Ct=i=>`#define ${fs(i)}
`;function Et(i){return{attributes:new Map([["a_pos",0],["a_tex",1]]),shaders:{vertexShader:Ct(i)+ct("blend/blend.vert"),fragmentShader:Ct(i)+ct("blend/blend.frag")}}}const Rt=()=>Ee.getLogger("esri.views.2d.engine.webgl.effects.blendEffects.BlendEffect");let gs=class{constructor(){this._size=[0,0]}dispose(i){this._backBufferTexture=P(this._backBufferTexture),this._quad=P(this._quad)}draw(i,e,t,r,s){const{context:a,drawPhase:o}=i;if(this._setupShader(a),r&&r!=="normal"&&o!==D.LABEL)return void this._drawBlended(i,e,t,r,s);const n=Et("normal"),l=a.programCache.acquire(n.shaders.vertexShader,n.shaders.fragmentShader,n.attributes);if(!l)return void Rt().error(new Y("mapview-BlendEffect",'Error creating shader program for blend mode "normal"'));a.useProgram(l),e.setSamplingMode(t),a.bindTexture(e,0),l.setUniform1i("u_layerTexture",0),l.setUniform1f("u_opacity",s),a.setBlendingEnabled(!0),a.setBlendFunction(v.ONE,v.ONE_MINUS_SRC_ALPHA);const h=this._quad;h.draw(),h.unbind(),l.dispose()}_drawBlended(i,e,t,r,s){const{context:a,state:o,pixelRatio:n,inFadeTransition:l}=i,{size:h}=o,u=a.getBoundFramebufferObject();let c,d;u!=null?(c=u.width,d=u.height):(c=Math.round(n*h[0]),d=Math.round(n*h[1])),this._createOrResizeTexture(i,c,d);const p=this._backBufferTexture;u.copyToTexture(0,0,c,d,0,0,p),a.setStencilTestEnabled(!1),a.setStencilWriteMask(0),a.setBlendingEnabled(!0),a.setDepthTestEnabled(!1),a.setDepthWriteEnabled(!1);const _=Et(r),m=a.programCache.acquire(_.shaders.vertexShader,_.shaders.fragmentShader,_.attributes);if(!m)return void Rt().error(new Y("mapview-BlendEffect",`Error creating shader program for blend mode ${r}`));a.useProgram(m),p.setSamplingMode(t),a.bindTexture(p,0),m.setUniform1i("u_backbufferTexture",0),e.setSamplingMode(t),a.bindTexture(e,1),m.setUniform1i("u_layerTexture",1),m.setUniform1f("u_opacity",s),m.setUniform1f("u_inFadeOpacity",l?1:0),a.setBlendFunction(v.ONE,v.ZERO);const f=this._quad;f.draw(),f.unbind(),m.dispose(),a.setBlendFunction(v.ONE,v.ONE_MINUS_SRC_ALPHA)}_setupShader(i){this._quad||(this._quad=new W(i,[-1,-1,1,-1,-1,1,1,1]))}_createOrResizeTexture(i,e,t){const{context:r}=i;if(this._backBufferTexture===null||e!==this._size[0]||t!==this._size[1]){if(this._backBufferTexture)this._backBufferTexture.resize(e,t);else{const s=new R;s.internalFormat=z.RGBA,s.wrapMode=E.CLAMP_TO_EDGE,s.width=e,s.height=t,this._backBufferTexture=new H(r,s)}this._size[0]=e,this._size[1]=t}}},zt=class extends Me{constructor(i){super(),this.name=this.constructor.name,this.defines=[i]}dispose(){}bind({context:i,painter:e}){this._prev=i.getBoundFramebufferObject();const t=e.getFbos().effect0;i.bindFramebuffer(t),i.setColorMask(!0,!0,!0,!0),i.setClearColor(0,0,0,0),i.clear(i.gl.COLOR_BUFFER_BIT)}unbind(){}draw(i,e){const{context:t,painter:r}=i,s=r.getPostProcessingEffects(e),a=t.getBoundFramebufferObject();for(const{postProcessingEffect:o,effect:n}of s)o.draw(i,a,n);t.bindFramebuffer(this._prev),t.setStencilTestEnabled(!1),r.blitTexture(t,a.colorTexture,N.NEAREST),t.setStencilTestEnabled(!0)}},ys=class{constructor(){this._width=void 0,this._height=void 0,this._resources=null}dispose(){this._resources&&(this._resources.quadGeometry.dispose(),this._resources.quadVAO.dispose(),this._resources.highlightProgram.dispose(),this._resources.blurProgram.dispose(),this._resources=null)}preBlur(i,e){i.bindTexture(e,he),i.useProgram(this._resources.blurProgram),this._resources.blurProgram.setUniform4fv("u_direction",[1,0,1/this._width,0]),this._resources.blurProgram.setUniformMatrix4fv("u_channelSelector",Wi),i.bindVAO(this._resources.quadVAO),i.drawArrays(ce.TRIANGLE_STRIP,0,4),i.bindVAO()}finalBlur(i,e){i.bindTexture(e,he),i.useProgram(this._resources.blurProgram),this._resources.blurProgram.setUniform4fv("u_direction",[0,1,0,1/this._height]),this._resources.blurProgram.setUniformMatrix4fv("u_channelSelector",qi),i.bindVAO(this._resources.quadVAO),i.drawArrays(ce.TRIANGLE_STRIP,0,4),i.bindVAO()}renderHighlight(i,e,t){i.bindTexture(e,he),i.useProgram(this._resources.highlightProgram),t.applyHighlightOptions(i,this._resources.highlightProgram),i.bindVAO(this._resources.quadVAO),i.setBlendingEnabled(!0),i.setBlendFunction(v.ONE,v.ONE_MINUS_SRC_ALPHA),i.drawArrays(ce.TRIANGLE_STRIP,0,4),i.bindVAO()}_initialize(i,e,t){this._width=e,this._height=t;const r=Le.createVertex(i,Ue.STATIC_DRAW,new Int8Array([-1,-1,0,0,1,-1,1,0,-1,1,0,1,1,1,1,1]).buffer),s=new De(i,new Map([["a_position",0],["a_texcoord",1]]),{geometry:[new ft("a_position",2,pt.BYTE,0,4),new ft("a_texcoord",2,pt.UNSIGNED_BYTE,2,4)]},{geometry:r}),a=ve(i,Zi),o=ve(i,er);i.useProgram(a),a.setUniform1i("u_texture",he),a.setUniform1i("u_shade",Ni),a.setUniform1f("u_sigma",lt),i.useProgram(o),o.setUniform1i("u_texture",he),o.setUniform1f("u_sigma",lt),this._resources={quadGeometry:r,quadVAO:s,highlightProgram:a,blurProgram:o}}setup(i,e,t){this._resources?(this._width=e,this._height=t):this._initialize(i,e,t)}};function Ft(i,e,t){const r=new R(e,t);return r.wrapMode=E.CLAMP_TO_EDGE,new L(i,r,new Ne(He.STENCIL_INDEX8,e,t))}let vs=class{constructor(){this._width=void 0,this._height=void 0,this._resources=null}dispose(){this._resources&&(this._resources.sharedBlur1Fbo.dispose(),this._resources.sharedBlur2Fbo.dispose(),this._resources=null)}_initialize(i,e,t){this._width=e,this._height=t;const r=Ft(i,e,t),s=Ft(i,e,t);this._resources={sharedBlur1Fbo:r,sharedBlur2Fbo:s}}setup(i,e,t){!this._resources||this._width===e&&this._height===t||this.dispose(),this._resources||this._initialize(i,e,t)}get sharedBlur1Tex(){return this._resources.sharedBlur1Fbo.colorTexture}get sharedBlur1Fbo(){return this._resources.sharedBlur1Fbo}get sharedBlur2Tex(){return this._resources.sharedBlur2Fbo.colorTexture}get sharedBlur2Fbo(){return this._resources.sharedBlur2Fbo}};const J=4,Oe=4/J;let bs=class extends Me{constructor(){super(...arguments),this.defines=["highlight"],this._hlRenderer=new ys,this._width=void 0,this._height=void 0,this._boundFBO=null,this._hlSurfaces=new vs,this._adjustedWidth=void 0,this._adjustedHeight=void 0,this._blitRenderer=new Mt}dispose(){this._hlSurfaces?.dispose(),this._hlRenderer?.dispose(),this._boundFBO=null}bind(i){const{context:e,painter:t}=i,{width:r,height:s}=e.getViewport(),a=t.getFbos().effect0;this.setup(i,r,s),e.bindFramebuffer(a),e.setColorMask(!0,!0,!0,!0),e.setClearColor(0,0,0,0),e.clear(e.gl.COLOR_BUFFER_BIT)}unbind(){}setup({context:i},e,t){this._width=e,this._height=t;const r=e%J,s=t%J;e+=r<J/2?-r:J-r,t+=s<J/2?-s:J-s,this._adjustedWidth=e,this._adjustedHeight=t,this._boundFBO=i.getBoundFramebufferObject();const a=Math.round(e*Oe),o=Math.round(t*Oe);this._hlRenderer.setup(i,a,o),this._hlSurfaces.setup(i,a,o)}draw(i){const{context:e,passOptions:t}=i,r=t.activeGradient,s=e.getBoundFramebufferObject();e.setViewport(0,0,this._adjustedWidth*Oe,this._adjustedHeight*Oe),e.bindFramebuffer(this._hlSurfaces.sharedBlur1Fbo),e.setStencilTestEnabled(!1),e.setClearColor(0,0,0,0),e.clear(e.gl.COLOR_BUFFER_BIT),this._blitRenderer.render(e,s.colorTexture,N.NEAREST,1),e.setStencilTestEnabled(!1),e.setBlendingEnabled(!1),e.setColorMask(!1,!1,!1,!0),e.bindFramebuffer(this._hlSurfaces.sharedBlur2Fbo),e.setClearColor(0,0,0,0),e.clear(e.gl.COLOR_BUFFER_BIT),this._hlRenderer.preBlur(e,this._hlSurfaces.sharedBlur1Tex),e.bindFramebuffer(this._hlSurfaces.sharedBlur1Fbo),e.setClearColor(0,0,0,0),e.clear(e.gl.COLOR_BUFFER_BIT),this._hlRenderer.finalBlur(e,this._hlSurfaces.sharedBlur2Tex),e.bindFramebuffer(this._boundFBO),e.setBlendingEnabled(!0),e.setColorMask(!0,!0,!0,!0),e.setViewport(0,0,this._width,this._height),this._hlRenderer.renderHighlight(e,this._hlSurfaces.sharedBlur1Tex,r),this._boundFBO=null}},ws=class extends Me{constructor(){super(...arguments),this.name=this.constructor.name,this.defines=["hittest"]}dispose(){this._fbo!=null&&this._fbo.dispose()}createOptions({pixelRatio:i},e){if(!e.length)return null;const t=e.shift(),r=t.x,s=t.y;this._outstanding=t;const a=V("esri-mobile");return{type:"hittest",distance:(a?nt:Ui)*i,smallSymbolDistance:(a?nt:Vi)*i,smallSymbolSizeThreshold:Gi,position:[r,s]}}bind(i){const{context:e,attributeView:t}=i;if(!t.size)return;const r=t.getBlock(Ie.GPGPU);if(r==null)return;const s=r.getFBO(e);e.setViewport(0,0,t.size,t.size),e.bindFramebuffer(s),e.setColorMask(!0,!0,!0,!0),e.setClearColor(0,0,0,0),e.clear(e.gl.COLOR_BUFFER_BIT|e.gl.DEPTH_BUFFER_BIT)}unbind(){}draw(i){if(this._outstanding==null)return;const e=this._outstanding;this._outstanding=null,this._resolve(i,e.resolvers)}async _resolve(i,e){const{context:t,attributeView:r}=i,s=r.getBlock(Ie.GPGPU);if(s==null)return void e.forEach(l=>l.resolve([]));const a=s.getFBO(t),o=new Uint8Array(a.width*a.height*4);try{await a.readPixelsAsync(0,0,a.width,a.height,z.RGBA,_t.UNSIGNED_BYTE,o)}catch{return void e.forEach(l=>l.resolve([]))}const n=[];for(let l=0;l<o.length;l+=4){const h=l/4;o[l]&&n.push(h)}e.forEach(l=>l.resolve(n))}};const je=5,xs=[1,0],Ms=[0,1],Os=[1,.8,.6,.4,.2],Ss=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];let Ps=class{constructor(){this._intensityFBO=null,this._compositeFBO=null,this._mipsFBOs=new Array(je),this._nMips=je,this._kernelSizeArray=[3,5,7,9,11],this._size=[0,0],this._programDesc={luminosityHighPass:{vsPath:"post-processing/pp",fsPath:"post-processing/bloom/luminosityHighPass",attributes:new Map([["a_position",0]])},gaussianBlur:{vsPath:"post-processing/pp",fsPath:"post-processing/bloom/gaussianBlur",attributes:new Map([["a_position",0]])},composite:{vsPath:"post-processing/pp",fsPath:"post-processing/bloom/composite",attributes:new Map([["a_position",0]])},blit:{vsPath:"post-processing/pp",fsPath:"post-processing/blit",attributes:new Map([["a_position",0]])}}}dispose(){if(this._quad=P(this._quad),this._intensityFBO=P(this._intensityFBO),this._compositeFBO=P(this._compositeFBO),this._mipsFBOs){for(let i=0;i<this._nMips;i++)this._mipsFBOs[i]&&(this._mipsFBOs[i].horizontal.dispose(),this._mipsFBOs[i].vertical.dispose());this._mipsFBOs=null}}draw(i,e,t){const{width:r,height:s}=e,{context:a,painter:o}=i,{materialManager:n}=o,l=a.gl,h=this._programDesc,{strength:u,radius:c,threshold:d}=t;this._quad||(this._quad=new W(a,[-1,-1,1,-1,-1,1,1,1])),this._createOrResizeResources(i,r,s),a.setStencilTestEnabled(!1),a.setBlendingEnabled(!0),a.setBlendFunction(v.ONE,v.ONE_MINUS_SRC_ALPHA),a.setStencilWriteMask(0);const p=this._quad;p.bind(),a.bindFramebuffer(this._intensityFBO);const _=n.getProgram(h.luminosityHighPass);a.useProgram(_),a.bindTexture(e.colorTexture,0),_.setUniform1i("u_texture",0),_.setUniform3fv("u_defaultColor",[0,0,0]),_.setUniform1f("u_defaultOpacity",0),_.setUniform1f("u_luminosityThreshold",d),_.setUniform1f("u_smoothWidth",.01);const m=[Math.round(r/2),Math.round(s/2)];a.setViewport(0,0,m[0],m[1]),a.setClearColor(0,0,0,0),a.clear(l.COLOR_BUFFER_BIT),p.draw(),a.setBlendingEnabled(!1);let f=this._intensityFBO.colorTexture;for(let w=0;w<this._nMips;w++){const x=n.getProgram(h.gaussianBlur,[{name:"radius",value:this._kernelSizeArray[w]}]);a.useProgram(x),a.bindTexture(f,w+1),x.setUniform1i("u_colorTexture",w+1),x.setUniform2fv("u_texSize",m),x.setUniform2fv("u_direction",xs),a.setViewport(0,0,m[0],m[1]);const b=this._mipsFBOs[w];a.bindFramebuffer(b.horizontal),p.draw(),f=b.horizontal.colorTexture,a.bindFramebuffer(b.vertical),a.bindTexture(f,w+1),x.setUniform2fv("u_direction",Ms),p.draw(),f=b.vertical.colorTexture,m[0]=Math.round(m[0]/2),m[1]=Math.round(m[1]/2)}a.setViewport(0,0,r,s);const g=n.getProgram(h.composite,[{name:"nummips",value:je}]);a.bindFramebuffer(this._compositeFBO),a.useProgram(g),g.setUniform1f("u_bloomStrength",u),g.setUniform1f("u_bloomRadius",c),g.setUniform1fv("u_bloomFactors",Os),g.setUniform3fv("u_bloomTintColors",Ss),a.bindTexture(this._mipsFBOs[0].vertical.colorTexture,1),g.setUniform1i("u_blurTexture1",1),a.bindTexture(this._mipsFBOs[1].vertical.colorTexture,2),g.setUniform1i("u_blurTexture2",2),a.bindTexture(this._mipsFBOs[2].vertical.colorTexture,3),g.setUniform1i("u_blurTexture3",3),a.bindTexture(this._mipsFBOs[3].vertical.colorTexture,4),g.setUniform1i("u_blurTexture4",4),a.bindTexture(this._mipsFBOs[4].vertical.colorTexture,5),g.setUniform1i("u_blurTexture5",5),p.draw(),a.bindFramebuffer(e),a.setBlendingEnabled(!0);const y=n.getProgram(h.blit);a.useProgram(y),a.bindTexture(this._compositeFBO.colorTexture,6),y.setUniform1i("u_texture",6),a.setBlendFunction(v.ONE,v.ONE),p.draw(),p.unbind(),a.setBlendFunction(v.ONE,v.ONE_MINUS_SRC_ALPHA),a.setStencilTestEnabled(!0)}_createOrResizeResources(i,e,t){const{context:r}=i;if(this._compositeFBO&&this._size[0]===e&&this._size[1]===t)return;this._size[0]=e,this._size[1]=t;const s=[Math.round(e/2),Math.round(t/2)];if(this._compositeFBO)this._compositeFBO.resize(e,t);else{const a=new R(e,t);a.internalFormat=z.RGBA,a.wrapMode=E.CLAMP_TO_EDGE,this._compositeFBO=new L(r,a)}if(this._intensityFBO)this._intensityFBO.resize(s[0],s[1]);else{const a=new R(s[0],s[1]);a.internalFormat=z.RGBA,a.wrapMode=E.CLAMP_TO_EDGE,this._intensityFBO=new L(r,a)}for(let a=0;a<this._nMips;a++){if(this._mipsFBOs[a])this._mipsFBOs[a].horizontal.resize(s[0],s[1]),this._mipsFBOs[a].vertical.resize(s[0],s[1]);else{const o=new R(s[0],s[1]);o.internalFormat=z.RGBA,o.wrapMode=E.CLAMP_TO_EDGE,this._mipsFBOs[a]={horizontal:new L(r,o),vertical:new L(r,o)}}s[0]=Math.round(s[0]/2),s[1]=Math.round(s[1]/2)}}};const Ts=[1,0],Cs=[0,1];let Es=class{constructor(){this._blurFBO=null,this._size=[0,0],this._programDesc={gaussianBlur:{vsPath:"post-processing/pp",fsPath:"post-processing/blur/gaussianBlur",attributes:new Map([["a_position",0]])},radialBlur:{vsPath:"post-processing/pp",fsPath:"post-processing/blur/radial-blur",attributes:new Map([["a_position",0]])},blit:{vsPath:"post-processing/pp",fsPath:"post-processing/blit",attributes:new Map([["a_position",0]])}}}dispose(){this._blurFBO&&(this._blurFBO.dispose(),this._blurFBO=null)}draw(i,e,t){const{context:r}=i,{type:s,radius:a}=t;if(a===0)return;this._createOrResizeResources(i),this._quad||(this._quad=new W(r,[-1,-1,1,-1,-1,1,1,1]));const o=this._quad;o.bind(),s==="blur"?this._gaussianBlur(i,e,a):this._radialBlur(i,e),o.unbind()}_gaussianBlur(i,e,t){const{context:r,state:s,painter:a,pixelRatio:o}=i,{size:n}=s,{materialManager:l}=a,h=this._programDesc,u=this._quad,c=[Math.round(o*n[0]),Math.round(o*n[1])],d=this._blurFBO,p=l.getProgram(h.gaussianBlur,[{name:"radius",value:Math.ceil(t)}]);r.useProgram(p),r.setBlendingEnabled(!1),r.bindFramebuffer(d),r.bindTexture(e.colorTexture,4),p.setUniform1i("u_colorTexture",4),p.setUniform2fv("u_texSize",c),p.setUniform2fv("u_direction",Ts),p.setUniform1f("u_sigma",t),u.draw(),r.bindFramebuffer(e),r.setStencilWriteMask(0),r.setStencilTestEnabled(!1),r.setDepthWriteEnabled(!1),r.setDepthTestEnabled(!1),r.bindTexture(d?.colorTexture,5),p.setUniform1i("u_colorTexture",5),p.setUniform2fv("u_direction",Cs),u.draw(),r.setBlendingEnabled(!0),r.setBlendFunction(v.ONE,v.ONE_MINUS_SRC_ALPHA),r.setStencilTestEnabled(!0)}_radialBlur(i,e){const{context:t,painter:r}=i,{materialManager:s}=r,a=this._programDesc,o=this._quad,n=this._blurFBO;t.bindFramebuffer(n);const l=s.getProgram(a.radialBlur);t.useProgram(l),t.setBlendingEnabled(!1),t.bindTexture(e.colorTexture,4),l.setUniform1i("u_colorTexture",4),o.draw(),t.bindFramebuffer(e),t.setStencilWriteMask(0),t.setStencilTestEnabled(!1),t.setDepthWriteEnabled(!1),t.setDepthTestEnabled(!1),t.setBlendingEnabled(!0);const h=s.getProgram(a.blit);t.useProgram(h),t.bindTexture(n?.colorTexture,5),h.setUniform1i("u_texture",5),t.setBlendFunction(v.ONE,v.ONE_MINUS_SRC_ALPHA),o.draw()}_createOrResizeResources(i){const{context:e,state:t,pixelRatio:r}=i,{size:s}=t,a=Math.round(r*s[0]),o=Math.round(r*s[1]);if(!this._blurFBO||this._size[0]!==a||this._size[1]!==o)if(this._size[0]=a,this._size[1]=o,this._blurFBO)this._blurFBO.resize(a,o);else{const n=new R(a,o);n.internalFormat=z.RGBA,n.wrapMode=E.CLAMP_TO_EDGE,this._blurFBO=new L(e,n)}}};class Rs{constructor(){this._layerFBOTexture=null,this._size=[0,0],this._programDesc={vsPath:"post-processing/pp",fsPath:"post-processing/filterEffect",attributes:new Map([["a_position",0]])}}dispose(){this._layerFBOTexture=P(this._layerFBOTexture)}draw(e,t,r){const{width:s,height:a}=t;this._createOrResizeResources(e,s,a);const{context:o,painter:n}=e,{materialManager:l}=n,h=this._programDesc,u=this._quad,c=r.colorMatrix;u.bind();const d=this._layerFBOTexture;o.bindFramebuffer(t),t.copyToTexture(0,0,s,a,0,0,d),o.setBlendingEnabled(!1),o.setStencilTestEnabled(!1);const p=l.getProgram(h);o.useProgram(p),o.bindTexture(d,2),p.setUniformMatrix4fv("u_coefficients",c),p.setUniform1i("u_colorTexture",2),u.draw(),o.setBlendingEnabled(!0),o.setBlendFunction(v.ONE,v.ONE_MINUS_SRC_ALPHA),o.setStencilTestEnabled(!0),u.unbind()}_createOrResizeResources(e,t,r){const{context:s}=e;if(!this._layerFBOTexture||this._size[0]!==t||this._size[1]!==r){if(this._size[0]=t,this._size[1]=r,this._layerFBOTexture)this._layerFBOTexture.resize(t,r);else{const a=new R;a.internalFormat=z.RGBA,a.wrapMode=E.CLAMP_TO_EDGE,a.width=t,a.height=r,this._layerFBOTexture=new H(s,a)}this._quad||(this._quad=new W(s,[-1,-1,1,-1,-1,1,1,1]))}}}const zs=[1,0],Fs=[0,1];class ks{constructor(){this._layerFBOTexture=null,this._horizontalBlurFBO=null,this._verticalBlurFBO=null,this._size=[0,0],this._quad=null,this._programDesc={blur:{vsPath:"post-processing/pp",fsPath:"post-processing/blur/gaussianBlur",attributes:new Map([["a_position",0]])},composite:{vsPath:"post-processing/pp",fsPath:"post-processing/drop-shadow/composite",attributes:new Map([["a_position",0]])},blit:{vsPath:"post-processing/pp",fsPath:"post-processing/blit",attributes:new Map([["a_position",0]])}}}dispose(){this._layerFBOTexture=P(this._layerFBOTexture),this._horizontalBlurFBO=P(this._horizontalBlurFBO),this._verticalBlurFBO=P(this._verticalBlurFBO)}draw(e,t,r){const{context:s,state:a,painter:o}=e,{materialManager:n}=o,l=this._programDesc,h=t.width,u=t.height,c=[Math.round(h),Math.round(u)],{blurRadius:d,offsetX:p,offsetY:_,color:m}=r,f=[$(p),$(_)];this._createOrResizeResources(e,h,u,c);const g=this._horizontalBlurFBO,y=this._verticalBlurFBO;s.setStencilWriteMask(0),s.setStencilTestEnabled(!1),s.setDepthWriteEnabled(!1),s.setDepthTestEnabled(!1);const w=this._layerFBOTexture;t.copyToTexture(0,0,h,u,0,0,w),this._quad||(this._quad=new W(s,[-1,-1,1,-1,-1,1,1,1])),s.setViewport(0,0,c[0],c[1]);const x=this._quad;x.bind(),s.setBlendingEnabled(!1);const b=n.getProgram(l.blur,[{name:"radius",value:Math.ceil(d)}]);s.useProgram(b),s.bindFramebuffer(g),s.bindTexture(t.colorTexture,4),b.setUniform1i("u_colorTexture",4),b.setUniform2fv("u_texSize",c),b.setUniform2fv("u_direction",zs),b.setUniform1f("u_sigma",d),x.draw(),s.bindFramebuffer(y),s.bindTexture(g?.colorTexture,5),b.setUniform1i("u_colorTexture",5),b.setUniform2fv("u_direction",Fs),x.draw(),s.bindFramebuffer(t),s.setViewport(0,0,h,u);const O=n.getProgram(l.composite);s.useProgram(O),s.bindTexture(y?.colorTexture,2),O.setUniform1i("u_blurTexture",2),s.bindTexture(w,3),O.setUniform1i("u_layerFBOTexture",3),O.setUniform4fv("u_shadowColor",[m[3]*(m[0]/255),m[3]*(m[1]/255),m[3]*(m[2]/255),m[3]]),O.setUniformMatrix3fv("u_displayViewMat3",a.displayMat3),O.setUniform2fv("u_shadowOffset",f),x.draw(),s.setBlendingEnabled(!0),s.setStencilTestEnabled(!0),s.setBlendFunction(v.ONE,v.ONE_MINUS_SRC_ALPHA),x.unbind()}_createOrResizeResources(e,t,r,s){const{context:a}=e;if(!this._horizontalBlurFBO||this._size[0]!==t||this._size[1]!==r){if(this._size[0]=t,this._size[1]=r,this._horizontalBlurFBO)this._horizontalBlurFBO.resize(s[0],s[1]);else{const o=new R(s[0],s[1]);o.internalFormat=z.RGBA,o.wrapMode=E.CLAMP_TO_EDGE,this._horizontalBlurFBO=new L(a,o)}if(this._verticalBlurFBO)this._verticalBlurFBO.resize(s[0],s[1]);else{const o=new R(s[0],s[1]);o.internalFormat=z.RGBA,o.wrapMode=E.CLAMP_TO_EDGE,this._verticalBlurFBO=new L(a,o)}if(this._layerFBOTexture)this._layerFBOTexture.resize(t,r);else{const o=new R;o.internalFormat=z.RGBA,o.wrapMode=E.CLAMP_TO_EDGE,o.width=t,o.height=r,this._layerFBOTexture=new H(a,o)}}}}class Bs{constructor(){this._size=[0,0],this._layerFBOTexture=null}dispose(){this._layerFBOTexture=P(this._layerFBOTexture)}draw(e,t,r){const{width:s,height:a}=t;this._createOrResizeResources(e,s,a);const{context:o,painter:n}=e,{amount:l}=r,h=o.gl,u=this._layerFBOTexture;o.bindFramebuffer(t),t.copyToTexture(0,0,s,a,0,0,u),o.setBlendingEnabled(!0),o.setStencilTestEnabled(!1),o.setDepthTestEnabled(!1),o.setClearColor(0,0,0,0),o.clear(h.COLOR_BUFFER_BIT),n.blitTexture(o,u,N.NEAREST,l)}_createOrResizeResources(e,t,r){const{context:s}=e;if(!this._layerFBOTexture||this._size[0]!==t||this._size[1]!==r)if(this._size[0]=t,this._size[1]=r,this._layerFBOTexture)this._layerFBOTexture.resize(t,r);else{const a=new R;a.internalFormat=z.RGBA,a.wrapMode=E.CLAMP_TO_EDGE,a.samplingMode=N.NEAREST,a.width=t,a.height=r,this._layerFBOTexture=new H(s,a)}}}function As(i){switch(i){case"bloom":case"blur":case"opacity":case"drop-shadow":return i;default:return"colorize"}}const Is={colorize:()=>new Rs,blur:()=>new Es,bloom:()=>new Ps,opacity:()=>new Bs,"drop-shadow":()=>new ks};class Ds{constructor(){this._effectMap=new Map}dispose(){this._effectMap.forEach(e=>e.dispose()),this._effectMap.clear()}getPostProcessingEffects(e){if(!e||e.length===0)return[];const t=[];for(const r of e){const s=As(r.type);let a=this._effectMap.get(s);a||(a=Is[s](),this._effectMap.set(s,a)),t.push({postProcessingEffect:a,effect:r})}return t}}class Ls{constructor(e,t){this.brushes=e,this.name=t.name,this.drawPhase=t.drawPhase||D.MAP,this._targetFn=t.target,this.effects=t.effects||[],this.enableDefaultDraw=t.enableDefaultDraw??(()=>!0),this.forceDrawByDisplayOrder=!!t.forceDrawByDisplayOrder}render(e){const{context:t,profiler:r}=e,s=this._targetFn(),a=this.drawPhase&e.drawPhase;if(r.recordPassStart(this.name),a){this.enableDefaultDraw()&&this._doRender(e,s),r.recordPassEnd();for(const o of this.effects){if(!o.enable())continue;const n=o.apply,l=o.args?.(),h=t.getViewport(),u=t.getBoundFramebufferObject(),c=e.passOptions;this._bindEffect(e,n,l),this._doRender(e,s,n.defines),this._drawAndUnbindEffect(e,n,h,u,c,l)}}}_doRender(e,t,r){if(t==null)return;const{profiler:s,context:a}=e;for(const o of this.brushes){if(s.recordBrushStart(o.name),o.brushEffect!=null){const n=a.getViewport(),l=a.getBoundFramebufferObject(),h=e.passOptions;this._bindEffect(e,o.brushEffect),this._drawWithBrush(o,e,t,r),this._drawAndUnbindEffect(e,o.brushEffect,n,l,h)}else this._drawWithBrush(o,e,t,r);s.recordBrushEnd()}}_drawWithBrush(e,t,r,s){fi(r)?(e.prepareState(t,s),e.drawMany(t,r,s)):r.visible&&(e.prepareState(t,s),e.draw(t,r,s))}_bindEffect(e,t,r){const{profiler:s}=e;s.recordPassStart(this.name+"."+t.name),t.bind(e,r);const a=t.createOptions(e,r);e.passOptions=a}_drawAndUnbindEffect(e,t,r,s,a,o){const{profiler:n,context:l}=e;e.passOptions=a,n.recordBrushStart(t.name),t.draw(e,o),t.unbind(e,o),l.bindFramebuffer(s);const{x:h,y:u,width:c,height:d}=r;l.setViewport(h,u,c,d),n.recordBrushEnd(),n.recordPassEnd()}}class kt{constructor(){this._programCache=new Map}destroy(){for(const e of this._programCache.values())e.destroy();this._programCache.clear()}getProgram(e,t,r,s,a){const o=e.getShaderKey(t,r,s,a);let n=this._programCache.get(o);return n||(n=e.getProgram(t,r,s,a),this._programCache.set(o,n)),n}}let Ns=class{constructor(i,e){this.context=i,this._currentPipelineStateNeedsUpdate=!1,this._blitRenderer=new Mt,this._worldExtentRenderer=new _s,this._brushCache=new Map,this._lastWidth=null,this._lastHeight=null,this._vtlMaterialManager=new Vr,this._blendEffect=new gs,this._stencilBuf=null,this._prevBeforeLayerFBOStack=[],this._fboPool=[],this.effects={highlight:new bs,hittest:new ws,integrate:new ms,insideEffect:new zt("inside"),outsideEffect:new zt("outside")},this._programCache=new kt,this._shaderState={shader:null,uniforms:null,defines:null,optionalAttributes:null,useComputeBuffer:!1},this.materialManager=new Gr(i),this.textureManager=new os(e),this.textureUploadManager=new ds(e),this._effectsManager=new Ds,this._quadMesh=new W(i,[0,0,1,0,0,1,1,1])}dispose(){if(this._programCache.destroy(),this.materialManager.dispose(),this.textureManager.dispose(),this.textureUploadManager.destroy(),this._blitRenderer=P(this._blitRenderer),this._worldExtentRenderer=P(this._worldExtentRenderer),this._quadMesh.dispose(),this._brushCache&&(this._brushCache.forEach(i=>i.dispose()),this._brushCache.clear(),this._brushCache=null),this._fbos){let i;for(i in this._fbos)this._fbos[i]&&this._fbos[i].dispose()}for(const i of this._fboPool)i.dispose();if(this._fboPool.length=0,this.effects){let i;for(i in this.effects)this.effects[i]&&this.effects[i].dispose()}this._effectsManager.dispose(),this._blendEffect.dispose(this.context),this._vtlMaterialManager=P(this._vtlMaterialManager)}clearShaderCache(){this._programCache.destroy(),this._programCache=new kt}get blitRenderer(){return this._blitRenderer}get vectorTilesMaterialManager(){return this._vtlMaterialManager}getFbos(){if(!this._fbos)throw new Error("InternalError: Painter FBOs not initialized");return this._fbos}acquireFbo(i,e){let t;if(this._fboPool.length>0)t=this._fboPool.pop();else{const r=new R(i,e);r.samplingMode=N.NEAREST,r.wrapMode=E.CLAMP_TO_EDGE,t=new L(this.context,r,this._stencilBuf)}return t.width===i&&t.height===e||t.resize(i,e),t}releaseFbo(i){this._fboPool.push(i)}getSharedStencilBuffer(){return this._stencilBuf}beforeRenderPhases(i,e,t){const{context:r}=i;this._worldExtentRenderer.render(i,e,t);const{width:s,height:a}=r.getViewport();if(this.updateFBOs(s,a),this._prevFBO=r.getBoundFramebufferObject(),r.bindFramebuffer(this.getFbos().output),r.setColorMask(!0,!0,!0,!0),e!=null){const{r:o,g:n,b:l,a:h}=e;r.setClearColor(h*o/255,h*n/255,h*l/255,h)}else r.setClearColor(0,0,0,0);r.setDepthWriteEnabled(!0),r.setClearDepth(1),r.clear(r.gl.COLOR_BUFFER_BIT|r.gl.DEPTH_BUFFER_BIT),r.setDepthWriteEnabled(!1)}afterRenderPhases(i){const{context:e}=i;e.bindFramebuffer(this._prevFBO),e.setStencilFunction(Ve.EQUAL,1,255),e.setStencilTestEnabled(!0),e.setDepthTestEnabled(!1),this.blitTexture(e,this.getFbos().output.colorTexture,N.NEAREST)}beforeRenderLayer(i,e,t){const{context:r,blendMode:s,effects:a,drawPhase:o,requireFBO:n}=i;if(n||Bt(o,s,a,t)){const l=r.getBoundFramebufferObject();this._prevBeforeLayerFBOStack.push(l);const{width:h,height:u}=r.getViewport(),c=this.acquireFbo(h,u);r.bindFramebuffer(c),r.setColorMask(!0,!0,!0,!0),r.setClearColor(0,0,0,0),r.setDepthWriteEnabled(!0),r.setClearDepth(1),r.clear(r.gl.COLOR_BUFFER_BIT|r.gl.DEPTH_BUFFER_BIT),r.setDepthWriteEnabled(!1)}r.setDepthWriteEnabled(!1),r.setDepthTestEnabled(!1),r.setStencilTestEnabled(!0),r.setClearStencil(e),r.setStencilWriteMask(255),r.clear(r.gl.STENCIL_BUFFER_BIT)}afterRenderLayer(i,e){const{context:t,blendMode:r,effects:s,requireFBO:a,drawPhase:o}=i;if(a||Bt(o,r,s,e)){const n=t.getBoundFramebufferObject();s!=null&&s.length>0&&o===D.MAP&&(t.setColorMask(!0,!0,!0,!0),this._applyEffects(i,s,n)),t.bindFramebuffer(this._prevBeforeLayerFBOStack.pop()),t.setStencilTestEnabled(!1),t.setStencilWriteMask(0),t.setBlendingEnabled(!0),t.setBlendFunctionSeparate(v.ONE,v.ONE_MINUS_SRC_ALPHA,v.ONE,v.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0);const l=r==null||o===D.HIGHLIGHT?"normal":r;this._blendEffect.draw(i,n.colorTexture,N.NEAREST,l,e),this.releaseFbo(n)}}renderObject(i,e,t,r){const s=ut[t];if(!s)return;let a=this._brushCache.get(s);a===void 0&&(a=new s,this._brushCache.set(s,a)),a.prepareState(i),a.draw(i,e,r)}renderObjects(i,e,t,r){const s=ut[t];if(!s)return;let a=this._brushCache.get(s);a===void 0&&(a=new s,this._brushCache.set(s,a)),a.drawMany(i,e,r)}registerRenderPass(i){const e=i.brushes.map(t=>(this._brushCache.has(t)||this._brushCache.set(t,new t),this._brushCache.get(t)));return new Ls(e,i)}blitTexture(i,e,t,r=1){i.setBlendingEnabled(!0),i.setBlendFunctionSeparate(v.ONE,v.ONE_MINUS_SRC_ALPHA,v.ONE,v.ONE_MINUS_SRC_ALPHA),i.setColorMask(!0,!0,!0,!0),this._blitRenderer.render(i,e,t,r),this._currentPipelineStateNeedsUpdate=!0}getPostProcessingEffects(i){return this._effectsManager.getPostProcessingEffects(i)}updateFBOs(i,e){if(i!==this._lastWidth||e!==this._lastHeight){if(this._lastWidth=i,this._lastHeight=e,this._fbos){let s;for(s in this._fbos)this._fbos[s].resize(i,e);return}const t=new R(i,e);t.samplingMode=N.NEAREST,t.wrapMode=E.CLAMP_TO_EDGE;const r=new Ne(He.DEPTH_STENCIL,i,e);this._stencilBuf=new or(this.context,r),this._fbos={output:new L(this.context,t,this._stencilBuf),effect0:new L(this.context,t,this._stencilBuf)}}}_applyEffects(i,e,t){const{context:r}=i,s=this._effectsManager.getPostProcessingEffects(e);for(const{postProcessingEffect:a,effect:o}of s)r.bindFramebuffer(t),a.draw(i,t,o);this._currentPipelineStateNeedsUpdate=!0}setShader(i){this._shaderState.shader=i.shader,this._shaderState.uniforms=i.uniforms,this._shaderState.defines=i.defines,this._shaderState.optionalAttributes=i.optionalAttributes,this._shaderState.useComputeBuffer=i.useComputeBuffer??!1}setPipelineState(i){i!==this._currentPipelineState&&(this._currentPipelineState=i,this._currentPipelineStateNeedsUpdate=!0)}submitDraw(i,e){const{shader:t,uniforms:r,defines:s,optionalAttributes:a}=this._shaderState,o=i.context,n=e.getAttributePrecisionPackFactors(),l=this._programCache.getProgram(t,n,r,s??{},a??{});return l.setUniforms(r),l.bind(o),this.updatePipelineState(o),this.setStencilRef(o,e),e.draw(i,t.locationInfo),l.cleanupTemporaryTextures(),{vertexShader:l.vertexShader,fragmentShader:l.fragmentShader}}submitDrawQuad(i){const{shader:e,uniforms:t,defines:r,optionalAttributes:s}=this._shaderState,a=this._programCache.getProgram(e,{},t,r??{},s??{});a.setUniforms(t),a.bind(i),this.updatePipelineState(i),this._quadMesh.draw(),i.bindVAO(null),a.cleanupTemporaryTextures()}submitDrawMesh(i,e,t){const{shader:r,uniforms:s,defines:a,optionalAttributes:o}=this._shaderState,n=this._programCache.getProgram(r,{},s,a??{},o??{});if(n.setUniforms(s),n.bind(i),this.updatePipelineState(i),t)for(const l of t)e.bind(i,l),e.draw(i);else for(let l=0;l<e.parts.length;l++)e.bind(i,l),e.draw(i);e.unbind(i),n.cleanupTemporaryTextures()}updatePipelineState(i){this._currentPipelineStateNeedsUpdate&&(this._currentPipelineStateNeedsUpdate=!1,this._updatePipelineState(i))}_updatePipelineState(i){if(this._currentPipelineState==null)throw new Error("Pipeline state not defined. Call setPipelineState before calling submitDraw ");const{color:e,depth:t,stencil:r}=this._currentPipelineState;if(e){const{blendMode:s,write:a}=e;switch(i.setColorMask(...a),i.setBlendingEnabled(!0),i.setBlendEquation(mt.ADD),s){case"composite":i.setBlendFunctionSeparate(v.ONE,v.ONE_MINUS_SRC_ALPHA,v.ONE,v.ONE_MINUS_SRC_ALPHA);break;case"additive":i.setBlendFunctionSeparate(v.ONE,v.ONE,v.ONE,v.ONE);break;case"custom":{const{blendParameters:o}=e,{dstAlpha:n,dstRGB:l,srcAlpha:h,srcRGB:u}=o;i.setBlendFunctionSeparate(u,l,h,n);break}case"delete":i.setBlendEquation(mt.REVERSE_SUBTRACT),i.setBlendFunctionSeparate(v.ONE,v.ONE_MINUS_SRC_ALPHA,v.ONE,v.ONE_MINUS_SRC_ALPHA)}}if(t){const{test:s,write:a}=t;a?(i.setDepthWriteEnabled(!0),i.setDepthRange(a.zNear,a.zFar)):i.setDepthWriteEnabled(!1),s?(i.setDepthTestEnabled(!0),i.setDepthFunction(s)):i.setDepthTestEnabled(!1)}else i.setDepthTestEnabled(!1),i.setDepthWriteEnabled(!1);if(r){const{test:s,write:a}=r;if(s){const{compare:o,mask:n,op:l,ref:h}=s;i.setStencilTestEnabled(!0),typeof h!="function"&&i.setStencilFunctionSeparate(We.FRONT_AND_BACK,o,h,n),i.setStencilOpSeparate(We.FRONT_AND_BACK,l.fail,l.zFail,l.zPass)}else i.setStencilTestEnabled(!1);if(a){const{mask:o}=a;i.setStencilWriteMask(o)}else i.setStencilWriteMask(0)}else i.setStencilTestEnabled(!1),i.setStencilWriteMask(0)}setStencilRef(i,e){if(this._currentPipelineState==null)throw new Error("Pipeline state not defined. Call setPipelineState before calling submitDraw ");const{stencil:t}=this._currentPipelineState;if(t){const{test:r}=t;if(r){const{compare:s,mask:a,ref:o}=r;if(typeof o=="function"){const n=e.getStencilReference();if(n===null)throw new Error("InternalError: Stencil reference expected for target but not defined");i.setStencilFunctionSeparate(We.FRONT_AND_BACK,s,n,a)}}}}};function Bt(i,e,t,r){return i!==D.LABEL_ALPHA&&i!==D.LABEL&&i!==D.HIGHLIGHT&&(r!==1||e!=null&&e!=="normal"||t!=null&&t.length>0)}let Us=class{constructor(){this._candidateTiles=[]}schedule(i){this._candidateTiles.includes(i)||this._candidateTiles.push(i)}reshuffle(i){const e=[];for(const t of this._candidateTiles)i>0?(t.reshuffle(),i--):e.push(t);this._candidateTiles=e}};const Vs=2e3;class Gs extends ji{constructor(e,t){super(),this.meshWriterRegistry=new wr,this._trash=new Set,this._renderRemainingTime=0,this._lastFrameRenderTime=0,this._renderRequested=gi(!1),this.stage=this,this._stationary=!0,this._reshuffleManager=new Us,this._canvas=new Rr(e),this.context=new hr(this._canvas.gl,t.contextOptions??{}),this.painter=new Ns(this.context,this),this._cimAnalyzer=new Pr(this.painter.textureManager.resourceManager),V("esri-2d-profiler")&&(this._debugOutput=document.createElement("div"),this._debugOutput.setAttribute("style","margin: 24px 64px; position: absolute; color: red;"),e.appendChild(this._debugOutput));const r=()=>this._highlightGradient;this._renderParameters={drawPhase:0,state:this.state,pixelRatio:window.devicePixelRatio,stationary:!1,globalOpacity:1,blendMode:null,deltaTime:-1,time:0,inFadeTransition:!1,effects:null,context:this.context,painter:this.painter,timeline:t.timeline||new yi,renderingOptions:t.renderingOptions,requestRender:()=>this.requestRender(),allowDelayedRender:!1,requireFBO:!1,profiler:new tr(this.context,this._debugOutput),dataUploadCounter:0,get highlightGradient(){return r()},reshuffleManager:this._reshuffleManager,backgroundColor:t.backgroundColor},this._taskHandle=vi({render:s=>this.renderFrame(s)}),this._taskHandle.pause(),this._lostWebGLContextHandle=this._canvas.events.on("webgl-context-lost",s=>this.emit("webgl-error",{error:new Y("webgl-context-lost",s.statusMessage)})),this._bufferPool=new Yi,vr()}destroy(){br(this.context),this.removeAllChildren(),this._emptyTrash(),this._taskHandle=et(this._taskHandle),this._lostWebGLContextHandle=et(this._lostWebGLContextHandle),this._canvas.destroy(),this._debugOutput?.parentNode?.removeChild(this._debugOutput),this._bufferPool.destroy(),this.painter.dispose(),this.context.dispose(),this._canvas=null}get textureManager(){return this.painter.textureManager}get backgroundColor(){return this._renderParameters.backgroundColor}set backgroundColor(e){this._renderParameters.backgroundColor=e,this.requestRender()}get bufferPool(){return this._bufferPool}get cimAnalyzer(){return this._cimAnalyzer}get renderingOptions(){return this._renderingOptions}set renderingOptions(e){this._renderingOptions=e,this.requestRender()}get renderRequested(){return this._renderRequested.value}get state(){return this._state}set state(e){this._state=e,this.requestRender()}get stationary(){return this._stationary}set stationary(e){this._stationary!==e&&(this._stationary=e,this.requestRender())}trashDisplayObject(e){this._trash.add(e),this.requestRender()}untrashDisplayObject(e){return this._trash.delete(e)}requestRender(){this._renderRemainingTime=Vs,this.renderRequested||(this._renderRequested.value=!0,this._taskHandle.resume())}renderFrame(e){const t=this._lastFrameRenderTime?e.time-this._lastFrameRenderTime:0;this._renderRemainingTime-=t,this._renderRemainingTime<=0&&this._taskHandle.pause(),this._lastFrameRenderTime=e.time,this._renderRequested.value=!1,this._renderParameters.state=this._state,this._renderParameters.stationary=this.stationary,this._renderParameters.pixelRatio=window.devicePixelRatio,this._renderParameters.globalOpacity=1,this._renderParameters.time=e.time,this._renderParameters.deltaTime=e.deltaTime,this._renderParameters.effects=null,this.processRender(this._renderParameters),this._emptyTrash()}_createTransforms(){return{displayViewScreenMat3:Fe()}}renderChildren(e){for(const t of this.children)t.beforeRender(e);this._reshuffleManager.reshuffle(Hi),this._canvas.render(e,()=>this._renderChildren(this.children,e));for(const t of this.children)t.afterRender(e)}_renderChildren(e,t){const r=this.context;this.painter.textureUploadManager.upload(),r.resetInfo(),t.profiler.recordStart("drawLayers"),t.dataUploadCounter=0,this.painter.beforeRenderPhases(t,t.backgroundColor,this.state.padding),t.drawPhase=D.MAP;for(const s of e)s.processRender(t);if(this.children.some(s=>s.hasHighlight)){t.drawPhase=D.HIGHLIGHT;for(const s of e)s.processRender(t)}if(this.children.some(s=>s.hasLabels)){t.drawPhase=D.LABEL;for(const s of e)s.processRender(t)}if(V("esri-tiles-debug")){t.drawPhase=D.DEBUG;for(const s of e)s.processRender(t)}this.painter.afterRenderPhases(t),t.profiler.recordEnd("drawLayers"),r.logInfo()}doRender(e){const t=this.context,{state:r,pixelRatio:s}=e;this._canvas.resize(e),t.setViewport(0,0,s*r.size[0],s*r.size[1]),t.setDepthWriteEnabled(!0),t.setStencilWriteMask(255),this.renderChildren(e)}async takeScreenshot(e,t,r,s){const a=Math.round(this.state.size[0]*e.resolutionScale),o=Math.round(this.state.size[1]*e.resolutionScale),n=e.resolutionScale,l=this.context,h=this._state.clone();if(s!=null){const y=h.viewpoint;h.viewpoint.rotation=s,h.viewpoint=y}const u={...this._renderParameters,drawPhase:null,globalOpacity:1,stationary:!0,state:h,pixelRatio:n,time:performance.now(),deltaTime:0,blendMode:null,effects:null,inFadeTransition:!1,backgroundColor:r},c=new R(a,o);c.wrapMode=E.CLAMP_TO_EDGE,c.internalFormat=nr.RGBA8,c.isImmutable=!0;const d=new L(l,c,new Ne(He.DEPTH_STENCIL,a,o)),p=l.getBoundFramebufferObject(),_=l.getViewport();l.bindFramebuffer(d),l.setViewport(0,0,a,o),this._renderChildren(t??this.children,u);const m=this._readbackScreenshot(d,{...e.cropArea,y:o-(e.cropArea.y+e.cropArea.height)});l.bindFramebuffer(p),l.setViewport(_.x,_.y,_.width,_.height),this.requestRender();const f=await m;let g;return e.outputScale===1?g=f:(g=new ImageData(Math.round(f.width*e.outputScale),Math.round(f.height*e.outputScale)),bi(f,g)),d.dispose(),g}async _readbackScreenshot(e,t){const r=ur(t.width,t.height,document.createElement("canvas"));return await e.readPixelsAsync(t.x,t.y,t.width,t.height,z.RGBA,_t.UNSIGNED_BYTE,new Uint8Array(r.data.buffer)),r}_emptyTrash(){for(;this._trash.size>0;){const e=Array.from(this._trash);this._trash.clear();for(const t of e)t.processDetach()}}}async function Hs(i){const e=import("./mask-svg-DxA9o6hM.js"),t=import("./overlay-svg-C7fxD_NX.js"),r=gt((await e).default,{signal:i}),s=gt((await t).default,{signal:i}),a={mask:await r,overlay:await s};return Re(i),a}class Ws extends Xi{constructor(){super(),this._handles=new wi,this._resourcePixelRatio=1,this.updatingHandles=new xi,this.visible=!1}destroy(){this._handles=Mi(this._handles),this._disposeRenderResources(),this._resourcesTask=Oi(this._resourcesTask)}get backgroundColor(){return this._backgroundColor}set backgroundColor(e){this._backgroundColor=e,this.requestRender()}get magnifier(){return this._magnifier}set magnifier(e){this._magnifier=e,this._handles.removeAll(),this._handles.add([Be(()=>e.version,()=>{this.visible=e.visible&&e.position!=null&&e.size>0,this.requestRender()},Si),Be(()=>[e.maskUrl,e.overlayUrl],()=>this._reloadResources()),Be(()=>e.size,()=>{this._disposeRenderResources(),this.requestRender()})])}_createTransforms(){return{displayViewScreenMat3:Fe()}}doRender(e){const t=e.context;if(!this._resourcesTask)return void this._reloadResources();if(e.drawPhase!==D.MAP||!this._canRender())return;this._updateResources(e);const r=this._magnifier;if(r.position==null)return;const s=e.pixelRatio,a=r.size*s,o=1/r.factor,n=Math.ceil(o*a);this._readbackTexture.resize(n,n);const{size:l}=e.state,h=s*l[0],u=s*l[1],c=.5*n,d=.5*n,p=tt(s*r.position.x,c,h-c-1),_=tt(u-s*r.position.y,d,u-d-1);t.setBlendingEnabled(!0);const m=p-c,f=_-d,g=this._readbackTexture;t.bindTexture(g,0),t.gl.copyTexImage2D(g.descriptor.target,0,g.descriptor.pixelFormat,m,f,n,n,0);const y=this.backgroundColor,w=y?[y.a*y.r/255,y.a*y.g/255,y.a*y.b/255,y.a]:[1,1,1,1],x=(p+r.offset.x*s)/h*2-1,b=(_-r.offset.y*s)/u*2-1,O=a/h*2,T=a/u*2,S=this._program;t.bindVAO(this._vertexArrayObject),t.bindTexture(this._overlayTexture,6),t.bindTexture(this._maskTexture,7),t.useProgram(S),S.setUniform4fv("u_background",w),S.setUniform1i("u_readbackTexture",0),S.setUniform1i("u_overlayTexture",6),S.setUniform1i("u_maskTexture",7),S.setUniform4f("u_drawPos",x,b,O,T),S.setUniform1i("u_maskEnabled",r.maskEnabled?1:0),S.setUniform1i("u_overlayEnabled",r.overlayEnabled?1:0),t.setStencilTestEnabled(!1),t.setColorMask(!0,!0,!0,!0),t.drawArrays(ce.TRIANGLE_STRIP,0,4),t.bindVAO()}_canRender(){return this._mask&&this._overlay&&this._magnifier!=null}_reloadResources(){this._resourcesTask&&this._resourcesTask.abort();const e=this._magnifier!=null?this._magnifier.maskUrl:null,t=this._magnifier!=null?this._magnifier.overlayUrl:null;this._resourcesTask=Pi(async r=>{const s=e==null||t==null?Hs(r):null,a=e!=null?le(e,{responseType:"image",signal:r}).then(h=>h.data):s.then(h=>h.mask),o=t!=null?le(t,{responseType:"image",signal:r}).then(h=>h.data):s.then(h=>h.overlay),[n,l]=await Promise.all([a,o]);this._mask=n,this._overlay=l,this._disposeRenderResources(),this.requestRender()}),this.updatingHandles.addPromise(this._resourcesTask.promise)}_disposeRenderResources(){this._readbackTexture=P(this._readbackTexture),this._overlayTexture=P(this._overlayTexture),this._maskTexture=P(this._maskTexture),this._vertexArrayObject=P(this._vertexArrayObject),this._program=P(this._program)}_updateResources(e){if(e.pixelRatio!==this._resourcePixelRatio&&this._disposeRenderResources(),this._readbackTexture)return;const t=e.context;this._resourcePixelRatio=e.pixelRatio;const r=Math.ceil(this._magnifier.size*e.pixelRatio);this._program=ir(t);const s=new Uint16Array([0,1,0,0,1,1,1,0]),a=rr.attributes;this._vertexArrayObject=new De(t,a,Ki,{geometry:Le.createVertex(t,Ue.STATIC_DRAW,s)}),this._overlay.width=r,this._overlay.height=r;const o=new R;o.internalFormat=z.RGBA,o.wrapMode=E.CLAMP_TO_EDGE,o.samplingMode=N.NEAREST,o.flipped=!0,o.preMultiplyAlpha=!Ti(this._overlay.src)||!e.context.driverTest.svgPremultipliesAlpha.result,this._overlayTexture=new H(t,o,this._overlay),this._mask.width=r,this._mask.height=r,o.pixelFormat=o.internalFormat=z.ALPHA,this._maskTexture=new H(t,o,this._mask);const n=1/this._magnifier.factor;o.pixelFormat=o.internalFormat=z.RGBA,o.width=o.height=Math.ceil(n*r),o.samplingMode=N.LINEAR,o.flipped=!1,this._readbackTexture=new H(t,o)}}export{Mr as GraphicContainer,xr as GraphicsView2D,sr as LabelManager,Ws as MagnifierView2D,ar as MapViewNavigation,Gs as Stage};
