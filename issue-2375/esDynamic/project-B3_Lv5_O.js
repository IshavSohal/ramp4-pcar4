import{O as s,P as i,Q as d,bV as g,cz as n,cy as m,gm as S,b$ as y,c0 as R,a2 as w,gn as O}from"./main-C02UbYD7.js";let e=class extends g{constructor(o){super(o),this.geometries=[],this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const o=this.geometries.map(a=>a.toJSON()),t=this.geometries[0],r={};return r.outSR=n(this.outSpatialReference),r.inSR=n(t.spatialReference),r.geometries=JSON.stringify({geometryType:m(t),geometries:o}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),this.transformForward!=null&&(r.transformForward=this.transformForward),r}};s([i()],e.prototype,"geometries",void 0),s([i({json:{read:{source:"outSR"}}})],e.prototype,"outSpatialReference",void 0),s([i()],e.prototype,"transformation",void 0),s([i()],e.prototype,"transformForward",void 0),e=s([d("esri.rest.support.ProjectParameters")],e);const p=e,F=S(p);async function J(o,t,r){t=F(t);const a=y(o),f={...a.query,f:"json",...t.toJSON()},c=t.outSpatialReference,u=m(t.geometries[0]),h=R(f,r);return w(a.path+"/project",h).then(({data:{geometries:l}})=>O(l,u,c))}export{J as n,p};
