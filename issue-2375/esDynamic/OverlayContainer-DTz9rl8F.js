import{bG as z,bH as A,bI as B,bJ as C,bK as D,bL as E,bM as H,bN as J,aS as K,bO as L}from"./main-C02UbYD7.js";import{r as N}from"./vec3f32-BS0cezmI.js";import{n as j,h as k}from"./WGLContainer-DpYvmPLF.js";import{E as V}from"./Container-opHDNgle.js";class $ extends j{constructor(){super(...arguments),this._viewStateId=-1,this._dvsMat3=z()}get dvsMat3(){return this._dvsMat3}beforeRender(s){this._updateMatrices(s),this._updateOverlays(s,this.children);for(const e of this.children)e.beforeRender(s)}prepareRenderPasses(s){const e=s.registerRenderPass({name:"overlay",brushes:[k.overlay],target:()=>this.children,drawPhase:V.MAP});return[...super.prepareRenderPasses(s),e]}_updateMatrices(s){const{state:e}=s,{id:a,size:h,pixelRatio:r,resolution:c,rotation:l,viewpoint:b,displayMat3:f}=e;if(this._viewStateId===a)return;const p=Math.PI/180*l,i=r*h[0],n=r*h[1];this._localOrigin=b.targetGeometry.clone();const{x:d,y:_}=this._localOrigin,M=A(d,e.spatialReference);this._localOrigin.x=M,this._localOrigin.y=_;const v=c*i,m=c*n,t=B(this._dvsMat3);C(t,t,f),D(t,t,E(i/2,n/2)),H(t,t,N(i/v,-n/m,1)),J(t,t,-p),this._viewStateId=a}_updateOverlays(s,e){const{state:a}=s,{rotation:h,spatialReference:r,worldScreenWidth:c,size:l,viewpoint:b}=a,f=this._localOrigin;let p,i=0;const n=K(r);if(n&&r.isWrappable){const d=l[0],_=l[1],M=180/Math.PI*h,v=Math.abs(Math.cos(M)),m=Math.abs(Math.sin(M)),t=Math.round(d*v+_*m),[O,R]=n.valid,o=L(r),{x,y:I}=b.targetGeometry,S=[x,I],g=[0,0];a.toScreen(g,S);const u=[0,0];let y;y=t>c?.5*c:.5*t;const P=Math.floor((x+.5*o)/o),G=O+P*o,W=R+P*o,w=[g[0]+y,0];a.toMap(u,w),u[0]>W&&(i=o),w[0]=g[0]-y,a.toMap(u,w),u[0]<G&&(i=-o),p={worldWidth:o,xBounds:[O,R]}}for(const d of e)d.updateDrawCoords(f,i,r,p)}}export{$ as f};
