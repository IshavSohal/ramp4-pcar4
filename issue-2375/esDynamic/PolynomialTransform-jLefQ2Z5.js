import{O as c,P as p,Q as P,bV as Jt,c5 as je,nN as As,i1 as b,pK as tt,pL as H,pM as Ts,eO as et,pN as Ps,dB as K,ad as W,kl as Ns,ey as Fs,pO as Is,dO as Pt,pP as Et,pQ as Rs,pR as Me,pS as Oe,pT as De,pU as Cs,ek as Nt,pV as ks,dv as st,pW as _s,pX as Yt,pY as Zt,pZ as Bs,p_ as Ge,nL as Qt,p$ as Ee,q0 as Ss,q1 as Y,q2 as js,q3 as Ft,q4 as Ms,q5 as Os,q6 as Ds,q7 as Gs,q8 as te,q9 as Es,qa as zs,qb as Vs,s as It,mU as ze,a6 as Ve,b8 as Us}from"./main-C02UbYD7.js";let Ht=class extends Jt{constructor(){super(...arguments),this.raster=void 0}};c([p({json:{write:!0}})],Ht.prototype,"raster",void 0),Ht=c([P("esri.layers.support.rasterFunctions.BaseFunctionArguments")],Ht);const G=Ht;var ee;let Rt=ee=class extends G{constructor(){super(...arguments),this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new ee({raster:this.raster,raster2:this.raster2,operation:this.operation})}};c([p({json:{write:!0}})],Rt.prototype,"operation",void 0),c([p({json:{write:!0}})],Rt.prototype,"raster2",void 0),c([p({readOnly:!0})],Rt.prototype,"rasters",null),Rt=ee=c([P("esri.layers.support.rasterFunctions.ArithmeticFunctionArguments")],Rt);const Ls=Rt,Ws=new Set(["slope","aspect","curvature","hillshade","shadedrelief","statistics"]);let D=class extends Jt{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.rawSourceRasterInfos=null,this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const e=[t],{parameters:n}=t;let s=n.rasters||n.raster&&[n.raster];for(;s?.length;){e.unshift(...s);const o=[];for(let u=0;u<s.length;u++){const{parameters:l}=s[u],m=l.rasters||l.raster&&[l.raster];m?.length&&o.push(...m)}s=o}for(let o=e.length-1;o>=0;o--)e[o].isNoopProcess&&e.splice(o,1);let r=!1;for(let o=0;o<e.length;o++){const u=e[o];u.id=e.length-o-1;const{rasters:l}=u.parameters;r=r||l!=null&&l.length>1}const a=e.some(({name:o})=>Ws.has(o.toLowerCase())),{rawSourceRasterInfos:i}=this;return{functions:e,hasBranches:r,hasFocalFunction:a,isSourceSingleBand:i?.[0]?.bandCount===1}}bind(t,e=!1,n=-1){this.id=n+1;const s=this._getRasterValues();let r=!0;for(let a=0;a<s.length;a++){const i=s[a];if(i!=null&&this._isRasterFunctionValue(i)){const o=i.bind(t,e,this.id+a);if(!o.success)return this._bindingResult=o,o;r=r&&o.supportsGPU}}return!this.rasterInfo||e?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.success&&this._patchRasterInfo(),this._bindingResult.supportsGPU=r&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const e=this._getRasterValues(),n=e.length===0?t.pixelBlocks??t.primaryPixelBlocks:e.map(s=>this._readRasterValue(s,t));return this._processPixels({...t,pixelBlocks:n})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let e;if(t.length>1){const r=t.map(i=>i.processInputBandIds()[0]);this.rawInputBandIds=r,this.isInputBandIdsSwizzled=this.rawInputBandIds.some((i,o)=>i!==o);const a=t.filter(i=>i.functionName==="ExtractBand");return a.length&&a.forEach((i,o)=>{i.isInputBandIdsSwizzled=!0,i.swizzledBandSelection=[o,o,o]}),this.rawInputBandIds}const n=t[0];if(n){if(e=n.processInputBandIds(),n.isInputBandIdsSwizzled)return this.rawInputBandIds=e,e}else{e=[];const{bandCount:r}=this.sourceRasterInfos[0];for(let a=0;a<r;a++)e.push(a)}const s=this._getInputBandIds(e);return this.isInputBandIdsSwizzled=s.some((r,a)=>r!==a),this.rawInputBandIds=s,this.rawInputBandIds}getPrimaryRasters(){const t=[],e=[];return this._getPrimaryRasters(this,t,e),{rasters:t,rasterIds:e}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:e,rasters:n}=this.functionArguments;return n&&Array.isArray(n)&&n.length?(t.rasters=n.map(s=>this._isRasterFunctionValue(s)?s.getWebGLProcessorDefinition():typeof s=="number"?{name:"Constant",parameters:{value:s},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:s},pixelType:"f32",id:-1,isNoopProcess:!1}),t.rasters.some(s=>s!=null)||(t.rasters=null)):this._isRasterFunctionValue(e)&&(t.raster=e.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}getClippingGeometries(){const t=[];this.functionName==="Clip"&&t.push(this.functionArguments);const{raster:e,rasters:n}=this.functionArguments;if(n&&Array.isArray(n)&&n.length)n.forEach(s=>{if(this._isRasterFunctionValue(s)){const r=s.getClippingGeometries();t.push(...r)}});else if(this._isRasterFunctionValue(e)){const s=e.getClippingGeometries();t.push(...s)}return t}_getOutputPixelType(t){return this.outputPixelType==="unknown"?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_removeStatsHistColormapVAT(t){t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null}_getRasterValues(){const{rasterArgumentNames:t}=this;return t[0]==="rasters"?this.functionArguments.rasters??[]:t.flatMap(e=>this.functionArguments[e])}_getSourceRasterInfos(t){const e=this._getRasterValues(),{rasterInfos:n,rasterIds:s}=t;if(e.length===0)return n;const r=e.map(i=>i&&typeof i=="object"&&"bind"in i&&i.rasterInfo?i.rasterInfo:typeof i=="string"&&s.includes(i)?n[s.indexOf(i)]:typeof i!="number"?n[0]:void 0),a=r.find(i=>i)??n[0];return r.forEach((i,o)=>{i===void 0&&(r[o]=a)}),r}_getPrimaryRasterId(t){return t?.rasterId}_getPrimaryRasters(t,e=[],n=[]){for(let s=0;s<t.sourceRasters.length;s++){const r=t.sourceRasters[s];if(typeof r!="number")if("bind"in r)this._getPrimaryRasters(r,e,n);else{const a=r,i=this._getPrimaryRasterId(a);if(i==null)continue;n.includes(i)||(this.mainPrimaryRasterId===i?(e.unshift(a),n.unshift(i)):(e.push(a),n.push(i)))}}}_isRasterFunctionValue(t){return t!=null&&typeof t=="object"&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,e){const{primaryPixelBlocks:n}=e;if(t==null||t==="$$"){const s=n[0];return s==null?null:s.clone()}if(typeof t=="string"){const s=e.primaryRasterIds.indexOf(t);return s===-1?null:n[s]}if(typeof t=="number"){const s=n[0];if(s==null)return null;const{width:r,height:a,pixelType:i}=s,o=new Float32Array(r*a);o.fill(t);const u=this.sourceRasterInfos[0].bandCount,l=new Array(u).fill(o);return new b({width:r,height:a,pixelType:i,pixels:l})}return t.process(e)}_patchRasterInfo(){const{rasterInfo:t}=this;if(!t?.keyProperties)return;const{bandCount:e,keyProperties:n,statistics:s,histograms:r}=t,a=n.BandProperties;a&&a.length!==e&&(t.keyProperties={...n,BandProperties:void 0}),s&&s.length!==e&&(t.statistics=s.length>e?s.slice(0,e):null),r&&r.length!==e&&(t.histograms=r.length>e?r.slice(0,e):null),n.BAND_COUNT&&Number(n.BAND_COUNT)!==e&&(t.keyProperties={...n,BAND_COUNT:typeof n.BAND_COUNT=="string"?String(e):e})}};c([p({json:{write:!0}})],D.prototype,"functionName",void 0),c([p({json:{write:!0}})],D.prototype,"functionArguments",void 0),c([p()],D.prototype,"rasterArgumentNames",void 0),c([p({json:{write:!0}}),je(t=>t?.toLowerCase())],D.prototype,"outputPixelType",void 0),c([p({json:{write:!0}})],D.prototype,"mainPrimaryRasterId",void 0),c([p()],D.prototype,"sourceRasters",void 0),c([p({type:[As],json:{write:!0}})],D.prototype,"sourceRasterInfos",void 0),c([p({json:{write:!0}})],D.prototype,"rasterInfo",void 0),c([p({json:{write:!0}})],D.prototype,"readingBufferSize",void 0),c([p({json:{write:!0}})],D.prototype,"id",void 0),c([p()],D.prototype,"isNoopProcess",void 0),c([p()],D.prototype,"supportsGPU",null),c([p()],D.prototype,"rawInputBandIds",void 0),c([p()],D.prototype,"rawSourceRasterInfos",void 0),c([p()],D.prototype,"isInputBandIdsSwizzled",void 0),c([p()],D.prototype,"swizzledBandSelection",void 0),c([p()],D.prototype,"isBranch",void 0),c([p({readOnly:!0})],D.prototype,"flatWebGLFunctionChain",null),c([p()],D.prototype,"_bindingResult",void 0),D=c([P("esri.layers.support.rasterFunctions.BaseRasterFunction")],D);const E=D,C={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},qs={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65},L={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},X={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},Hs={majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75},Ue={setNull:50,conditional:78},Le={...qs,...L,...X,...Hs,...Ue},We=new Map([[X.acos,{domain:[0,Math.PI],isInteger:!1}],[X.asin,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[X.atan,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[X.cos,{domain:[-1,1],isInteger:!1}],[X.sin,{domain:[-1,1],isInteger:!1}],[L.booleanAnd,{domain:[0,1],isInteger:!0}],[L.booleanNot,{domain:[0,1],isInteger:!0}],[L.booleanOr,{domain:[0,1],isInteger:!0}],[L.booleanXOr,{domain:[0,1],isInteger:!0}],[L.equalTo,{domain:[0,1],isInteger:!0}],[L.notEqual,{domain:[0,1],isInteger:!0}],[L.greaterThan,{domain:[0,1],isInteger:!0}],[L.greaterThanEqual,{domain:[0,1],isInteger:!0}],[L.lessThan,{domain:[0,1],isInteger:!0}],[L.lessThanEqual,{domain:[0,1],isInteger:!0}],[L.isNull,{domain:[0,1],isInteger:!0}]]);function qe(t){return We.get(t)}const He=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function $s(t,e=!1){const n=t.map(o=>o.mask),s=n.filter(o=>o!=null),r=t[0].pixels[0].length;if(s.length===0||e&&s.length!==n.length)return new Uint8Array(r).fill(255);const a=s[0],i=new Uint8Array(a);if(s.length===1)return i;if(!e){for(let o=1;o<s.length;o++){const u=s[o];for(let l=0;l<i.length;l++)i[l]&&(i[l]=u[l]?255:0)}return i}for(let o=1;o<s.length;o++){const u=s[o];for(let l=0;l<i.length;l++)i[l]===0&&(i[l]=u[l]?255:0)}return i}function Xs(t,e,n){const[s,r]=t,a=s.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)e&&!e[o]||(i[o]=s[o]+r[o]);return i}function Ks(t,e,n){const[s]=t,r=s.length,a=b.createEmptyBand("f32",r);return a.set(s),a}function Js(t,e,n){const[s]=t,r=s.length,a=b.createEmptyBand(n,r);for(let i=0;i<r;i++)e&&!e[i]||(a[i]=s[i]*s[i]);return a}function Ys(t,e,n){const[s,r]=t,a=s.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)e&&!e[o]||(i[o]=s[o]-r[o]);return i}function Zs(t,e,n){const[s,r]=t,a=s.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)e&&!e[o]||(i[o]=s[o]*r[o]);return i}function Qs(t,e,n){const[s]=t,r=s.length,a=b.createEmptyBand(n,r);for(let i=0;i<r;i++)e&&!e[i]||(a[i]=Math.sign(s[i])*Math.floor(Math.abs(s[i])));return a}function $e(t,e,n){const[s,r]=t,a=s.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)e&&!e[o]||(i[o]=s[o]/r[o]);return i}function tn(t,e,n){return $e(t,e,"f32")}function en(t,e,n){const[s,r]=t,a=s.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)e&&!e[o]||(i[o]=Math.floor(s[o]/r[o]));return i}function sn(t,e,n,s){const r=t[0],a=r.length,i=b.createEmptyBand(n,a);if(s===X.atanh){for(let u=0;u<a;u++)if(e[u]){const l=r[u];Math.abs(l)>=1?e[u]=0:i[u]=Math.atanh(l)}return i}const o=s===X.asin?Math.asin:Math.acos;for(let u=0;u<a;u++)if(e[u]){const l=r[u];Math.abs(l)>1?e[u]=0:i[u]=o(l)}return i}function nn(t,e,n,s){const[r]=t,a=r.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)e&&!e[o]||(i[o]=s(r[o]));return i}function rn(t,e,n,s){const[r,a]=t,i=r.length,o=b.createEmptyBand(n,i);for(let u=0;u<i;u++)e&&!e[u]||(o[u]=s(r[u],a[u]));return o}function on(t,e,n){const[s,r]=t,a=s.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)e&&!e[o]||(i[o]=s[o]&r[o]);return i}function an(t,e,n){const[s,r]=t,a=s.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)e&&!e[o]||(i[o]=s[o]<<r[o]);return i}function un(t,e,n){const[s]=t,r=s.length,a=b.createEmptyBand(n,r);for(let i=0;i<r;i++)e&&!e[i]||(a[i]=~s[i]);return a}function ln(t,e,n){const[s,r]=t,a=s.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)e&&!e[o]||(i[o]=s[o]|r[o]);return i}function cn(t,e,n){const[s,r]=t,a=s.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)e&&!e[o]||(i[o]=s[o]>>r[o]);return i}function pn(t,e,n){const[s,r]=t,a=s.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)e&&!e[o]||(i[o]=s[o]^r[o]);return i}function hn(t,e,n){const[s,r]=t,a=s.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)e&&!e[o]||(i[o]=s[o]&&r[o]?1:0);return i}function mn(t,e,n){const[s]=t,r=s.length,a=b.createEmptyBand(n,r);for(let i=0;i<r;i++)e&&!e[i]||(a[i]=s[i]?0:1);return a}function fn(t,e,n){const[s,r]=t,a=s.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)e&&!e[o]||(i[o]=s[o]||r[o]?1:0);return i}function dn(t,e,n){const[s,r]=t,a=s.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)e&&!e[o]||(i[o]=(s[o]?1:0)^(r[o]?1:0));return i}function gn(t,e,n){const[s,r]=t,a=s.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)e&&!e[o]||(i[o]=s[o]===r[o]?1:0);return i}function se(t,e,n,s){const[r]=t,a=r.length,i=b.createEmptyBand(n,a),o=s===Math.E;for(let u=0;u<a;u++)e&&!e[u]||(i[u]=o?Math.exp(r[u]):s**r[u]);return i}function yn(t,e,n){return se(t,e,n,10)}function xn(t,e,n){return se(t,e,n,2)}function bn(t,e,n){return se(t,e,n,Math.E)}function ne(t,e,n,s){const[r]=t,a=r.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)e&&!e[o]||(r[o]<=0?e[o]=0:i[o]=s(r[o]));return i}function vn(t,e,n){return ne(t,e,n,Math.log10)}function wn(t,e,n){return ne(t,e,n,Math.log2)}function An(t,e,n){return ne(t,e,n,Math.log)}function Tn(t,e,n){const[s,r]=t,a=s.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)e&&!e[o]||(i[o]=s[o]>r[o]?1:0);return i}function Pn(t,e,n){const[s,r]=t,a=s.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)e&&!e[o]||(i[o]=s[o]>=r[o]?1:0);return i}function Nn(t,e,n){const[s,r]=t,a=s.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)e&&!e[o]||(i[o]=s[o]<r[o]?1:0);return i}function Fn(t,e,n){const[s,r]=t,a=s.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)e&&!e[o]||(i[o]=s[o]<=r[o]?1:0);return i}function In(t,e,n){const[s]=t,r=s.length,a=b.createEmptyBand(n,r);if(!e)return a;for(let i=0;i<r;i++)a[i]=e[i]?0:1;return a}function Rn(t,e,n){const[s,r]=t,a=s.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)e&&!e[o]||(i[o]=s[o]%r[o]);return i}function Cn(t,e,n){const[s]=t,r=s.length,a=b.createEmptyBand(n,r);for(let i=0;i<r;i++)e&&!e[i]||(a[i]=-s[i]);return a}function kn(t,e,n){const[s,r]=t,a=s.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)e&&!e[o]||(i[o]=s[o]===r[o]?0:1);return i}function _n(t,e,n){const[s,r]=t,a=s.length,i=b.createEmptyBand(n,a),o=new Uint8Array(a);for(let u=0;u<a;u++)e!=null&&!e[u]||s[u]!==0||(i[u]=r[u],o[u]=255);return{band:i,mask:o}}function Xe(t,e,n){const[s,r,a]=t,i=s.length,o=b.createEmptyBand(n,i);for(let u=0;u<i;u++)e&&!e[u]||(o[u]=s[u]?r[u]:a[u]);return o}function Ke(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,a=r.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)if(!e||e[o]){let u=r[o];for(let l=1;l<s;l++){const m=t[l][o];u<m&&(u=m)}i[o]=u}return i}function Je(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,a=r.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)if(!e||e[o]){let u=r[o];for(let l=1;l<s;l++){const m=t[l][o];u>m&&(u=m)}i[o]=u}return i}function Ye(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,a=r.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)if(!e||e[o]){let u=r[o],l=u;for(let m=1;m<s;m++){const h=t[m][o];l<h?l=h:u>h&&(u=h)}i[o]=l-u}return i}function Ze(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,a=r.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)if(!e||e[o]){let u=0;for(let l=0;l<s;l++)u+=t[l][o];i[o]=u/s}return i}function Qe(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,a=r.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)if(!e||e[o])for(let u=0;u<s;u++){const l=t[u];i[o]+=l[o]}return i}function ts(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,a=r.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)if(!e||e[o]){const u=new Float32Array(s);let l=0;for(let h=0;h<s;h++){const f=t[h];l+=f[o],u[h]=f[o]}l/=s;let m=0;for(let h=0;h<s;h++)m+=(u[h]-l)**2;i[o]=Math.sqrt(m/s)}return i}function es(t,e,n){const s=t.length;if(s<2)return t[0];const r=Math.floor(s/2),[a]=t,i=a.length,o=b.createEmptyBand(n,i),u=new Float32Array(s),l=s%2==1;for(let m=0;m<i;m++)if(!e||e[m]){for(let h=0;h<s;h++)u[h]=t[h][m];u.sort(),o[m]=l?u[r]:(u[r]+u[r-1])/2}return o}function ss(t,e,n){const[s,r]=t;if(r==null)return s;const a=s.length,i=b.createEmptyBand(n,a);for(let o=0;o<a;o++)e[o]&&(s[o]===r[o]?i[o]=s[o]:e[o]=0);return i}function ns(t,e,n){const s=t.length;if(s<=2)return ss(t,e,n);const r=t[0].length,a=b.createEmptyBand(n,r),i=new Map;for(let o=0;o<r;o++)if(!e||e[o]){let u;i.clear();for(let h=0;h<s;h++)u=t[h][o],i.set(u,i.has(u)?i.get(u)+1:1);let l=0,m=0;for(const h of i.keys())l=i.get(h),l>m&&(m=l,u=h);a[o]=u}return a}function rs(t,e,n){const s=t.length;if(s<=2)return ss(t,e,n);const r=t[0].length,a=b.createEmptyBand(n,r),i=new Map;for(let o=0;o<r;o++)if(!e||e[o]){let u;i.clear();for(let h=0;h<s;h++)u=t[h][o],i.set(u,i.has(u)?i.get(u)+1:1);let l=0,m=t.length;for(const h of i.keys())l=i.get(h),l<m&&(m=l,u=h);a[o]=u}return a}function os(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,a=r.length,i=b.createEmptyBand(n,a),o=new Set;for(let u=0;u<a;u++)if(!e||e[u]){let l;o.clear();for(let m=0;m<s;m++)l=t[m][u],o.add(l);i[u]=o.size}return i}const z=new Map,$t=new Map,R=new Map,j=new Map;function Bn(){z.size||(z.set(4,Math.sqrt),z.set(6,Math.acos),z.set(7,Math.asin),z.set(8,Math.atan),z.set(9,Math.atanh),z.set(10,Math.abs),z.set(21,Math.cos),z.set(22,Math.cosh),z.set(48,Math.floor),z.set(49,Math.ceil),z.set(51,Math.sin),z.set(52,Math.sinh),z.set(56,Math.tan),z.set(57,Math.tanh),z.set(59,Math.acosh),z.set(60,Math.asinh),z.set(65,Math.floor),$t.set(5,Math.pow),$t.set(61,Math.atan2),R.set(1,Xs),R.set(2,Ys),R.set(3,Zs),R.set(11,on),R.set(12,an),R.set(13,un),R.set(14,ln),R.set(15,cn),R.set(16,pn),R.set(17,hn),R.set(18,mn),R.set(19,fn),R.set(20,dn),R.set(23,$e),R.set(24,gn),R.set(25,bn),R.set(26,yn),R.set(27,xn),R.set(28,Tn),R.set(29,Pn),R.set(30,Qs),R.set(31,In),R.set(32,Ks),R.set(33,Nn),R.set(34,Fn),R.set(35,An),R.set(36,vn),R.set(37,wn),R.set(44,Rn),R.set(45,Cn),R.set(46,kn),R.set(53,Js),R.set(64,tn),R.set(65,en),R.set(76,Xe),R.set(78,Xe),j.set(38,ns),j.set(39,Ke),j.set(40,Ze),j.set(41,es),j.set(42,Je),j.set(43,rs),j.set(47,Ye),j.set(54,ts),j.set(55,Qe),j.set(58,os),j.set(66,ns),j.set(67,Ke),j.set(68,Ze),j.set(69,es),j.set(70,Je),j.set(71,rs),j.set(72,Ye),j.set(73,ts),j.set(74,Qe),j.set(75,os))}function Sn(t,e,n,s){let[r,a]=tt(n);const i=H(n);i&&(r-=1e-5,a+=1e-5);for(let o=0;o<e.length;o++)if(e[o]){const u=t[o];isNaN(u)||u<r||u>a?e[o]=0:s[o]=i?Math.round(u):u}}function as(t,e,n={}){Bn();let s=$s(t,e>=66&&e<=75);const{outputPixelType:r="f32"}=n,a=!j.has(e)||n.processAsMultiband,i=a?t[0].pixels.length:1,o=[];for(let l=0;l<i;l++){const m=j.has(e)&&!a?t.flatMap(d=>d.pixels):t.map(d=>d.pixels[l]);let h,f=!0;if(e===Ue.setNull){const d=_n(m,s,r);h=d.band,s=d.mask,f=!1}else R.has(e)?h=R.get(e)(m,s,"f64"):z.has(e)?h=e===X.asin||e===X.acos||e===X.atanh?sn(m,s,"f64",e):nn(m,s,"f64",z.get(e)):$t.has(e)?h=rn(m,s,"f64",$t.get(e)):j.has(e)?h=j.get(e)(m,s,"f64"):(h=m[0],f=!1);if(f&&e!==L.isNull&&!We.has(e)){const d=b.createEmptyBand(r,h.length);s||(s=new Uint8Array(h.length).fill(255)),Sn(h,s,r,d),h=d}o.push(h)}const u=t[0];return new b({width:u.width,height:u.height,pixelType:r,mask:e===L.isNull?null:s,pixels:o})}function jn(t,e,n){return as(t,e=[null,1,2,3,23,5,44][e]??1,{outputPixelType:n})}let Ct=class extends E{constructor(){super(...arguments),this.functionName="Arithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{operation:t}=this.functionArguments;if(t<1||t>6)return{success:!1,supportsGPU:!1,error:"unsupported operation"};const e=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:e.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return e?.[0]==null||e?.[1]==null?null:jn(e,this.functionArguments.operation,this.outputPixelType)}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=["","plus","minus","times","divide","power","mod"][t],n=this.outputPixelType??"f32";let[s,r]=tt(n);const a=H(n);return a&&(s-=1e-4,r+=1e-4),{imageCount:2,operationName:e,domainRange:[s,r],isOutputRounded:a}}};c([p({json:{write:!0,name:"rasterFunction"}})],Ct.prototype,"functionName",void 0),c([p({type:Ls,json:{write:!0,name:"rasterFunctionArguments"}})],Ct.prototype,"functionArguments",void 0),c([p()],Ct.prototype,"rasterArgumentNames",void 0),Ct=c([P("esri.layers.support.rasterFunctions.ArithmeticFunction")],Ct);const Mn=Ct;var re;let oe=re=class extends G{clone(){return new re({raster:this.raster})}};oe=re=c([P("esri.layers.support.rasterFunctions.AspectFunctionArguments")],oe);const On=oe;let it=class extends E{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.isGCS=t.spatialReference?.isGeographic??!1,this.outputPixelType=this._getOutputPixelType("f32");const e=t.clone();return e.pixelType=this.outputPixelType,e.statistics=[{min:-1,max:360,avg:180,stddev:30}],e.histograms=null,e.colormap=null,e.attributeTable=null,e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{extent:n,primaryPixelSizes:s}=t,r=s?.[0],a=r??(n?{x:n.width/e.width,y:n.height/e.height}:{x:1,y:1});return Ts(e,{resolution:a})}};c([p({json:{write:!0,name:"rasterFunction"}})],it.prototype,"functionName",void 0),c([p({type:On,json:{write:!0,name:"rasterFunctionArguments"}})],it.prototype,"functionArguments",void 0),c([p()],it.prototype,"rasterArgumentNames",void 0),c([p({json:{write:!0}})],it.prototype,"isGCS",void 0),it=c([P("esri.layers.support.rasterFunctions.AspectFunction")],it);const Dn=it,Gn=new Set(["+","-","*","/","(",")"]);function En(t,e){(t=t.replaceAll(" ","")).startsWith("-")&&(t="0"+t),t.startsWith("+")&&(t=t.slice(1,t.length));const n=t.split(""),s=[],r=[];let a="";for(let i=0;i<n.length;i++){const o=n[i];Gn.has(o)?(a.length&&r.push(is(a,e)),s.push(o),a=""):a=a.concat(o)}return a.length&&r.push(is(a,e)),{ops:s,nums:r}}function is(t,e){return t.toLowerCase().startsWith("b")?e[parseInt(t.slice(1),10)-1]:parseFloat(t)}function zn(t,e,n,s){if(typeof n=="number"&&typeof s=="number")return n+s;let r,a,i;typeof n=="number"?(i=s,r=i.length,a=new Float32Array(r),a.fill(n)):(r=n.length,a=n,s.constructor===Number?(i=new Float32Array(r),i.fill(s)):i=s);const o=new Float32Array(r);switch(e){case"+":for(let u=0;u<r;u++)(t==null||t[u])&&(o[u]=a[u]+i[u]);break;case"-":for(let u=0;u<r;u++)(t==null||t[u])&&(o[u]=a[u]-i[u]);break;case"*":for(let u=0;u<r;u++)(t==null||t[u])&&(o[u]=a[u]*i[u]);break;case"/":for(let u=0;u<r;u++)(t==null||t[u])&&i[u]&&(o[u]=a[u]/i[u]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return o}function Vn(t,e){t.splice(e,1);let n=0,s=0;do{n=0,s=0;for(let r=0;r<t.length;r++)if(t[r]==="(")n=r;else if(t[r]===")"){s=r;break}s===n+1&&t.splice(n,2)}while(s===n+1);return t}function Un(t){if(t.length===1)return{opIndex:0,numIndex:0};let e=0,n=0;for(let i=0;i<t.length;i++)if(t[i]==="(")e=i;else if(t[i]===")"){n=i;break}const s=n===0?t:t.slice(e+1,n);let r=-1;for(let i=0;i<s.length;i++)if(s[i]==="*"||s[i]==="/"){r=i;break}if(r>-1)n>0&&(r+=e+1);else{for(let i=0;i<s.length;i++)if(s[i]==="+"||s[i]==="-"){r=i;break}n>0&&(r+=e+1)}let a=0;for(let i=0;i<r;i++)t[i]==="("&&a++;return{opIndex:r,numIndex:r-a}}function Ln(t,e,n){let s,{ops:r,nums:a}=En(n,e);if(r.length===0){const i=a.length===1?a[0]:e[0];if(i instanceof Float32Array)return[i];const o=new Float32Array(e[0].length);return typeof i=="number"?o.fill(i):o.set(i),[o]}for(;r.length>0;){const{numIndex:i,opIndex:o}=Un(r);if(s=zn(t,r[o],a[i],a[i+1]),r.length===1)break;r=Vn(r,o),a.splice(i,2,s)}return[s]}const Wn=new et({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function qn(t,e){if(!Ps(t))return t;const{equation:n,method:s}=e,r=e.bandIndexes.map(m=>m-1),{pixels:a,mask:i}=t;let o;switch(s){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":o=us(i,a[r[0]],a[r[1]]);break;case"ndwi":o=us(i,a[r[1]],a[r[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":o=$n(i,a[r[0]],a[r[1]]);break;case"ci-g":case"ci-re":o=Xn(i,a[r[0]],a[r[1]]);break;case"savi":o=Kn(i,a[r[0]],a[r[1]],r[2]+1);break;case"tsavi":o=Jn(i,a[r[0]],a[r[1]],r[2]+1,r[3]+1,r[4]+1);break;case"msavi":o=Yn(i,a[r[0]],a[r[1]]);break;case"gemi":o=Zn(i,a[r[0]],a[r[1]]);break;case"pvi":o=Qn(i,a[r[0]],a[r[1]],r[2]+1,r[3]+1);break;case"gvitm":o=tr(i,[a[r[0]],a[r[1]],a[r[2]],a[r[3]],a[r[4]],a[r[5]]]);break;case"sultan":o=er(i,[a[r[0]],a[r[1]],a[r[2]],a[r[3]],a[r[4]]]);break;case"vari":o=sr(i,[a[r[0]],a[r[1]],a[r[2]]]);break;case"mtvi2":o=nr(i,[a[r[0]],a[r[1]],a[r[2]]]);break;case"rtvi-core":o=rr(i,[a[r[0]],a[r[1]],a[r[2]]]);break;case"evi":o=or(i,[a[r[0]],a[r[1]],a[r[2]]]);break;case"wndwi":o=ar(i,[a[r[0]],a[r[1]],a[r[2]]],r[3]?r[3]+1:.5);break;case"bai":o=ir(i,a[r[0]],a[r[1]]);break;case"custom":o=Ln(i,a,n);break;default:return t}const u=i!=null?new Uint8Array(i.length):null;i!=null&&u!=null&&u.set(i);const l=new b({width:t.width,height:t.height,pixelType:"f32",pixels:o,mask:u});return l.updateStatistics(),l}function Hn(t,e,n,s){const{mask:r,pixels:a,width:i,height:o}=t,u=a[n],l=a[e],m=l.length,h=s?new Uint8Array(m):new Float32Array(m),f=s?100:1,d=s?100.5:0;for(let x=0;x<m;x++)if(r==null||r[x]){const y=u[x],A=l[x],v=y+A;v&&(h[x]=(y-A)/v*f+d)}const g=new b({width:i,height:o,mask:r,pixelType:s?"u8":"f32",pixels:[h]});return g.updateStatistics(),g}function V(t){const e=new Float32Array(9);return e[3*t[0]]=1,e[3*t[1]+1]=1,e[3*t[2]+2]=1,e}function us(t,e,n){const s=n.length,r=new Float32Array(s);for(let a=0;a<s;a++)if(t==null||t[a]){const i=e[a],o=n[a],u=i+o;u&&(r[a]=(i-o)/u)}return[r]}function $n(t,e,n){const s=n.length,r=new Float32Array(s);for(let a=0;a<s;a++)if(t==null||t[a]){const i=e[a],o=n[a];o&&(r[a]=i/o)}return[r]}function Xn(t,e,n){const s=e.length,r=new Float32Array(s);for(let a=0;a<s;a++)if(t==null||t[a]){const i=e[a],o=n[a];o&&(r[a]=i/o-1)}return[r]}function Kn(t,e,n,s){const r=n.length,a=new Float32Array(r);for(let i=0;i<r;i++)if(t==null||t[i]){const o=n[i],u=e[i],l=u+o+s;l&&(a[i]=(u-o)/l*(1+s))}return[a]}function Jn(t,e,n,s,r,a){const i=n.length,o=new Float32Array(i),u=-r*s+a*(1+s*s);for(let l=0;l<i;l++)if(t==null||t[l]){const m=n[l],h=e[l],f=r*h+m+u;f&&(o[l]=s*(h-s*m-r)/f)}return[o]}function Yn(t,e,n){const s=n.length,r=new Float32Array(s);for(let a=0;a<s;a++)if(t==null||t[a]){const i=n[a],o=e[a],u=2*o+1;r[a]=.5*(u-Math.sqrt(u*u-8*(o-i)))}return[r]}function Zn(t,e,n){const s=n.length,r=new Float32Array(s);for(let a=0;a<s;a++)if(t==null||t[a]){const i=n[a],o=e[a];if(i!==1&&o+i+.5!==0){const u=(2*(o*o-i*i)+1.5*o+.5*i)/(o+i+.5);r[a]=u*(1-.25*u)-(i-.125)/(1-i)}}return[r]}function Qn(t,e,n,s,r){const a=n.length,i=new Float32Array(a),o=1/Math.sqrt(1+s*s);for(let u=0;u<a;u++)if(t==null||t[u]){const l=n[u],m=e[u];i[u]=(m-s*l-r)*o}return[i]}function tr(t,e){const[n,s,r,a,i,o]=e,u=n.length,l=new Float32Array(u);for(let m=0;m<u;m++)(t==null||t[m])&&(l[m]=-.2848*n[m]-.2435*s[m]-.5436*r[m]+.7243*a[m]+.084*i[m]-.18*o[m]);return[l]}function er(t,e){const[n,s,r,a,i]=e,o=n.length,u=new Float32Array(o),l=new Float32Array(o),m=new Float32Array(o);for(let h=0;h<o;h++)(t==null||t[h])&&(u[h]=i[h]?a[h]/i[h]*100:0,l[h]=n[h]?a[h]/n[h]*100:0,m[h]=r[h]?s[h]/r[h]*(a[h]/r[h])*100:0);return[u,l,m]}function sr(t,e){const[n,s,r]=e,a=n.length,i=new Float32Array(a);for(let o=0;o<a;o++)if(t==null||t[o])for(o=0;o<a;o++){const u=n[o],l=s[o],m=l+u-r[o];m&&(i[o]=(l-u)/m)}return[i]}function nr(t,e){const[n,s,r]=e,a=n.length,i=new Float32Array(a);for(let o=0;o<a;o++)if(t==null||t[o])for(o=0;o<a;o++){const u=n[o],l=s[o],m=r[o],h=Math.sqrt((2*u+1)**2-(6*u-5*Math.sqrt(l))-.5);if(h){const f=1.5*(1.2*(u-m)-2.5*(l-m));i[o]=f/h}}return[i]}function rr(t,e){const[n,s,r]=e,a=n.length,i=new Float32Array(a);for(let o=0;o<a;o++)if(t==null||t[o])for(o=0;o<a;o++){const u=n[o],l=s[o],m=r[o];i[o]=100*(u-l)-10*(u-m)}return[i]}function or(t,e){const[n,s,r]=e,a=n.length,i=new Float32Array(a);for(let o=0;o<a;o++)if(t==null||t[o])for(o=0;o<a;o++){const u=n[o],l=s[o],m=u+6*l-7.5*r[o]+1;m&&(i[o]=2.5*(u-l)/m)}return[i]}function ar(t,e,n=.5){const[s,r,a]=e,i=r.length,o=new Float32Array(i);for(let u=0;u<i;u++)if(t==null||t[u])for(u=0;u<i;u++){const l=s[u],m=r[u],h=a[u],f=l+n*m+(1-n)*h;f&&(o[u]=(l-n*m-(1-n)*h)/f)}return[o]}function ir(t,e,n){const s=n.length,r=new Float32Array(s);for(let a=0;a<s;a++)if(t==null||t[a])for(a=0;a<s;a++){const i=(.1-e[a])**2+(.06-n[a])**2;i&&(r[a]=1/i)}return[r]}var ae;let zt=ae=class extends G{constructor(){super(...arguments),this.method="custom"}clone(){return new ae({method:this.method,bandIndexes:this.bandIndexes,raster:W(this.raster)})}};c([p({json:{type:String,write:!0}})],zt.prototype,"bandIndexes",void 0),c([K(Wn)],zt.prototype,"method",void 0),zt=ae=c([P("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],zt);const ur=zt,lr=new Set(["vari","mtvi2","rtvi-core","evi"]);let kt=class extends E{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0];if(t.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const e=t.clone();return e.pixelType=this.outputPixelType,e.bandCount=this.functionArguments.method==="sultan"?3:1,this._removeStatsHistColormapVAT(e),e.keyProperties={...e.keyProperties,BandProperties:void 0},this.rasterInfo=e,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return e;const{method:n,bandIndexes:s}=this.functionArguments,r=s.split(" ").map(a=>parseFloat(a));return qn(e,{method:n,bandIndexes:r,equation:s})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map(i=>parseFloat(i)-1);t.length===2&&t.push(0);const e=this.isInputBandIdsSwizzled?[0,1,2]:t;let n,s;const r=new Float32Array(3),{method:a}=this.functionArguments;switch(a){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":n=V([e[0],e[1],0]),s="ndxi";break;case"ndwi":n=V([e[1],e[0],0]),s="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":n=V([e[0],e[1],0]),s="sr";break;case"ci-g":case"ci-re":n=V([e[0],e[1],0]),s="ci";break;case"savi":n=V([e[0],e[1],0]),s="savi",r[0]=t[2]+1;break;case"tsavi":n=V([e[0],e[1],0]),s="tsavi",r[0]=t[2]+1,r[1]=t[3]+1,r[2]=t[4]+1;break;case"msavi":n=V([e[0],e[1],0]),s="msavi";break;case"gemi":n=V([e[0],e[1],0]),s="gemi";break;case"pvi":n=V([e[0],e[1],0]),s="tsavi",r[0]=t[2]+1,r[1]=t[3]+1;break;case"vari":n=V([e[0],e[1],e[2]]),s="vari";break;case"mtvi2":n=V([e[0],e[1],e[2]]),s="mtvi";break;case"rtvi-core":n=V([e[0],e[1],e[2]]),s="rtvicore";break;case"evi":n=V([e[0],e[1],e[2]]),s="evi";break;case"wndwi":n=V([e[0],e[1],0]),s="wndwi",r[0]=t[3]?t[3]+1:.5;break;case"bai":n=V([e[1],e[0],0]),s="bai";break;default:n=V([0,1,2]),s="custom"}return{bandIndexMat3:n,indexType:s,adjustments:r}}_getInputBandIds(t){if(this.functionArguments.method==="custom")return t;const e=this.functionArguments.bandIndexes.split(" ").map(i=>parseFloat(i)-1),n=t.length,s=e.map(i=>i>=n?n-1:i),r=lr.has(this.functionArguments.method)?3:2,a=s.slice(0,r).map(i=>t[i]);return a.length===2&&a.push(0),a}};c([p({json:{write:!0,name:"rasterFunction"}})],kt.prototype,"functionName",void 0),c([p({type:ur,json:{write:!0,name:"rasterFunctionArguments"}})],kt.prototype,"functionArguments",void 0),c([p()],kt.prototype,"rasterArgumentNames",void 0),kt=c([P("esri.layers.support.rasterFunctions.BandArithmeticFunction")],kt);const cr=kt;var ie;const ls=new et({1:"outside",2:"inside"},{useNumericKeys:!0});let Vt=ie=class extends G{constructor(){super(...arguments),this.clippingType="outside"}clone(){return new ie({clippingGeometry:this.clippingGeometry.clone(),clippingType:this.clippingType})}};c([p({types:Ns,json:{read:Fs,write:!0}})],Vt.prototype,"clippingGeometry",void 0),c([p({json:{read:ls.read,write:ls.write}})],Vt.prototype,"clippingType",void 0),Vt=ie=c([P("esri.layers.support.rasterFunctions.ClipFunctionArguments")],Vt);const pr=Vt;let ut=class extends E{constructor(){super(...arguments),this.functionName="Clip",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(t.pixelType),t.pixelType=this.outputPixelType,this.rasterInfo=t,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}_getWebGLParameters(){const{clippingGeometry:t,clippingType:e}=this.functionArguments;return{clippingGeometry:t.toJSON(),clippingType:e}}};c([p({json:{write:!0,name:"rasterFunction"}})],ut.prototype,"functionName",void 0),c([p({type:pr,json:{write:!0,name:"rasterFunctionArguments"}})],ut.prototype,"functionArguments",void 0),c([p()],ut.prototype,"rasterArgumentNames",void 0),c([p()],ut.prototype,"isNoopProcess",void 0),ut=c([P("esri.layers.support.rasterFunctions.ClipFunction")],ut);const hr=ut;var ue;let J=ue=class extends G{castColormapName(t){if(!t)return null;const e=t.toLowerCase();return Rs.includes(e)?e:null}readColorRamp(t){return Me(t)}readColorRampName(t,e){if(!t)return null;const n=Et.jsonValues.find(s=>s.toLowerCase()===t.toLowerCase());return n?Et.fromJSON(n):null}clone(){return new ue({colormap:W(this.colormap),colormapName:this.colormapName,colorRamp:this.colorRamp?.clone(),colorRampName:this.colorRampName})}};c([p({type:[[Number]],json:{write:!0}})],J.prototype,"colormap",void 0),c([p({type:String,json:{write:!0}})],J.prototype,"colormapName",void 0),c([je("colormapName")],J.prototype,"castColormapName",null),c([p({types:Is,json:{write:!0}})],J.prototype,"colorRamp",void 0),c([Pt("colorRamp")],J.prototype,"readColorRamp",null),c([p({type:Et.apiValues,json:{type:Et.jsonValues,write:Et.write}})],J.prototype,"colorRampName",void 0),c([Pt("colorRampName")],J.prototype,"readColorRampName",null),J=ue=c([P("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],J);const mr=J,fr=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],dr=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function le(t,e){const n=[],s=[];for(let a=0;a<t.length-1;a++)n.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:t[a].slice(1),toColor:t[a+1].slice(1)}),s.push(t[a+1][0]-t[a][0]);const r=t[t.length-1][0];return Oe({type:"multipart",colorRamps:n},{numColors:r,weights:e=e??s})}function gr(){return le([[0,0,191,191],[51,0,0,255],[102,255,0,255],[153,255,0,127],[204,191,63,127],[256,20,20,20]])}function yr(){const t=le([[0,255,255,255],[70,0,255,0],[80,205,173,193],[100,150,150,150],[110,120,51,100],[130,120,100,200],[140,28,3,144],[160,6,0,55],[180,10,25,30],[201,6,7,27]]);for(let e=t.length;e<256;e++)t.push([6,27,7]);return t}function xr(){return Oe({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]})}function br(){const t=[];for(let e=0;e<256;e++){const n=[];for(let s=0;s<3;s++)n.push(Math.round(255*Math.random()));t.push(n)}return t}function vr(){return le([[0,38,41,54],[69,79,82,90],[131,156,156,156],[256,253,253,241]],[.268,.238,.495])}function wr(t){let e;switch(t){case"elevation":e=gr();break;case"gray":e=xr();break;case"hillshade":e=vr();break;case"ndvi":e=fr;break;case"ndvi2":e=yr();break;case"ndvi3":e=dr;break;case"random":e=br()}return e?(e=e.map((n,s)=>[s,...n]),e):null}let Z=class extends E{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:e,colormapName:n,colorRamp:s,colorRampName:r}=this.functionArguments;if(!e?.length)if(s)this.colorRamp=s,e=De(s,{interpolateAlpha:!0});else if(r){const o=Cs(r);o&&(e=De(o),this.colorRamp=Me(o))}else n&&(e=wr(n));if(!e?.length)return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};const a=this._getOutputPixelType(t.pixelType);this.outputPixelType=a.startsWith("f")?"s32":a;const i=t.clone();return i.pixelType=this.outputPixelType,i.colormap=e,i.bandCount=1,this.rasterInfo=i,{success:!0,supportsGPU:!0}}_processPixels(t){let e=t.pixelBlocks?.[0];return!e||H(e.pixelType)||(e=e.clone(),e.clamp(this.outputPixelType)),e}};c([p({json:{write:!0,name:"rasterFunction"}})],Z.prototype,"functionName",void 0),c([p({type:mr,json:{write:!0,name:"rasterFunctionArguments"}})],Z.prototype,"functionArguments",void 0),c([p()],Z.prototype,"rasterArgumentNames",void 0),c([p()],Z.prototype,"isNoopProcess",void 0),c([p({json:{write:!0}})],Z.prototype,"indexedColormap",void 0),c([p()],Z.prototype,"colorRamp",void 0),Z=c([P("esri.layers.support.rasterFunctions.ColormapFunction")],Z);const Ar=Z;var ce;let Ut=ce=class extends G{constructor(){super(...arguments),this.rasters=[]}writeRasters(t,e){e.rasters=t.map(n=>typeof n=="number"||typeof n=="string"?n:n.toJSON())}clone(){return new ce({rasters:W(this.rasters)})}};c([p({json:{write:!0}})],Ut.prototype,"rasters",void 0),c([Nt("rasters")],Ut.prototype,"writeRasters",null),Ut=ce=c([P("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],Ut);const Tr=Ut;let _t=class extends E{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const n=e.clone();if(n.attributeTable=null,n.colormap=null,n.pixelType=this.outputPixelType,n.bandCount=t.map(({bandCount:r})=>r).reduce((r,a)=>r+a),t.every(({statistics:r})=>r!=null&&r.length)){const r=[];t.forEach(({statistics:a})=>a!=null&&r.push(...a)),n.statistics=r}if(t.every(({histograms:r})=>r!=null&&r.length)){const r=[];t.forEach(({histograms:a})=>a!=null&&r.push(...a)),n.histograms=r}n.bandCount>1&&(n.colormap=null,n.attributeTable=null);const s=t.every(r=>r.keyProperties.BandProperties?.length)?t.flatMap(r=>r.keyProperties.BandProperties):void 0;return n.keyProperties={...n.keyProperties,BandProperties:s},this.rasterInfo=n,{success:!0,supportsGPU:n.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return e?e?.[0]==null?null:ks(e):null}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};c([p({json:{write:!0,name:"rasterFunction"}})],_t.prototype,"functionName",void 0),c([p({type:Tr,json:{write:!0,name:"rasterFunctionArguments"}})],_t.prototype,"functionArguments",void 0),c([p()],_t.prototype,"rasterArgumentNames",void 0),_t=c([P("esri.layers.support.rasterFunctions.CompositeBandFunction")],_t);const Pr=_t,Nr=new et({0:"difference",1:"relative-difference",2:"categorical",3:"euclidean-distance",4:"angle-difference",5:"band-with-most-change"},{useNumericKeys:!0}),Fr=new et({0:"all",1:"changed",2:"unchanged"},{useNumericKeys:!0});function Ir(t,e,n,s){const[r,a]=t,i=H(n)&&!H(r.pixelType)&&!H(a.pixelType),o=[r.mask,a.mask].filter(g=>g),u=b.combineBandMasks(o),l=t.map(g=>g.pixels[0]),{width:m,height:h}=r,f=b.createEmptyBand(n,m*h);switch(e){case"difference":case"relative-difference":Rr({bands:l,mask:u,outBand:f,isRoundingNeeded:i,isRelative:e==="relative-difference"});break;case"categorical":Cr({bands:l,mask:u,outBand:f,...s});break;case"euclidean-distance":kr({pixels:t.map(g=>g.pixels),mask:u,outBand:f});break;case"angle-difference":_r({pixels:t.map(g=>g.pixels),mask:u,outBand:f});break;case"band-with-most-change":Br({pixels:t.map(g=>g.pixels),mask:u,outBand:f})}const d=new b({width:m,height:h,pixels:[f],pixelType:n,mask:u});return d.updateStatistics(),d}function Rr(t){const{bands:[e,n],mask:s,isRelative:r,isRoundingNeeded:a,outBand:i}=t,o=e.length;for(let u=0;u<o;u++)if(!s||s[u]){let l=e[u]-n[u];if(r){const m=Math.max(Math.abs(e[u])-Math.abs(n[u]));l=m>0?l/m:0}i[u]=a?Math.round(l):l}}function Cr(t){const{bands:[e,n],categoryIndexLookups:[s,r],classNames:[a,i],mask:o,keepMethod:u,outBand:l}=t,m=e.length,h=a.length,f=i.length,d=h*f,g=d+1,x=d+2;for(let y=0;y<m;y++)if(!o||o[y]){const A=e[y],v=n[y],w=s[A],T=r[v],F=a[w],N=i[T];l[y]=w==null||T==null?d:u==="changed"&&F===N?g:u==="unchanged"&&F!==N?x:w*f+T}}function kr(t){const{pixels:[e,n],mask:s,outBand:r}=t,a=e[0].length,i=e.length;for(let o=0;o<a;o++)if(!s||s[o]){let u=0;for(let l=0;l<i;l++){const m=e[l][o]-n[l][o];u+=m*m}r[o]=Math.sqrt(u)}}function _r(t){const{pixels:[e,n],mask:s,outBand:r}=t,a=e[0].length,i=e.length;for(let o=0;o<a;o++)if(!s||s[o]){let u=0,l=0,m=0;for(let f=0;f<i;f++){const d=e[f][o],g=n[f][o];u+=d*g,l+=d*d,m+=g*g}const h=Math.sqrt(l*m);r[o]=h?Math.acos(u/h):1.5707963267948966}}function Br(t){const{pixels:[e,n],mask:s,outBand:r}=t,a=e[0].length,i=e.length;for(let o=0;o<a;o++)if(!s||s[o]){let u=0,l=0;for(let m=0;m<i;m++){const h=Math.abs(e[m][o]-n[m][o]);h>u&&(u=h,l=m)}r[o]=l}}var pe;let lt=pe=class extends G{constructor(){super(...arguments),this.method="difference",this.keepMethod="all",this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new pe({raster:this.raster,raster2:this.raster2,method:this.method,keepMethod:this.keepMethod})}};c([K(Nr)],lt.prototype,"method",void 0),c([K(Fr)],lt.prototype,"keepMethod",void 0),c([p({json:{write:!0}})],lt.prototype,"raster2",void 0),c([p({readOnly:!0})],lt.prototype,"rasters",null),lt=pe=c([P("esri.layers.support.rasterFunctions.ComputeChangeFunctionArguments")],lt);const Sr=lt;let ct=class extends E{constructor(){super(...arguments),this.functionName="ComputeChange",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{method:t}=this.functionArguments,e=this.sourceRasterInfos[0].clone();if(this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),t==="categorical"){const n=this.sourceRasterInfos.map(a=>a.attributeTable),s=this._getFieldNames(n,"value"),r=n.map(a=>this._getClassFieldName(a));if(s[0]==null||s[1]==null||r[0]==null||r[1]==null)return{success:!1,supportsGPU:!1,error:"both inputs must have proper attribute table with value and class fields"};this._updateAttributeTable(e,s,r)}return e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:t==="difference"||t==="relative-difference"}}_processPixels(t){const{pixelBlocks:e}=t;if(e?.[0]==null||e?.[1]==null)return null;const{method:n}=this.functionArguments;return Ir(e,n,this.outputPixelType,this._categoryConfig)}_getWebGLParameters(){const t=this.outputPixelType??"f32";let[e,n]=tt(t);const s=H(t);return s&&(e-=1e-4,n+=1e-4),{method:this.functionArguments.method,domainRange:[e,n],isOutputRounded:s}}_updateAttributeTable(t,e,n){const s=this.sourceRasterInfos.map(w=>w.attributeTable),r=s.map((w,T)=>w.features.map(F=>F.attributes[e[T]])),a=s.map((w,T)=>w.features.map(F=>F.attributes[n[T]])),i=r.map(w=>{const T=[];return w.forEach((F,N)=>T[F]=N),T}),{keepMethod:o}=this.functionArguments;this._categoryConfig={categoryIndexLookups:i,classNames:a,keepMethod:o};const u=s[0].clone();u.fields=[new st({name:"OID",type:"oid"}),new st({name:"Value",type:"integer"}),new st({name:"ClassName",type:"string"}),new st({name:"Class_From",type:"string"}),new st({name:"Class_To",type:"string"})];const l=this._getFieldNames(s,"red"),m=this._getFieldNames(s,"green"),h=this._getFieldNames(s,"blue"),f=[],d=l.length===2&&m.length===2&&h.length===2;d&&(f.push(...s.map((w,T)=>w.features.map(F=>[F.attributes[l[T]],F.attributes[m[T]],F.attributes[h[T]]]))),u.fields.push(new st({name:"Red",type:"integer"}),new st({name:"Green",type:"integer"}),new st({name:"Blue",type:"integer"})));const g=u.features[0].clone();g.geometry=null;const x=[],[y,A]=r.map(w=>w.length);let v=1;for(let w=0;w<y;w++){const T=a[0][w];for(let F=0;F<A;F++){const N=a[1][F];if(o==="changed"&&T===N||o==="unchanged"&&T!==N)continue;const I=g.clone();I.attributes={OID:v++,Value:w*A+F,ClassName:T===N?T:`${T} -> ${N}`,Class_From:T,Class_To:N},d&&(I.attributes.Red=f[0][w][0]+f[1][F][0]>>1,I.attributes.Green=f[0][w][1]+f[1][F][1]>>1,I.attributes.Blue=f[0][w][2]+f[1][F][2]>>1),x.push(I)}}if(o==="changed"){const w=g.clone();w.attributes={OID:v++,Value:y*A+1,ClassName:"No Change",Class_From:"Same",Class_To:"Same"},x.push(w)}else if(o==="unchanged"){const w=g.clone();w.attributes={OID:v++,Value:y*A+2,ClassName:"Changed",Class_From:"Any",Class_To:"Any"},x.push(w)}u.features=x,t.attributeTable=u}_getFieldNames(t,e){return t.map(({fields:n})=>n.find(s=>s.name.toLowerCase()===e)?.name).filter(n=>n)}_getClassFieldName(t){return(t.fields.find(e=>e.type==="string"&&e.name.toLowerCase().startsWith("class"))??t.fields.find(e=>e.type==="string"&&e.name.toLowerCase().includes("class")||e.name.toLowerCase().includes("type")||e.name.toLowerCase().includes("name"))??t.fields.find(e=>e.type==="string"))?.name}};c([p({json:{write:!0,name:"rasterFunction"}})],ct.prototype,"functionName",void 0),c([p({type:Sr,json:{write:!0,name:"rasterFunctionArguments"}})],ct.prototype,"functionArguments",void 0),c([p()],ct.prototype,"rasterArgumentNames",void 0),c([p({json:{write:!0}})],ct.prototype,"_categoryConfig",void 0),ct=c([P("esri.layers.support.rasterFunctions.ComputeChangeFunction")],ct);const jr=ct;var he;let Lt=he=class extends G{constructor(){super(...arguments),this.contrastOffset=0,this.brightnessOffset=0}clone(){return new he({contrastOffset:this.contrastOffset,brightnessOffset:this.brightnessOffset,raster:this.raster})}};c([p({json:{write:!0}})],Lt.prototype,"contrastOffset",void 0),c([p({json:{write:!0}})],Lt.prototype,"brightnessOffset",void 0),Lt=he=c([P("esri.layers.support.rasterFunctions.ContrastBrightnessFunctionArguments")],Lt);const Mr=Lt;let pt=class extends E{constructor(){super(...arguments),this.functionName="ContrastBrightness",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];if(e.pixelType!=="u8")return{success:!1,supportsGPU:!1,error:"Only unsigned 8 bit raster is supported by ContrastBrightness function."};this.outputPixelType=this._getOutputPixelType("u8");const n=e.clone();this._removeStatsHistColormapVAT(n),this.rasterInfo=n;const{contrastOffset:s,brightnessOffset:r}=this.functionArguments;return this.lookup=_s(s,r),{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];return e==null?null:Yt(e,{lut:e.pixels.map(()=>this.lookup),offset:0,outputPixelType:"u8"})}_getWebGLParameters(){const{contrastOffset:t,brightnessOffset:e}=this.functionArguments;return{contrastOffset:t,brightnessOffset:e}}};c([p({json:{write:!0,name:"rasterFunction"}})],pt.prototype,"functionName",void 0),c([p({type:Mr,json:{write:!0,name:"rasterFunctionArguments"}})],pt.prototype,"functionArguments",void 0),c([p()],pt.prototype,"rasterArgumentNames",void 0),c([p({json:{write:!0}})],pt.prototype,"lookup",void 0),pt=c([P("esri.layers.support.rasterFunctions.ContrastBrightnessFunction")],pt);const Or=pt;function me(t,e,n,s,r){const a=Math.floor(s/2);for(let o=0;o<a;o++)for(let u=0;u<e;u++)t[o*e+u]=t[(r-1-o)*e+u],t[(n-1-o)*e+u]=t[(n-r+o)*e+u];const i=Math.floor(r/2);for(let o=0;o<n;o++){const u=o*e;for(let l=0;l<i;l++)t[u+l]=t[u+r-1-l],t[u+e-l-1]=t[u+e+l-r]}}const M=new Map;function Dr(t){const e=Math.sqrt(t.length),n=t.slice(0,e),s=[1];for(let r=1;r<e;r++){let a=null;for(let i=0;i<e;i++){const o=t[i+r*e],u=t[i];if(a==null)if(u===0){if(o)return{separable:!1,row:null,col:null}}else a=o/u;else if(o/u!==a)return{separable:!1,row:null,col:null}}if(a==null)return{separable:!1,row:null,col:null};s.push(a)}return{separable:!0,row:n,col:s}}function cs(t,e,n,s,r,a,i){const o=new Float32Array(e*n),u=a.length,l=i?0:s,m=i?s:0,h=i?1:e;for(let f=l;f<n-l;f++){const d=f*e;for(let g=m;g<e-m;g++){if(r&&!r[d+g])continue;let x=0;for(let y=0;y<u;y++)x+=t[d+g+(y-s)*h]*a[y];o[d+g]=x}}return o}function Gr(t,e,n,s,r,a,i){const o=new Float32Array(e*n),u=Math.floor(s/2),l=Math.floor(r/2);for(let m=u;m<n-u;m++){const h=m*e;for(let f=l;f<e-l;f++){if(a&&!a[h+f])continue;let d=0;for(let g=0;g<s;g++)for(let x=0;x<r;x++)d+=t[h+f+(g-u)*e+x-l]*i[g*r+x];o[h+f]=d}}return o}function Er(t,e,n=!0){const{pixels:s,width:r,height:a,pixelType:i,mask:o}=t,u=s.length,l=[],{kernel:m,rows:h,cols:f}=e;for(let d=0;d<u;d++){const g=Gr(s[d],r,a,h,f,o,m);n&&me(g,r,a,h,f),l.push(g)}return new b({width:r,height:a,pixelType:i,pixels:l,mask:o})}function zr(t,e,n,s=!0){const{pixels:r,width:a,height:i,pixelType:o,mask:u}=t,l=r.length,m=[],h=e.length,f=n.length,d=Math.floor(h/2),g=Math.floor(f/2);for(let x=0;x<l;x++){let y=cs(r[x],a,i,d,u,e,!0);y=cs(y,a,i,g,u,n,!1),s&&me(y,a,i,h,f),m.push(y)}return new b({width:a,height:i,pixelType:o,pixels:m,mask:u})}function Vr(t,e){const n=Dr(e.kernel),s=e.mirrorEdges!==!1,r=n.separable?zr(t,n.row,n.col,s):Er(t,e,s),{outputPixelType:a}=e;return a&&r.clamp(a),r}M.set(C.none,[0,0,0,0,1,0,0,0,0]),M.set(C.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),M.set(C.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),M.set(C.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),M.set(C.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),M.set(C.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),M.set(C.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),M.set(C.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),M.set(C.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),M.set(C.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),M.set(C.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),M.set(C.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),M.set(C.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),M.set(C.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),M.set(C.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),M.set(C.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),M.set(C.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),M.set(C.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),M.set(C.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),M.set(C.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),M.set(C.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),M.set(C.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),M.set(C.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);var fe;let ht=fe=class extends G{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(t){this._set("convolutionType",t);const e=M.get(t);if(!e||t===C.userDefined||t===C.none)return;const n=Math.sqrt(e.length);this._set("kernel",e),this._set("cols",n),this._set("rows",n)}clone(){return new fe({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:W(this.raster)})}};c([p({json:{type:Number,write:!0}})],ht.prototype,"rows",void 0),c([p({json:{type:Number,write:!0}})],ht.prototype,"cols",void 0),c([p({json:{name:"type",type:Number,write:!0}})],ht.prototype,"convolutionType",null),c([p({json:{type:[Number],write:!0}})],ht.prototype,"kernel",void 0),ht=fe=c([P("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],ht);const Ur=ht,ps=25;let mt=class extends E{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}get _normalizedKernel(){const{kernel:t,convolutionType:e}=this.functionArguments,n=t.reduce((s,r)=>s+r);return e===-1||n===0||n===1?t:t.map(s=>s/n)}_bindSourceRasters(){const{convolutionType:t,rows:e,cols:n,kernel:s}=this.functionArguments;if(!Object.values(C).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==C.none&&e*n!==s.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const r=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(r.pixelType);const a=r.clone();a.pixelType=this.outputPixelType;const i=[C.none,C.sharpen,C.sharpen2,C.sharpening3x3,C.sharpening5x5];return(t===-1||this.outputPixelType!=="u8"&&!i.includes(t))&&(a.statistics=null,a.histograms=null),a.colormap=null,a.attributeTable=null,this.rasterInfo=a,{success:!0,supportsGPU:s.length<=ps}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null||this.functionArguments.convolutionType===C.none)return e;const{rows:n,cols:s}=this.functionArguments,{_normalizedKernel:r}=this;return Vr(e,{kernel:r,rows:n,cols:s,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=new Float32Array(ps);return t.set(this._normalizedKernel),{kernelRows:this.functionArguments.rows,kernelCols:this.functionArguments.cols,kernel:t,clampRange:tt(this.outputPixelType)}}};c([p({json:{write:!0,name:"rasterFunction"}})],mt.prototype,"functionName",void 0),c([p({type:Ur,json:{write:!0,name:"rasterFunctionArguments"}})],mt.prototype,"functionArguments",void 0),c([p()],mt.prototype,"rasterArgumentNames",void 0),c([p()],mt.prototype,"_normalizedKernel",null),mt=c([P("esri.layers.support.rasterFunctions.ConvolutionFunction")],mt);const Lr=mt;var de;const hs=new et({0:"standard",1:"platform",2:"profile"},{useNumericKeys:!0});let Bt=de=class extends G{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(t,e){return hs.fromJSON(e.type??e.curvatureType??0)}clone(){return new de({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};c([p({json:{write:{target:"type"}}}),K(hs)],Bt.prototype,"curvatureType",void 0),c([Pt("curvatureType",["type","curvatureType"])],Bt.prototype,"readCurvatureType",null),c([p({type:Number,json:{write:!0}})],Bt.prototype,"zFactor",void 0),Bt=de=c([P("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],Bt);const Wr=Bt;let ft=class extends E{constructor(){super(...arguments),this.functionName="Curvature",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.bandCount=1,this._removeStatsHistColormapVAT(t),this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{zFactor:n,curvatureType:s}=this.functionArguments,{extent:r,primaryPixelSizes:a}=t,i=a?.[0],o=i??(r?{x:r.width/e.width,y:r.height/e.height}:{x:1,y:1}),u=this.isGCS&&n>=1?n*Zt:n;return Bs(e,{zFactor:u,curvatureType:s,resolution:o})}_getWebGLParameters(){const{zFactor:t,curvatureType:e}=this.functionArguments;return{curvatureType:e,zFactor:this.isGCS&&t>=1?t*Zt:t}}};c([p({json:{write:!0,name:"rasterFunction"}})],ft.prototype,"functionName",void 0),c([p({type:Wr,json:{write:!0,name:"rasterFunctionArguments"}})],ft.prototype,"functionArguments",void 0),c([p()],ft.prototype,"rasterArgumentNames",void 0),c([p({json:{write:!0}})],ft.prototype,"isGCS",void 0),ft=c([P("esri.layers.support.rasterFunctions.CurvatureFunction")],ft);const qr=ft;var ge;let Q=ge=class extends G{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=Ge.bestMatch}clone(){return new ge({bandIds:this.bandIds?.slice(),bandNames:this.bandNames?.slice(),bandWavelengths:this.bandWavelengths?.slice(),missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};c([p({json:{write:!0}})],Q.prototype,"bandIds",void 0),c([p({json:{write:!0}})],Q.prototype,"bandNames",void 0),c([p({json:{write:!0}})],Q.prototype,"bandWavelengths",void 0),c([K({0:"name",1:"wavelength",2:"id"})],Q.prototype,"method",void 0),c([p({json:{write:!0}})],Q.prototype,"missingBandAction",void 0),c([p({json:{write:!0}})],Q.prototype,"wavelengthMatchTolerance",void 0),Q=ge=c([P("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],Q);const Hr=Q;let St=class extends E{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{functionArguments:t,sourceRasterInfos:e}=this,n=e[0],{method:s,bandNames:r,bandWavelengths:a,bandIds:i,missingBandAction:o}=t,u=r?.length&&(s==="name"||s!=="id"&&!i?.length),l=a?.length&&(s==="wavelength"||s!=="id"&&!i?.length),m=o===Ge.fail,h=u?Xr(n,r):l?Jr(n,a,this.functionArguments,m):Kr(n,i,m);if(h==null)return{success:!1,supportsGPU:!1,error:`extract-band-function: Invalid ${u?"band names":l?"band wavelengths":"band ids"} for the imagery data source`};this.functionArguments.bandIds=h,this.functionArguments.method="id",this.outputPixelType=this._getOutputPixelType("f32");const f=n.clone();f.pixelType=this.outputPixelType,f.bandCount=h.length;const{statistics:d,histograms:g}=f;d!=null&&d.length&&(f.statistics=h.map(y=>d[y]||d[d.length-1])),g!=null&&g.length&&(f.histograms=h.map(y=>g[y]||g[g.length-1]));let x=f.keyProperties?.BandProperties;return x?.length&&(x=h.map(y=>y>=x.length?x[x.length-1]:x[y]),f.keyProperties={...f.keyProperties,BandProperties:x}),this.rasterInfo=f,{success:!0,supportsGPU:f.bandCount<=3}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const n=e.pixels.length,s=this.functionArguments.bandIds.map(r=>r>=n?n-1:r);return e.extractBands(s)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],t.length===0?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let e=0;e<3;e++)t[e]=Math.min(t[e],2)}return{bandIndexMat3:V(t)}}_getInputBandIds(t){const e=t.length;return this.functionArguments.bandIds.map(n=>n>=e?e-1:n).map(n=>t[n])}};c([p({json:{write:!0,name:"rasterFunction"}})],St.prototype,"functionName",void 0),c([p({type:Hr,json:{write:!0,name:"rasterFunctionArguments"}})],St.prototype,"functionArguments",void 0),c([p()],St.prototype,"rasterArgumentNames",void 0),St=c([P("esri.layers.support.rasterFunctions.ExtractBandFunction")],St);const $r=St;function Xr(t,e){const n=t.bandInfos.map(({name:r})=>r.toLowerCase()),s=[];for(let r=0;r<e.length;r++){const a=e[r].toLowerCase();let i=n.indexOf(a);if(i===-1&&a==="nearinfrared"&&(i=n.findIndex(o=>o.startsWith("nearinfrared_1")),i===-1&&(i=n.findIndex(o=>o.startsWith("nearinfrared")))),i===-1)return null;s.push(i)}return s}function Kr(t,e,n){const{bandCount:s}=t;return!e?.length||n&&e.some(r=>r<0||r>=s)?null:e}function Jr(t,e,{wavelengthMatchTolerance:n},s){const{bandInfos:r}=t,a=[];for(let o=0;o<r.length;o++){const{minWavelength:u,maxWavelength:l}=r[o];if(!u||!l)return null;a.push({minWavelength:u,maxWavelength:l})}const i=[];for(let o=0;o<e.length;o++){const u=e[o];let l=!1,m=-1,h=Number.MAX_VALUE;for(let f=0;f<a.length;f++){const d=a[f],g=u>=d.minWavelength&&u<=d.maxWavelength,x=Math.abs(u-(d.minWavelength+d.maxWavelength)/2);g?x<h&&(l=!0,m=f,h=x):!l&&x<h&&(m=f,h=x)}if(!l&&n&&h<n&&(l=!0),!l&&s)return null;i.push(m)}return i}function Yr(t,e,n){const{pixels:s,width:r,height:a,mask:i,bandMasks:o}=t,u=r*a,l=o?.length?b.combineBandMasks(o):i,m=Math.min(e.length,s.length),h=n.startsWith("f"),f=!h&&n!==t.pixelType,[d,g]=tt(n),x=b.createEmptyBand(n,u);for(let A=0;A<a;A++){let v=A*r;for(let w=0;w<r;w++,v++)if(!l||l[v]){let T=0;for(let F=0;F<m;F++)T+=e[F]*s[F][v];h||(T=Math.round(T),f&&(T=T>g?g:T<d?d:T)),x[v]=T}}const y=new b({width:r,height:a,pixels:[x],pixelType:n,mask:l});return y.updateStatistics(),y}var ye;let Xt=ye=class extends G{clone(){return new ye({conversionParameters:[...this.conversionParameters],raster:this.raster})}};c([p({type:[Number],json:{write:!0}})],Xt.prototype,"conversionParameters",void 0),Xt=ye=c([P("esri.layers.support.rasterFunctions.GrayscaleFunctionArguments")],Xt);const Zr=Xt;let dt=class extends E{constructor(){super(...arguments),this.functionName="Grayscale",this.functionArguments=null,this.rasterArgumentNames=["raster"]}get _normalizedWeights(){const{conversionParameters:t}=this.functionArguments,e=t.reduce((n,s)=>n+s);return t.map(n=>n/e)}_bindSourceRasters(){const{conversionParameters:t}=this.functionArguments;if(!t?.length)return{success:!1,supportsGPU:!1,error:"missing valid conversion parameters."};const e=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType;const n=t.length===3||e.bandCount===3&&t.length>3;return e.bandCount=1,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:n}}_processPixels(t){const e=t.pixelBlocks?.[0];return e==null?null:Yr(e,this._normalizedWeights,this.outputPixelType)}_getWebGLParameters(){return{weights:this._normalizedWeights}}};c([p({json:{write:!0,name:"rasterFunction"}})],dt.prototype,"functionName",void 0),c([p({type:Zr,json:{write:!0,name:"rasterFunctionArguments"}})],dt.prototype,"functionArguments",void 0),c([p()],dt.prototype,"rasterArgumentNames",void 0),c([p()],dt.prototype,"_normalizedWeights",null),dt=c([P("esri.layers.support.rasterFunctions.GrayscaleFunction")],dt);const Qr=dt;var xe;let gt=xe=class extends G{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(t,e){e.rasters=t.map(n=>typeof n=="number"||typeof n=="string"?n:n.toJSON())}clone(){return new xe({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:W(this.rasters)})}};c([p({json:{write:!0}})],gt.prototype,"operation",void 0),c([p({json:{write:!0}})],gt.prototype,"rasters",void 0),c([Nt("rasters")],gt.prototype,"writeRasters",null),c([p({json:{write:!0}})],gt.prototype,"processAsMultiband",void 0),gt=xe=c([P("esri.layers.support.rasterFunctions.LocalFunctionArguments")],gt);const to=gt;let jt=class extends E{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:n}=e,{processAsMultiband:s}=this.functionArguments;if(t.some(u=>u.bandCount!==n))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:r,rasters:a}=this.functionArguments,i=He[r];if(!(i===999||a.length===i||a.length<=1&&i===1))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${i}`};const o=e.clone();return o.bandCount=i!==999||s?n:1,this._removeStatsHistColormapVAT(o),this._updateStatistics(o),this._updatePixelType(o),this.rasterInfo=o,{success:!0,supportsGPU:o.bandCount===1&&i<=3&&(r<11||r>16)}}_processPixels(t){const{pixelBlocks:e}=t;return e==null||e.some(n=>n==null)?null:as(e,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=He[t],n=Object.keys(Le).find(o=>Le[o]===t)?.toLowerCase()??"undefined",s=this.outputPixelType??"f32";let[r,a]=tt(s);const i=H(s);return i&&(r-=1e-4,a+=1e-4),{imageCount:e,operationName:n,domainRange:[r,a],isOutputRounded:i}}_updateStatistics(t){const e=this.sourceRasterInfos[0],{operation:n}=this.functionArguments,s=qe(n)?.domain;if(s){t.statistics=[];for(let r=0;r<t.bandCount;r++)t.statistics[r]={min:s[0],max:s[1],avg:(s[0]+s[1])/2,stddev:(s[0]+s[1])/10}}else n===45&&e.statistics?.length&&(t.statistics=e.statistics.map(r=>({min:-r.max,max:-r.min,avg:r.avg!=null?-r.avg:void 0,stddev:r.stddev!=null?-r.stddev:void 0})))}_updatePixelType(t){const{statistics:e,pixelType:n}=this.sourceRasterInfos[0],{operation:s}=this.functionArguments,{domain:r,isInteger:a}=qe(s)??{domain:null,isInteger:!1};let i="f32";if(r&&a)i=Qt(r[0],r[1]);else if(s===30){const o=e?.[0];i=o?Qt(o.min,o.max):H(n)?n:"s32"}else if(s===45&&H(n)){const o=e?.map(({max:h})=>-h),u=e?.map(({min:h})=>-h),l=o?.length?Math.min(...o):null,m=u?.length?Math.min(...u):null;i=l!=null&&m!=null?Qt(l,m):n.startsWith("s")?n.replace("s","u"):n==="u1"||n==="u2"||n==="u4"?"s8":n==="u8"?"s16":"s32"}t.pixelType=this.outputPixelType=this._getOutputPixelType(i)}};c([p({json:{write:!0,name:"rasterFunction"}})],jt.prototype,"functionName",void 0),c([p({type:to,json:{write:!0,name:"rasterFunctionArguments"}})],jt.prototype,"functionArguments",void 0),c([p()],jt.prototype,"rasterArgumentNames",void 0),jt=c([P("esri.layers.support.rasterFunctions.LocalFunction")],jt);const eo=jt;var be;let yt=be=class extends G{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=Ee.matchAny}get normalizedNoDataValues(){const{noDataValues:t}=this;if(!t?.length)return null;let e=!1;const n=t.map(s=>{if(typeof s=="number")return e=!0,[s];if(typeof s=="string"){const r=s.trim().split(" ").filter(a=>a.trim()!=="").map(a=>Number(a));return e=e||r.length>0,r.length===0?null:r}return null});return e?n:null}clone(){return new be({includedRanges:this.includedRanges?.slice()??[],noDataValues:this.noDataValues?.slice()??[],noDataInterpretation:this.noDataInterpretation})}};c([p({json:{write:!0}})],yt.prototype,"includedRanges",void 0),c([p({json:{write:!0}})],yt.prototype,"noDataValues",void 0),c([p()],yt.prototype,"normalizedNoDataValues",null),c([p({json:{write:!0}})],yt.prototype,"noDataInterpretation",void 0),yt=be=c([P("esri.layers.support.rasterFunctions.MaskFunctionArguments")],yt);const so=yt;let xt=class extends E{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:n,normalizedNoDataValues:s}=this.functionArguments;if(!n?.length&&!s?.length)return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let r=[];for(let i=0;i<t.bandCount;i++){const o=Ss(e,n?.slice(2*i,2*i+2),s?.[i]);if(o==null){r=null;break}r.push(o)}this.lookups=r;const a=s!=null&&s.every(i=>i?.length===s[0]?.length);return{success:!0,supportsGPU:(!n||n.length<=2*Y)&&(!s||a&&s[0].length<=Y)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{outputPixelType:n,lookups:s}=this,{includedRanges:r,noDataInterpretation:a,normalizedNoDataValues:i}=this.functionArguments,o=a===Ee.matchAll;return js(e,{includedRanges:r,noDataValues:i,outputPixelType:n,matchAll:o,lookups:s})}_getWebGLParameters(){const{includedRanges:t,normalizedNoDataValues:e}=this.functionArguments,n=new Float32Array(Y);n.fill(Ft),e?.[0]?.length&&n.set(e[0]);const s=new Float32Array(Y);for(let r=0;r<s.length;r+=2)s[r]=t?.[r]??-Ft,s[r+1]=t?.[r+1]??Ft;return t?.length&&s.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:n,includedRanges:s}}};c([p({json:{write:!0,name:"rasterFunction"}})],xt.prototype,"functionName",void 0),c([p({type:so,json:{write:!0,name:"rasterFunctionArguments"}})],xt.prototype,"functionArguments",void 0),c([p()],xt.prototype,"rasterArgumentNames",void 0),c([p({json:{write:!0}})],xt.prototype,"lookups",void 0),xt=c([P("esri.layers.support.rasterFunctions.MaskFunction")],xt);const no=xt;var ve;let Mt=ve=class extends G{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:t,infraredBandID:e,scientificOutput:n}=this;return new ve({visibleBandID:t,infraredBandID:e,scientificOutput:n})}};c([p({json:{write:!0}})],Mt.prototype,"visibleBandID",void 0),c([p({json:{write:!0}})],Mt.prototype,"infraredBandID",void 0),c([p({json:{write:!0}})],Mt.prototype,"scientificOutput",void 0),Mt=ve=c([P("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],Mt);const ro=Mt;let Ot=class extends E{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t,visibleBandID:e,infraredBandID:n}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const s=this.sourceRasterInfos[0],r=Math.max(e,n);if(s.bandCount<2||r>=s.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};const a=s.clone();a.pixelType=this.outputPixelType,a.colormap=null,a.histograms=null,a.bandCount=1,a.keyProperties={...a.keyProperties,BandProperties:void 0};const[i,o,u,l]=t?[-1,1,0,.1]:[0,200,100,10];return a.statistics=[{min:i,max:o,avg:u,stddev:l}],this.rasterInfo=a,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{visibleBandID:n,infraredBandID:s,scientificOutput:r}=this.functionArguments;return Hn(e,n,s,!r)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:e,scientificOutput:n}=this.functionArguments,s=this.isInputBandIdsSwizzled?[0,1,2]:[e,t,0];return{bandIndexMat3:V(s),scaled:!n}}_getInputBandIds(t){const{visibleBandID:e,infraredBandID:n}=this.functionArguments;return[n,e,0].map(s=>t[s])}};c([p({json:{write:!0,name:"rasterFunction"}})],Ot.prototype,"functionName",void 0),c([p({type:ro,json:{write:!0,name:"rasterFunctionArguments"}})],Ot.prototype,"functionArguments",void 0),c([p()],Ot.prototype,"rasterArgumentNames",void 0),Ot=c([P("esri.layers.support.rasterFunctions.NDVIFunction")],Ot);const oo=Ot;var we;let nt=we=class extends G{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new we({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};c([p({json:{write:!0}})],nt.prototype,"inputRanges",void 0),c([p({json:{write:!0}})],nt.prototype,"outputValues",void 0),c([p({json:{write:!0}})],nt.prototype,"noDataRanges",void 0),c([p({json:{write:!0}})],nt.prototype,"allowUnmatched",void 0),c([p({json:{write:!0}})],nt.prototype,"isLastInputRangeInclusive",void 0),nt=we=c([P("esri.layers.support.rasterFunctions.RemapFunctionArguments")],nt);const ao=nt;let bt=class extends E{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,t.colormap=null,t.histograms=null,t.bandCount=1,t.attributeTable=null;const{statistics:n}=t,{allowUnmatched:s,outputValues:r,inputRanges:a,noDataRanges:i,isLastInputRangeInclusive:o}=this.functionArguments;if(n!=null&&n.length&&r?.length)if(s){const u=Math.min.apply(null,[...r,n[0].min]),l=Math.max.apply(null,[...r,n[0].max]);t.statistics=[{...n[0],min:u,max:l}]}else{let u=r[0],l=u;for(let m=0;m<r.length;m++)u=u>r[m]?r[m]:u,l=l>r[m]?l:r[m];t.statistics=[{...n[0],min:u,max:l}]}return this.rasterInfo=t,this.lookup=s?null:Ms({srcPixelType:e,inputRanges:a,outputValues:r,noDataRanges:i,allowUnmatched:s,isLastInputRangeInclusive:o,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!r||r.length<=Y)&&(!i||i.length<=Y)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{lookup:n,outputPixelType:s}=this;if(n){const l=Yt(e,{lut:[n.lut],offset:n.offset,outputPixelType:s});return l!=null&&n.mask&&(l.mask=Os(e.pixels[0],e.mask,n.mask,n.offset,"u8")),l}const{inputRanges:r,outputValues:a,noDataRanges:i,allowUnmatched:o,isLastInputRangeInclusive:u}=this.functionArguments;return Ds(e,{inputRanges:r,outputValues:a,noDataRanges:i,outputPixelType:s,allowUnmatched:o,isLastInputRangeInclusive:u})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:e,isLastInputRangeInclusive:n}=this.functionArguments,s=new Float32Array(3*Y),r=1e-5,a=this.functionArguments.inputRanges??[],i=this.functionArguments.outputValues??[],o=i.length;for(let l=0;l<Y;l++)s[3*l]=a[2*l]??Ft-1,s[3*l+1]=a[2*l+1]??Ft,s[3*l+2]=i[l]??0,l<o&&(l>0&&(s[3*l]-=r),(l<o-1||!n)&&(s[3*l+1]-=r));const u=new Float32Array(2*Y);return u.fill(Ft),e?.length&&u.set(e),{allowUnmatched:t,rangeMaps:s,noDataRanges:u,clampRange:tt(this.outputPixelType)}}};c([p({json:{write:!0,name:"rasterFunction"}})],bt.prototype,"functionName",void 0),c([p({type:ao,json:{write:!0,name:"rasterFunctionArguments"}})],bt.prototype,"functionArguments",void 0),c([p()],bt.prototype,"rasterArgumentNames",void 0),c([p({json:{write:!0}})],bt.prototype,"lookup",void 0),bt=c([P("esri.layers.support.rasterFunctions.RemapFunction")],bt);const io=bt;var Ae;const uo=new et({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let rt=Ae=class extends G{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new Ae({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};c([K(uo)],rt.prototype,"slopeType",void 0),c([p({type:Number,json:{write:!0}})],rt.prototype,"zFactor",void 0),c([p({type:Number,json:{name:"psPower",write:!0}})],rt.prototype,"pixelSizePower",void 0),c([p({type:Number,json:{name:"psZFactor",write:!0}})],rt.prototype,"pixelSizeFactor",void 0),c([p({type:Boolean,json:{write:!0}})],rt.prototype,"removeEdgeEffect",void 0),rt=Ae=c([P("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],rt);const lo=rt;let vt=class extends E{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.statistics=this.functionArguments.slopeType!=="percent-rise"?[{min:0,max:90,avg:1,stddev:1}]:null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.bandCount=1,this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{zFactor:n,slopeType:s,pixelSizePower:r,pixelSizeFactor:a}=this.functionArguments,{isGCS:i}=this,{extent:o,primaryPixelSizes:u}=t,l=u?.[0],m=l??(o?{x:o.width/e.width,y:o.height/e.height}:{x:1,y:1});return Gs(e,{zFactor:n,slopeType:s,pixelSizePower:r,pixelSizeFactor:a,isGCS:i,resolution:m})}_getWebGLParameters(){const{zFactor:t,slopeType:e,pixelSizeFactor:n,pixelSizePower:s}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?t*Zt:t,slopeType:e,pixelSizeFactor:n??0,pixelSizePower:s??0}}};c([p({json:{write:!0,name:"rasterFunction"}})],vt.prototype,"functionName",void 0),c([p({type:lo,json:{write:!0,name:"rasterFunctionArguments"}})],vt.prototype,"functionArguments",void 0),c([p()],vt.prototype,"rasterArgumentNames",void 0),c([p({json:{write:!0}})],vt.prototype,"isGCS",void 0),vt=c([P("esri.layers.support.rasterFunctions.SlopeFunction")],vt);const co=vt,ms=new et({1:"min",2:"max",3:"mean",4:"stddev",5:"median",6:"majority",7:"minority"},{useNumericKeys:!0});function po(t,e){const{fillNoDataOnly:n}=e,{band:s,width:r,height:a,mask:i,outBand:o}=t;if(n&&!i)return void o.set(s);const{statisticsType:u,kernelRows:l,kernelCols:m}=e,h=u==="stddev",f=r*a,d=new Float64Array(f),g=new Float64Array(f),x=new Uint32Array(f);for(let N=0;N<a;N++){const I=N*r;let k=0,_=0,B=0;for(let S=0;S<m;S++)i&&!i[I+S]||(k+=s[I+S],h&&(_+=s[I+S]**2),B++);d[I]=k,g[I]=_,x[I]=B;for(let S=1;S<=r-m;S++){const q=I+S-1,Gt=q+m;i?(i[q]&&(B--,k-=s[q],h&&(_-=s[q]**2)),i[Gt]&&(B++,k+=s[Gt],h&&(_+=s[Gt]**2))):(k-=s[q],k+=s[Gt],h&&(_-=s[q]**2,_+=s[Gt]**2)),d[I+S]=k,x[I+S]=B,h&&(g[I+S]=_)}}const y=new Float64Array(f),A=new Float64Array(f),v=new Uint32Array(f),w=l*r;for(let N=0;N<=r-m;N++){let I=0,k=0,_=0;for(let B=0;B<l;B++){const S=B*r+N;I+=d[S],_+=x[S],h&&(k+=g[S])}y[N]=I,A[N]=k,v[N]=_;for(let B=1;B<=a-l;B++){const S=(B-1)*r+N,q=S+w;I-=d[S],I+=d[q],_-=x[S],_+=x[q],h&&(k-=g[S],k+=g[q]),y[B*r+N]=I,A[B*r+N]=k,v[B*r+N]=_}}const T=Math.floor(l/2),F=Math.floor(m/2);for(let N=T;N<a-T;N++){const I=N*r;for(let k=F;k<r-F;k++){const _=(N-T)*r+k-F,B=v[_];if(B===0||n&&(!i||i[I+k]))continue;const S=y[_]/B,q=h?Math.sqrt((A[_]-y[_]*S)/B):S;o[I+k]=q,i&&(i[I+k]=255)}}}function ho(t,e){const{fillNoDataOnly:n}=e,{band:s,width:r,height:a,mask:i,outBand:o}=t;if(n&&!i)return void o.set(s);const{kernelRows:u,kernelCols:l,statisticsType:m}=e,h=Math.floor(u/2),f=Math.floor(l/2),d=m==="min",g=o.slice(),x=new Uint32Array(r*a);for(let y=h;y<a-h;y++){const A=y*r;for(let v=f;v<r-f;v++){let w=d?Number.MAX_VALUE:-Number.MAX_VALUE,T=0;for(let F=0;F<u;F++)for(let N=0;N<l;N++){const I=A+v+(F-h)*r+N-f;i&&!i[I]||(w=d?Math.min(w,s[I]):Math.max(w,s[I]),T++)}i?(g[A+v]=T===0?0:w,x[A+v]=T):o[A+v]=T===0?0:w}}if(i)for(let y=h;y<a-h;y++){const A=y*r;for(let v=f;v<r-f;v++)if(x[A+v]){if(n&&i[A+v])continue;o[A+v]=g[A+v],i[A+v]=255}}}function mo(t,e){const{fillNoDataOnly:n}=e,{band:s,width:r,height:a,mask:i,outBand:o}=t;if(n&&!i)return void o.set(s);const{kernelRows:u,kernelCols:l}=e,m=Math.floor(u/2),h=Math.floor(l/2),f=o.slice(),d=new Uint32Array(r*a);for(let g=m;g<a-m;g++){const x=g*r;for(let y=h;y<r-h;y++){if(n&&i?.[x+y])continue;const A=[];for(let v=0;v<u;v++)for(let w=0;w<l;w++){const T=x+y+(v-m)*r+w-h;i&&!i[T]||A.push(s[T])}A.length&&(A.sort((v,w)=>v-w),i?(f[x+y]=A[Math.floor((A.length-1)/2)],d[x+y]=A.length):o[x+y]=A[Math.floor((A.length-1)/2)])}}if(i)for(let g=m;g<a-m;g++){const x=g*r;for(let y=h;y<r-h;y++)if(d[x+y]){if(n&&i[x+y])continue;o[x+y]=f[x+y],i[x+y]=255}}}function fo(t,e){const{fillNoDataOnly:n}=e,{band:s,width:r,height:a,mask:i,outBand:o}=t;if(n&&!i)return void o.set(s);const{kernelRows:u,kernelCols:l}=e,m=Math.floor(u/2),h=Math.floor(l/2),f=e.statisticsType==="majority",d=u*l,g=o.slice(),x=new Uint32Array(r*a);for(let y=m;y<a-m;y++){const A=y*r;for(let v=h;v<r-h;v++){if(n&&i?.[A+v])continue;const w=new Map;for(let I=0;I<u;I++)for(let k=0;k<l;k++){const _=A+v+(I-m)*r+k-h;if(i&&!i[_])continue;const B=s[_];w.set(B,w.has(B)?w.get(B)+1:1)}if(w.size===0)continue;let T=0,F=0,N=f?0:d+1;for(const I of w.keys())F=w.get(I),f===F>N&&(N=F,T=I);i?(g[A+v]=T,x[A+v]=w.size):o[A+v]=T}}if(i)for(let y=m;y<a-m;y++){const A=y*r;for(let v=h;v<r-h;v++)if(x[A+v]){if(n&&i[A+v])continue;o[A+v]=g[A+v],i[A+v]=255}}}function go(t,e){const{mask:n}=t,{fillNoDataOnly:s}=e;if(s&&!n)return t;const{pixels:r,width:a,height:i,bandMasks:o,pixelType:u}=t,l=r.length,m=a*i,h=[],{kernelRows:f,kernelCols:d,statisticsType:g,mirrorEdges:x}=e;if(s&&!n)return t;const y=e.outputPixelType??u,A=[];for(let T=0;T<l;T++){const F=r[T],N=b.createEmptyBand(y,m);s&&N.set(F);const I=o?.[T]??n,k=I?.slice()??null,_={band:F,width:a,height:i,mask:k,outBand:N};switch(g){case"min":case"max":ho(_,e);break;case"mean":case"stddev":po(_,e);break;case"median":mo(_,e);break;case"majority":case"minority":fo(_,e)}x&&!s&&me(N,a,i,f,d),h.push(N),k&&A.push(k)}let v=A[0]??n;A.length!==l&&(A.length=0),l>1&&o?.length&&(v=b.combineBandMasks(o));const w=new b({pixelType:y,width:a,height:i,pixels:h,bandMasks:o&&A.length?A:null,mask:v});return w.updateStatistics(),w}var Te;let wt=Te=class extends G{constructor(){super(...arguments),this.rows=3,this.cols=3,this.fillNoDataOnly=!1,this.statisticsType="min"}clone(){return new Te({rows:this.rows,cols:this.cols,fillNoDataOnly:this.fillNoDataOnly,statisticsType:this.statisticsType,raster:W(this.raster)})}};c([p({json:{write:!0,read:{source:["kernelRows","rows"],reader:(t,e)=>Number(t??e?.kernelRows??3)}}})],wt.prototype,"rows",void 0),c([p({json:{write:!0,read:{source:["kernelCols","cols"],reader:(t,e)=>Number(t??e?.kernelCols??3)}}})],wt.prototype,"cols",void 0),c([p({json:{write:!0}})],wt.prototype,"fillNoDataOnly",void 0),c([p({json:{read:{source:["statisticsType","type"],reader:(t,e)=>ms.fromJSON(e?.statisticsType??e?.type)??"min"},write:{target:"type"}}}),K(ms)],wt.prototype,"statisticsType",void 0),wt=Te=c([P("esri.layers.support.rasterFunctions.StatisticsFunctionArguments")],wt);const yo=wt;let Dt=class extends E{constructor(){super(...arguments),this.functionName="Statistics",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{type:t}=this.functionArguments.toJSON();if(t<1||t>7)return{success:!1,supportsGPU:!1,error:`statistics-function: the given statistics type is not supported ${t}`};const e=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const n=e.clone();n.pixelType=this.outputPixelType;const{statisticsType:s}=this.functionArguments;return s==="stddev"&&this._removeStatsHistColormapVAT(n),this.rasterInfo=n,{success:!0,supportsGPU:n.bandCount<=3&&t<5}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return e;const{statisticsType:n,rows:s,cols:r,fillNoDataOnly:a}=this.functionArguments;return go(e,{kernelRows:s,kernelCols:r,fillNoDataOnly:a,outputPixelType:this.outputPixelType,statisticsType:n,mirrorEdges:!0})}_getWebGLParameters(){const{rows:t,cols:e,statisticsType:n,fillNoDataOnly:s}=this.functionArguments;return{fillNoDataOnly:s,kernelRows:t,kernelCols:e,statisticsType:n,clampRange:tt(this.outputPixelType)}}};c([p({json:{write:!0,name:"rasterFunction"}})],Dt.prototype,"functionName",void 0),c([p({type:yo,json:{write:!0,name:"rasterFunctionArguments"}})],Dt.prototype,"functionArguments",void 0),c([p()],Dt.prototype,"rasterArgumentNames",void 0),Dt=c([P("esri.layers.support.rasterFunctions.StatisticsFunction")],Dt);const xo=Dt;var Pe;let At=Pe=class extends G{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(t,e){if(!t?.length)return null;const n=[];return t.forEach(s=>{const r={min:s.min,max:s.max,avg:s.avg??s.mean,stddev:s.stddev??s.standardDeviation};n.push(r)}),n}writeStatistics(t,e,n){if(!t?.length)return;const s=[];t.forEach(r=>{const a={...r,mean:r.avg,standardDeviation:r.stddev};delete a.avg,delete a.stddev,s.push(a)}),e[n]=s}clone(){return new Pe({statistics:W(this.statistics),histograms:W(this.histograms)})}};c([p({json:{write:!0}})],At.prototype,"statistics",void 0),c([Pt("statistics")],At.prototype,"readStatistics",null),c([Nt("statistics")],At.prototype,"writeStatistics",null),c([p({json:{write:!0}})],At.prototype,"histograms",void 0),At=Pe=c([P("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],At);const bo=At;let ot=class extends E{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone(),{statistics:n,histograms:s}=this.functionArguments;return s&&(e.histograms=s),n&&(e.statistics=n),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};c([p({json:{write:!0,name:"rasterFunction"}})],ot.prototype,"functionName",void 0),c([p({type:bo,json:{write:!0,name:"rasterFunctionArguments"}})],ot.prototype,"functionArguments",void 0),c([p()],ot.prototype,"rasterArgumentNames",void 0),c([p({json:{write:!0}})],ot.prototype,"indexedColormap",void 0),c([p()],ot.prototype,"isNoopProcess",void 0),ot=c([P("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],ot);const vo=ot;var Ne;const wo=new et({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let U=Ne=class extends G{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(t,e,n){t?.length&&(Array.isArray(t[0])||(t=t.map(s=>[s.min,s.max,s.avg,s.stddev])),e[n]=t)}clone(){return new Ne({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:W(this.statistics),gamma:W(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:W(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};c([p({type:Boolean,json:{write:!0}})],U.prototype,"computeGamma",void 0),c([p({type:Boolean,json:{name:"dra",write:!0}})],U.prototype,"dynamicRangeAdjustment",void 0),c([p({type:[Number],json:{write:!0}})],U.prototype,"gamma",void 0),c([p()],U.prototype,"histograms",void 0),c([p({type:Number,json:{write:!0}})],U.prototype,"maxPercent",void 0),c([p({type:Number,json:{write:!0}})],U.prototype,"minPercent",void 0),c([p({type:Number,json:{write:!0}})],U.prototype,"numberOfStandardDeviations",void 0),c([p({type:Number,json:{name:"max",write:!0}})],U.prototype,"outputMax",void 0),c([p({type:Number,json:{name:"min",write:!0}})],U.prototype,"outputMin",void 0),c([p({type:Number,json:{write:!0}})],U.prototype,"sigmoidStrengthLevel",void 0),c([p({json:{type:[[Number]],write:!0}})],U.prototype,"statistics",void 0),c([Nt("statistics")],U.prototype,"writeStatistics",null),c([K(wo)],U.prototype,"stretchType",void 0),c([p({type:Boolean,json:{write:!0}})],U.prototype,"useGamma",void 0),U=Ne=c([P("esri.layers.support.rasterFunctions.StretchFunctionArguments")],U);const Ao=U;let at=class extends E{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:e}=t,{functionArguments:n}=this,{dynamicRangeAdjustment:s,gamma:r,useGamma:a}=n;if(!s&&["u8","u16","s8","s16"].includes(e)){const l=te(n.toJSON(),{rasterInfo:t}),m=H(this.outputPixelType)?"round":"float";this.lookup=Es({pixelType:e,...l,gamma:a?r:null,rounding:m}),this.cutOffs=l}else s||(this.cutOffs=te(n.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(e);const i=t.clone();i.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(i),this.outputPixelType==="u8"&&(i.keyProperties.DataType="processed");const{outputMin:o=0,outputMax:u=255}=this.functionArguments;i.statistics=[];for(let l=0;l<i.bandCount;l++)i.statistics[l]={min:o,max:u};return this.rasterInfo=i,{success:!0,supportsGPU:!s}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return e;const{lookup:n}=this;if(n)return Yt(e,{...n,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:s}=this,r=this.cutOffs||te(s.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:e}),a=s.useGamma?s.gamma:null;return zs(e,{...r,gamma:a,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:e=255,gamma:n,useGamma:s}=this.functionArguments,r=this.rasterInfo.bandCount>=2?3:1,a=s&&n?.length?Vs(r,n):[1,1,1],{minCutOff:i,maxCutOff:o}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};i.length===1&&(i[1]=i[2]=i[0],o[1]=o[2]=o[0]);const u=new Float32Array(r);let l;for(l=0;l<r;l++)u[l]=(e-t)/(o[l]-i[l]);const m=H(this.outputPixelType);return{bandCount:r,outMin:t,outMax:e,minCutOff:i,maxCutOff:o,factor:u,useGamma:s,gamma:s&&n?n:[1,1,1],gammaCorrection:s&&a?a:[1,1,1],stretchType:this.functionArguments.stretchType,isOutputRounded:m,type:"stretch"}}};c([p({json:{write:!0,name:"rasterFunction"}})],at.prototype,"functionName",void 0),c([p({type:Ao,json:{write:!0,name:"rasterFunctionArguments"}})],at.prototype,"functionArguments",void 0),c([p()],at.prototype,"rasterArgumentNames",void 0),c([p({json:{write:!0}})],at.prototype,"lookup",void 0),c([p({json:{write:!0}})],at.prototype,"cutOffs",void 0),at=c([P("esri.layers.support.rasterFunctions.StretchFunction")],at);const To=at;var Fe;let Kt=Fe=class extends G{constructor(){super(...arguments),this.attributeTableAsRecordSet=null}clone(){return new Fe({attributeTableAsRecordSet:W(this.attributeTableAsRecordSet)})}};c([p({json:{write:!0}})],Kt.prototype,"attributeTableAsRecordSet",void 0),Kt=Fe=c([P("esri.layers.support.rasterFunctions.TableFunctionArguments")],Kt);const Po=Kt;let Tt=class extends E{constructor(){super(...arguments),this.functionName="Table",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||t.pixelType.startsWith("f"))return{success:!1,supportsGPU:!1,error:"table-function: Source data must be single band and integer pixel type."};const{attributeTableAsRecordSet:e}=this.functionArguments;if(!e)return{success:!1,supportsGPU:!1,error:"table-function: Missing attributeTableAsRecordSet argument."};this.outputPixelType=this._getOutputPixelType(t.pixelType);const n=t.clone();return n.pixelType=this.outputPixelType,n.bandCount=1,n.dataType!=="thematic"&&(n.keyProperties=n.keyProperties?{...n.keyProperties,DataType:"thematic"}:{DataType:"thematic"}),this.rasterInfo=n,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};c([p({json:{write:!0,name:"rasterFunction"}})],Tt.prototype,"functionName",void 0),c([p({type:Po,json:{write:!0,name:"rasterFunctionArguments"}})],Tt.prototype,"functionArguments",void 0),c([p()],Tt.prototype,"rasterArgumentNames",void 0),c([p()],Tt.prototype,"isNoopProcess",void 0),Tt=c([P("esri.layers.support.rasterFunctions.TableFunction")],Tt);const No=Tt,O=new Map;function fs(t,e){const{rasterFunctionArguments:n}=t;n&&(n.rasters||[n.raster,n.raster2]).forEach(s=>{s&&typeof s!="number"&&(typeof s=="string"?s.startsWith("http")&&(e.includes(s)||e.push(s)):"rasterFunctionArguments"in s&&fs(s,e))})}function Fo(t,e){if(e=e??{},"function"in(t=W(t))&&"arguments"in t&&t.arguments){const n=bs(t,new Map,e);if(Ce(n),!n.renderingRule)throw new It("raster-function-helper","Unsupported raster function json.");t=n.renderingRule}if("rasterFunction"in t)return gs(t=Ie(t),e);throw new It("raster-function-helper","unsupported raster function json.")}function Io(t,e){return e[0]==="rasters"&&Array.isArray(t.rasters)?t.rasters:e.map(n=>t[n])}function ds(t){return!!(t&&typeof t=="object"&&t.rasterFunction&&t.rasterFunctionArguments)}function Ie(t){const{rasterFunction:e,rasterFunctionArguments:n}=t,s={};for(const r in n){let a=n[r];const i=r.toLowerCase();if(i==="rasters"&&Array.isArray(a))s.rasters=a.map(o=>ds(o)?Ie(o):o);else switch(ds(a)&&(a=Ie(a)),i){case"dra":s.dra=a;break;case"pspower":s.psPower=a;break;case"pszfactor":s.psZFactor=a;break;case"bandids":s.bandIds=a;break;default:s[r[0].toLowerCase()+r.slice(1)]=a}}return e!=="Local"||s.rasters?.length||(s.rasters=["$$"]),{...t,rasterFunctionArguments:s}}function gs(t,e){const{rasterFunction:n,rasterFunctionArguments:s}=t,r=t.outputPixelType?.toLowerCase();if(n==null||!O.has(n))throw new It("raster-function-helper",`unsupported raster function: ${n}`);const a=O.get(n),i=(typeof a.ctor=="function"?a.ctor:a.ctor.default).fromJSON({...t,outputPixelType:r}),{rasterArgumentNames:o}=i,u=[],l=Io(s,o),m=o[0]==="rasters"||o.length>1,h=[];for(let f=0;f<l.length;f++){const d=l[f];let g;d==null||typeof d=="string"&&d.startsWith("$")?u.push(e?.raster):typeof d=="string"?e[d]&&u.push(e[d]):typeof d!="number"&&"rasterFunction"in d&&(g=gs(d,e),m||(i.functionArguments[o[f]]=g),u.push(g)),m&&h.push(g??d)}if(m&&(o[0]==="rasters"?i.functionArguments.rasters=h:o.forEach((f,d)=>{i.functionArguments[f]=h[d]})),e){i.sourceRasters=u;const f=e.raster?.url;f&&(i.mainPrimaryRasterId=f)}return i}function ys(t,e){if(t&&e)for(const n in t){const s=t[n];s&&typeof s=="object"&&"type"in s&&(s.type==="RasterFunctionTemplate"?ys(s.arguments,e):s.type==="RasterFunctionVariable"&&e[s.name]!=null&&(s.value=e[s.name]))}}function Re(t,e){if(!t||typeof t!="object")return t;const{value:n}=t;if(!n||typeof n!="object")return t.isDataset?"$$":n;if(Array.isArray(n))return n.length===0?[]:n.map(r=>typeof r=="object"&&r.type==="RasterFunctionVariable"?Re(r,e):r);if("value"in n&&["number","string","boolean"].includes(typeof n.value))return n.value;if(t.isDataset&&n.type!=="Scalar")return"$$";if(!("type"in n))return n;let s=n;switch(n.type){case"Scalar":s=n.value;break;case"AlgorithmicColorRamp":s=xs(n);break;case"MultiPartColorRamp":s={type:"multipart",colorRamps:n.ArrayOfColorRamp.map(xs)};break;case"ArgumentArray":if(n.elements?.length&&n.elements[0].type!=="RasterStatistics"){const r=[];for(let a=0;a<n.elements.length;a++){const i=n.elements[a],{type:o}=i;if(o)if(o==="RasterFunctionTemplate"){const{renderingRule:u}=bs(i,e);r.push(u),i._object_id!=null&&e.set(i._object_id,u)}else{if(o!=="RasterFunctionVariable")throw new It("raster-function-helper","unsupported raster function json.");{const u=Re(i,e);r.push(u),i._object_id!=null&&e.set(i._object_id,u)}}else r.push(i)}s=r}else s=n.elements}return n._object_id!=null&&e.set(n._object_id,s),s}function xs(t){const e=t.algorithm??"esriHSVAlgorithm";let{FromColor:n,ToColor:s}=t;if(!Array.isArray(n)){const{r,g:a,b:i}=ze({h:n.Hue,s:n.Saturation,v:n.Value});n=[r,a,i,n.AlphaValue]}if(!Array.isArray(s)){const{r,g:a,b:i}=ze({h:s.Hue,s:s.Saturation,v:s.Value});s=[r,a,i,s.AlphaValue]}return{type:"algorithmic",algorithm:e,fromColor:n,toColor:s}}function bs(t,e,n){n&&ys(t,n);const s={renderingRule:{},templates:e};return vs(t,s),s}function vs(t,e){if(!t||!e.renderingRule)return;const{renderingRule:n,templates:s}=e,{function:r,arguments:a,_object_id:i}=t;if(!r||!a)return;i!=null&&s.set(i,n),n.rasterFunction=r.type.replace("Function",""),n.outputPixelType=r.pixelType;const o={};n.rasterFunctionArguments=o;for(const u in a){if(u==="type"||u==="object_id"||u==="_object_ref_id")continue;const l=a[u];l&&typeof l=="object"&&"type"in l&&(l.type==="RasterFunctionTemplate"||l.type==="RasterFunctionVariable")?(l.type==="RasterFunctionVariable"?o[u]=Re(l,s):(n.rasterFunctionArguments[u]={},vs(l,{renderingRule:n.rasterFunctionArguments[u],templates:s})),l._object_id!=null&&s.set(l._object_id,o[u])):o[u]=l}switch(o.DEM&&!o.Raster&&(o.Raster=o.DEM,delete o.DEM),n.rasterFunction){case"Stretch":Ro(o);break;case"Colormap":Co(o);break;case"Convolution":ko(o);break;case"Mask":_o(o)}}function Ce(t){const{renderingRule:e,templates:n}=t;if(typeof e!="object"||!e?.rasterFunctionArguments||!n.size)return;const{rasterFunctionArguments:s}=e;for(const r in s){const a=s[r],i=r==="_object_ref_id"?a:a&&typeof a=="object"&&"_object_ref_id"in a?a._object_ref_id:null;if(i==null)a&&typeof a=="object"&&(a.rasterFunctionArguments&&Ce({renderingRule:a,templates:n}),Array.isArray(a)&&a.forEach((o,u)=>{if(typeof o=="object")if(o._object_ref_id!=null){if(!n.has(o._object_ref_id))throw new It("raster-function-helper",`unsupported raster function json. _object_ref_id: ${a} does not exist`);const l=n.get(i);l&&typeof l=="object"?Object.assign(o,l):a[u]=l}else Ce({renderingRule:o,templates:n})}));else{if(!n.has(i))throw new It("raster-function-helper",`unsupported raster function json. _object_ref_id: ${i} does not exist`);const o=n.get(i);r!=="_object_ref_id"?s[r]=o:o&&typeof o=="object"&&Object.assign(s,o)}}}function Ro(t){t.Statistics?.length&&typeof t.Statistics=="object"&&(t.Statistics=t.Statistics.map(e=>[e.min,e.max,e.mean,e.standardDeviation])),t.NumberOfStandardDeviation!=null&&(t.NumberOfStandardDeviations=t.NumberOfStandardDeviation,delete t.NumberOfStandardDeviation)}function Co(t){t.ColorRamp?.type?.toLowerCase()==="randomcolorramp"&&(delete t.ColorRamp,t.ColormapName="Random"),t.ColorSchemeType===0&&delete t.ColorRamp}function ko(t){t.ConvolutionType!=null&&(t.Type=t.ConvolutionType,delete t.ConvolutionType)}function _o(t){t.NoDataValues?.length&&typeof t.NoDataValues[0]=="string"&&(t.NoDataValues=t.NoDataValues.filter(e=>e!=="").map(e=>Number(e)))}O.set("Arithmetic",{desc:"Arithmetic Function",ctor:Mn,rasterArgumentNames:["rasters"]}),O.set("Aspect",{desc:"Aspect Function",ctor:Dn,rasterArgumentNames:["raster"]}),O.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:cr,rasterArgumentNames:["raster"]}),O.set("Colormap",{desc:"Colormap Function",ctor:Ar,rasterArgumentNames:["raster"]}),O.set("CompositeBand",{desc:"CompositeBand Function",ctor:Pr,rasterArgumentNames:["rasters"]}),O.set("ComputeChange",{desc:"ComputeChange Function",ctor:jr,rasterArgumentNames:["rasters"]}),O.set("Convolution",{desc:"Convolution Function",ctor:Lr,rasterArgumentNames:["raster"]}),O.set("ContrastBrightness",{desc:"Contrast Brightness Function",ctor:Or,rasterArgumentNames:["raster"]}),O.set("ExtractBand",{desc:"ExtractBand Function",ctor:$r,rasterArgumentNames:["raster"]}),O.set("Curvature",{desc:"Curvature Function",ctor:qr,rasterArgumentNames:["raster"]}),O.set("Grayscale",{desc:"Grayscale Function",ctor:Qr,rasterArgumentNames:["raster"]}),O.set("Clip",{desc:"Clip Function",ctor:hr,rasterArgumentNames:["raster"]}),O.set("Local",{desc:"Local Function",ctor:eo,rasterArgumentNames:["rasters"]}),O.set("Mask",{desc:"Mask Function",ctor:no,rasterArgumentNames:["raster"]}),O.set("NDVI",{desc:"NDVI Function",ctor:oo,rasterArgumentNames:["raster"]}),O.set("Remap",{desc:"Remap Function",ctor:io,rasterArgumentNames:["raster"]}),O.set("Slope",{desc:"Slope Function",ctor:co,rasterArgumentNames:["raster"]}),O.set("Statistics",{desc:"Focal Statistics Function",ctor:xo,rasterArgumentNames:["raster"]}),O.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:vo,rasterArgumentNames:["raster"]}),O.set("Stretch",{desc:"Stretch Function",ctor:To,rasterArgumentNames:["raster"]}),O.set("Table",{desc:"Attribute Table Function",ctor:No,rasterArgumentNames:["raster"]});let Wt=class extends Jt{get affectsPixelSize(){return!1}forwardTransform(t){return t}inverseTransform(t){return t}};c([p()],Wt.prototype,"affectsPixelSize",null),c([p({json:{write:!0}})],Wt.prototype,"spatialReference",void 0),Wt=c([P("esri.layers.support.rasterTransforms.BaseRasterTransform")],Wt);const ke=Wt;var _e;let qt=_e=class extends ke{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(t){return(t=t.clone()).type==="point"?(t.x>180+this.tolerance&&(t.x-=360),t):(t.xmin>=180-this.tolerance?(t.xmax-=360,t.xmin-=360):t.xmax>180+this.tolerance&&(t.xmin=-180,t.xmax=180),t)}inverseTransform(t){return(t=t.clone()).type==="point"?(t.x<-this.tolerance&&(t.x+=360),t):(t.xmin<-this.tolerance&&(t.xmin+=360,t.xmax+=360),t)}clone(){return new _e({tolerance:this.tolerance})}};c([K({GCSShiftXform:"gcs-shift"})],qt.prototype,"type",void 0),c([p()],qt.prototype,"tolerance",void 0),qt=_e=c([P("esri.layers.support.rasterTransforms.GCSShiftTransform")],qt);const Bo=qt;var Be;function Se(t,e,n){const{x:s,y:r}=e;if(n<2)return{x:t[0]+s*t[2]+r*t[4],y:t[1]+s*t[3]+r*t[5]};if(n===2){const f=s*s,d=r*r,g=s*r;return{x:t[0]+s*t[2]+r*t[4]+f*t[6]+g*t[8]+d*t[10],y:t[1]+s*t[3]+r*t[5]+f*t[7]+g*t[9]+d*t[11]}}const a=s*s,i=r*r,o=s*r,u=a*s,l=a*r,m=s*i,h=r*i;return{x:t[0]+s*t[2]+r*t[4]+a*t[6]+o*t[8]+i*t[10]+u*t[12]+l*t[14]+m*t[16]+h*t[18],y:t[1]+s*t[3]+r*t[5]+a*t[7]+o*t[9]+i*t[11]+u*t[13]+l*t[15]+m*t[17]+h*t[19]}}function ws(t,e,n){const{xmin:s,ymin:r,xmax:a,ymax:i,spatialReference:o}=e;let u=[];if(n<2)u.push({x:s,y:i}),u.push({x:a,y:i}),u.push({x:s,y:r}),u.push({x:a,y:r});else{let h=10;for(let f=0;f<h;f++)u.push({x:s,y:r+(i-r)*f/(h-1)}),u.push({x:a,y:r+(i-r)*f/(h-1)});h=8;for(let f=1;f<=h;f++)u.push({x:s+(a-s)*f/h,y:r}),u.push({x:s+(a-s)*f/h,y:i})}u=u.map(h=>Se(t,h,n));const l=u.map(h=>h.x),m=u.map(h=>h.y);return new Us({xmin:Math.min.apply(null,l),xmax:Math.max.apply(null,l),ymin:Math.min.apply(null,m),ymax:Math.max.apply(null,m),spatialReference:o})}function So(t){const[e,n,s,r,a,i]=t,o=s*i-a*r,u=a*r-s*i;return[(a*n-e*i)/o,(s*n-e*r)/u,i/o,r/u,-a/o,-s/u]}let $=Be=class extends ke{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(t,e){const{coeffX:n,coeffY:s}=e;if(!n?.length||!s?.length||n.length!==s.length)return null;const r=[];for(let a=0;a<n.length;a++)r.push(n[a]),r.push(s[a]);return r}writeForwardCoefficients(t,e,n){const s=[],r=[];for(let a=0;a<t?.length;a++)a%2==0?s.push(t[a]):r.push(t[a]);e.coeffX=s,e.coeffY=r}get inverseCoefficients(){let t=this._get("inverseCoefficients");const e=this._get("forwardCoefficients");return!t&&e&&this.polynomialOrder<2&&(t=So(e)),t}set inverseCoefficients(t){this._set("inverseCoefficients",t)}readInverseCoefficients(t,e){const{inverseCoeffX:n,inverseCoeffY:s}=e;if(!n?.length||!s?.length||n.length!==s.length)return null;const r=[];for(let a=0;a<n.length;a++)r.push(n[a]),r.push(s[a]);return r}writeInverseCoefficients(t,e,n){const s=[],r=[];for(let a=0;a<t?.length;a++)a%2==0?s.push(t[a]):r.push(t[a]);e.inverseCoeffX=s,e.inverseCoeffY=r}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(t){if(t.type==="point"){const e=Se(this.forwardCoefficients,t,this.polynomialOrder);return new Ve({x:e.x,y:e.y,spatialReference:t.spatialReference})}return ws(this.forwardCoefficients,t,this.polynomialOrder)}inverseTransform(t){if(t.type==="point"){const e=Se(this.inverseCoefficients,t,this.polynomialOrder);return new Ve({x:e.x,y:e.y,spatialReference:t.spatialReference})}return ws(this.inverseCoefficients,t,this.polynomialOrder)}clone(){return new Be({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};c([p({json:{write:!0}})],$.prototype,"polynomialOrder",void 0),c([p()],$.prototype,"forwardCoefficients",void 0),c([Pt("forwardCoefficients",["coeffX","coeffY"])],$.prototype,"readForwardCoefficients",null),c([Nt("forwardCoefficients")],$.prototype,"writeForwardCoefficients",null),c([p({json:{write:!0}})],$.prototype,"inverseCoefficients",null),c([Pt("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],$.prototype,"readInverseCoefficients",null),c([Nt("inverseCoefficients")],$.prototype,"writeInverseCoefficients",null),c([p()],$.prototype,"affectsPixelSize",null),c([K({PolynomialXform:"polynomial"})],$.prototype,"type",void 0),$=Be=c([P("esri.layers.support.rasterTransforms.PolynomialTransform")],$);const jo=$;export{fs as R,Fo as S,ke as a,Bo as c,jo as y};
