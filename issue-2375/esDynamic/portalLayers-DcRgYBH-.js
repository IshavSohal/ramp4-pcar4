import{a0 as w,s as P,q as f,r as p}from"./main-C02UbYD7.js";import{s as S}from"./associatedFeatureServiceUtils-DtddPP6I.js";import{b as T,i as h,a as G}from"./fetchService-zmqvXODx.js";class N{constructor(){this._serviceMetadatas=new Map,this._itemDatas=new Map}async fetchServiceMetadata(a,t){const r=this._serviceMetadatas.get(a);if(r)return r;const s=await T(a,t);return this._serviceMetadatas.set(a,s),s}async fetchItemData(a){const{id:t}=a;if(!t)return null;const{_itemDatas:r}=this;if(r.has(t))return r.get(t);const s=await a.fetchData();return r.set(t,s),s}async fetchCustomParameters(a,t){const r=await this.fetchItemData(a);return r&&typeof r=="object"&&(t?t(r):r.customParameters)||null}}function l(e){const a={id:e.id,name:e.name},t=h(e.type);return t!=="FeatureLayer"&&(a.layerType=t),a}async function b(e,a,t){if(e?.layers==null||e?.tables==null){const r=await t.fetchServiceMetadata(a,{customParameters:i(e)?.customParameters});(e=e||{}).layers=e.layers||r?.layers?.map(l),e.tables=e.tables||r?.tables?.map(l)}return e}function i(e){if(!e)return null;const{layers:a,tables:t}=e;return a?.length?a[0]:t?.length?t[0]:null}function C(e,a){return a==null?null:[...e.layers||[],...e.tables||[]].find(t=>t.id===a)}function F(e,a){return[...e.layers||[],...e.tables||[]].filter(({layerType:t})=>t?t===a:a==="ArcGISFeatureLayer")}function m(e){return(e?.layers?.length??0)+(e?.tables?.length??0)}function D(e){switch(e){case"catalog":return"CatalogLayer";case"feature":return"ArcGISFeatureLayer";case"oriented-imagery":return"OrientedImageryLayer";case"subtype-group":return"SubtypeGroupLayer"}return null}function g(e){switch(e){case"CatalogLayer":return"CatalogLayer";case"OrientedImageryLayer":return"OrientedImageryLayer";case"SubtypeGroupLayer":return"SubtypeGroupLayer"}return"FeatureLayer"}async function v(e,a,t){if(!e?.url)return a??{};if(a??={},!a.layers){const n=await t.fetchServiceMetadata(e.url);a.layers=n.layers?.map(l)}const{serverUrl:r,portalItem:s}=await S(e.url,{sceneLayerItem:e,customParameters:i(a)?.customParameters}).catch(()=>({serverUrl:null,portalItem:null}));if(r==null)return a.tables=[],a;if(!a.tables&&s){const n=await s.fetchData();if(n?.tables)a.tables=n.tables.map(l);else{const c=await t.fetchServiceMetadata(r,{customParameters:i(n)?.customParameters});a.tables=c?.tables?.map(l)}}if(a.tables)for(const n of a.tables)n.url=`${r}/${n.id}`;return a}async function O(e){let{portalItem:a}=e;!a||a instanceof w||(a=new w(a));const t=await _(a);return new t.constructor({portalItem:a,...t.properties})}async function _(e){await e.load();const a=new N;return j(await d(e,a))}async function d(e,a){switch(e.type){case"3DTiles Service":return x();case"CSV":return R();case"Feature Collection":return $(e);case"Feature Service":return V(e,a);case"Feed":return Q();case"GeoJson":return U();case"Group Layer":return X();case"Image Service":return J(e,a);case"KML":return q();case"Knowledge Graph Layer":return z();case"Map Service":return K(e,a);case"Media Layer":return Y();case"Scene Service":return W(e,a);case"Stream Service":return k();case"Vector Tile Service":return A();case"WFS":return E();case"WMS":return B();case"WMTS":return H();default:throw new P("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type})}}async function j(e){const a=e.className,t=G[a];return{constructor:await t(),properties:e.properties}}async function K(e,a){return await Z(e,a)?{className:"TileLayer"}:{className:"MapImageLayer"}}async function V(e,a){const t=await I(e,a);if(typeof t=="object"){const{sourceJSON:r,className:s}=t,n={sourceJSON:r};return t.id!=null&&(n.layerId=t.id),{className:s||"FeatureLayer",properties:n}}return{className:"GroupLayer"}}async function W(e,a){const t=await I(e,a,async()=>{try{if(!e.url)return[];const{serverUrl:r}=await S(e.url,{sceneLayerItem:e});return(await a.fetchServiceMetadata(r))?.tables??[]}catch{return[]}});if(typeof t=="object"){const r={};let s;if(t.id!=null?(r.layerId=t.id,s=`${e.url}/layers/${t.id}`):s=e.url,e.typeKeywords?.length){for(const c of Object.keys(f))if(e.typeKeywords.includes(c))return{className:f[c]}}const n=await a.fetchServiceMetadata(s,{customParameters:await a.fetchCustomParameters(e,c=>i(c)?.customParameters)});return{className:f[n?.layerType]||"SceneLayer",properties:r}}return t===!1&&(await a.fetchServiceMetadata(e.url))?.layerType==="Voxel"?{className:"VoxelLayer"}:{className:"GroupLayer"}}async function $(e){await e.load();const a=p(e,"Map Notes"),t=p(e,"Markup");if(a||t)return{className:"MapNotesLayer"};if(p(e,"Route Layer"))return{className:"RouteLayer"};const r=await e.fetchData();return m(r)===1?{className:"FeatureLayer"}:{className:"GroupLayer"}}async function J(e,a){await e.load();const t=e.typeKeywords?.map(u=>u.toLowerCase())??[];if(t.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(t.includes("tiled imagery"))return{className:"ImageryTileLayer"};const r=await a.fetchItemData(e),s=r?.layerType;if(s==="ArcGISTiledImageServiceLayer")return{className:"ImageryTileLayer"};if(s==="ArcGISImageServiceLayer")return{className:"ImageryLayer"};const n=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)}),c=n.cacheType?.toLowerCase(),y=n.capabilities?.toLowerCase().includes("tilesonly");return c==="map"||y?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}function k(){return{className:"StreamLayer"}}function A(){return{className:"VectorTileLayer"}}function U(){return{className:"GeoJSONLayer"}}function x(){return{className:"IntegratedMesh3DTilesLayer"}}function R(){return{className:"CSVLayer"}}function q(){return{className:"KMLLayer"}}function z(){return{className:"KnowledgeGraphLayer"}}function E(){return{className:"WFSLayer"}}function B(){return{className:"WMSLayer"}}function H(){return{className:"WMTSLayer"}}function Q(){return{className:"StreamLayer"}}function X(){return{className:"GroupLayer"}}function Y(){return{className:"MediaLayer"}}async function Z(e,a){const{tileInfo:t}=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)});return t}async function I(e,a,t){const{url:r,type:s}=e,n=s==="Feature Service";if(!r)return{};if(/\/\d+$/.test(r)){if(n){const u=await a.fetchServiceMetadata(r,{customParameters:await a.fetchCustomParameters(e,o=>i(o)?.customParameters)});return{id:u.id,className:h(u.type),sourceJSON:u}}return{}}await e.load();let c=await a.fetchItemData(e);if(n){const u=await b(c,r,a),o=L(u);if(typeof o=="object"){const M=C(u,o.id);o.className=g(M?.layerType)}return o}if(s==="Scene Service"&&(c=await v(e,c,a)),m(c)>0)return L(c);const y=await a.fetchServiceMetadata(r);return t&&(y.tables=await t()),L(y)}function L(e){return m(e)===1&&{id:i(e)?.id}}const ee=Object.freeze(Object.defineProperty({__proto__:null,fromItem:O,selectLayerClassPath:d},Symbol.toStringTag,{value:"Module"}));export{b as a,D as c,d,N as e,g as i,F as n,v as o,ee as p,i as s,l as t,m as u};
