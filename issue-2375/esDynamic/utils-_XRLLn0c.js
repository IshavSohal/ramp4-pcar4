import{D as E,gh as B}from"./main-C02UbYD7.js";const $=()=>E.getLogger("esri.rest.support.generateRendererUtils");function g(n,e){return Number(n.toFixed(e))}function U(n){const{normalizationTotal:e}=n;return{classBreaks:O(n),normalizationTotal:e}}function O(n){const e=n.definition,{classificationMethod:l,normalizationType:a,definedInterval:i}=e,o=e.breakCount??1,c=[];let u=n.values;if(u.length===0)return[];u=u.sort((s,d)=>s-d);const f=u[0],p=u[u.length-1];if(l==="equal-interval")if(u.length>=o){const s=(p-f)/o;let d=f;for(let r=1;r<o;r++){const t=g(f+r*s,6);c.push({minValue:d,maxValue:t,label:b(d,t,a)}),d=t}c.push({minValue:d,maxValue:p,label:b(d,p,a)})}else u.forEach(s=>{c.push({minValue:s,maxValue:s,label:b(s,s,a)})});else if(l==="natural-breaks"){const s=P(u),d=n.valueFrequency||s.valueFrequency,r=L(s.uniqueValues,d,o);let t=f;for(let m=1;m<o;m++)if(s.uniqueValues.length>m){const h=g(s.uniqueValues[r[m]],6);c.push({minValue:t,maxValue:h,label:b(t,h,a)}),t=h}c.push({minValue:t,maxValue:p,label:b(t,p,a)})}else if(l==="quantile")if(u.length>=o&&f!==p){let s=f,d=Math.ceil(u.length/o),r=0;for(let t=1;t<o;t++){let m=d+r-1;m>u.length&&(m=u.length-1),m<0&&(m=0),c.push({minValue:s,maxValue:u[m],label:b(s,u[m],a)}),s=u[m],r+=d,d=Math.ceil((u.length-r)/(o-t))}c.push({minValue:s,maxValue:p,label:b(s,p,a)})}else{let s=-1;for(let d=0;d<u.length;d++){const r=u[d];r!==s&&(s=r,c.push({minValue:s,maxValue:r,label:b(s,r,a)}),s=r)}}else if(l==="standard-deviation"){const s=_(u),d=Y(u,s);if(d===0)c.push({minValue:u[0],maxValue:u[0],label:b(u[0],u[0],a)});else{const r=A(f,p,o,s,d)*d;let t=0,m=f;for(let V=o;V>=1;V--){const F=g(s-(V-.5)*r,6);c.push({minValue:m,maxValue:F,label:b(m,F,a)}),m=F,t++}let h=g(s+.5*r,6);c.push({minValue:m,maxValue:h,label:b(m,h,a)}),m=h,t++;for(let V=1;V<=o;V++)h=t===2*o?p:g(s+(V+.5)*r,6),c.push({minValue:m,maxValue:h,label:b(m,h,a)}),m=h,t++}}else if(l==="defined-interval"){if(!i)return c;const s=u[0],d=u[u.length-1],r=Math.ceil((d-s)/i);let t=s;for(let m=1;m<r;m++){const h=g(s+m*i,6);c.push({minValue:t,maxValue:h,label:b(t,h,a)}),t=h}c.push({minValue:t,maxValue:d,label:b(t,d,a)})}return c}function b(n,e,l){let a=null;return a=n===e?l&&l==="percent-of-total"?n+"%":n.toString():l&&l==="percent-of-total"?n+"% - "+e+"%":n+" - "+e,a}function P(n){const e=[],l=[];let a=Number.MIN_VALUE,i=1,o=-1;for(let c=0;c<n.length;c++){const u=n[c];u===a?(i++,l[o]=i):u!==null&&(e.push(u),a=u,i=1,l.push(i),o++)}return{uniqueValues:e,valueFrequency:l}}function L(n,e,l){const a=n.length,i=[];l>a&&(l=a);for(let c=0;c<l;c++)i.push(Math.round(c*a/l-1));i.push(a-1);let o=S(i,n,e,l);return G(o.mean,o.sdcm,i,n,e,l)&&(o=S(i,n,e,l)),i}function S(n,e,l,a){let i=[],o=[],c=[],u=0;const f=[],p=[];for(let t=0;t<a;t++){const m=v(t,n,e,l);f.push(m.sbMean),p.push(m.sbSdcm),u+=p[t]}let s,d=u,r=!0;for(;r||u<d;){r=!1,i=[];for(let t=0;t<a;t++)i.push(n[t]);for(let t=0;t<a;t++)for(let m=n[t]+1;m<=n[t+1];m++)if(s=e[m],t>0&&m!==n[t+1]&&Math.abs(s-f[t])>Math.abs(s-f[t-1]))n[t]=m;else if(t<a-1&&n[t]!==m-1&&Math.abs(s-f[t])>Math.abs(s-f[t+1])){n[t+1]=m-1;break}d=u,u=0,o=[],c=[];for(let t=0;t<a;t++){o.push(f[t]),c.push(p[t]);const m=v(t,n,e,l);f[t]=m.sbMean,p[t]=m.sbSdcm,u+=p[t]}}if(u>d){for(let t=0;t<a;t++)n[t]=i[t],f[t]=o[t],p[t]=c[t];u=d}return{mean:f,sdcm:p}}function G(n,e,l,a,i,o){let c=0,u=0,f=0,p=0,s=!0;for(let d=0;d<2&&s;d++){d===0&&(s=!1);for(let r=0;r<o-1;r++)for(;l[r+1]+1!==l[r+2];){l[r+1]=l[r+1]+1;const t=v(r,l,a,i);f=t.sbMean,c=t.sbSdcm;const m=v(r+1,l,a,i);if(p=m.sbMean,u=m.sbSdcm,!(c+u<e[r]+e[r+1])){l[r+1]=l[r+1]-1;break}e[r]=c,e[r+1]=u,n[r]=f,n[r+1]=p,s=!0}for(let r=o-1;r>0;r--)for(;l[r]!==l[r-1]+1;){l[r]=l[r]-1;const t=v(r-1,l,a,i);f=t.sbMean,c=t.sbSdcm;const m=v(r,l,a,i);if(p=m.sbMean,u=m.sbSdcm,!(c+u<e[r-1]+e[r])){l[r]=l[r]+1;break}e[r-1]=c,e[r]=u,n[r-1]=f,n[r]=p,s=!0}}return s}function A(n,e,l,a,i){let o=Math.max(a-n,e-a)/i/l;return o=o>=1?1:o>=.5?.5:.25,o}function _(n){let e=0;for(let l=0;l<n.length;l++)e+=n[l];return e/=n.length,e}function Y(n,e){let l=0;for(let a=0;a<n.length;a++){const i=n[a];l+=(i-e)*(i-e)}return l/=n.length,Math.sqrt(l)}function v(n,e,l,a){let i=0,o=0;for(let f=e[n]+1;f<=e[n+1];f++){const p=a[f];i+=l[f]*p,o+=p}o<=0&&$().warn("Exception in Natural Breaks calculation");const c=i/o;let u=0;for(let f=e[n]+1;f<=e[n+1];f++)u+=a[f]*(l[f]-c)**2;return{sbMean:c,sbSdcm:u}}const Q="<Null>",R="equal-interval",j=1,H=5,J=10,K=/\s*(\+|-)?((\d+(\.\d+)?)|(\.\d+))\s*/gi,W=new Set(["esriFieldTypeDate","esriFieldTypeInteger","esriFieldTypeSmallInteger","esriFieldTypeSingle","esriFieldTypeDouble","esriFieldTypeLong","esriFieldTypeOID","esriFieldTypeBigInteger"]),X=new Set(["esriFieldTypeTimeOnly","esriFieldTypeDateOnly"]),Z=["min","max","avg","stddev","count","sum","variance","nullcount","median"];function x(n){return n==null||typeof n=="string"&&!n?Q:n}function I(n){const e=n.normalizationField!=null||n.normalizationType!=null,l=n.minValue!=null||n.maxValue!=null,a=!!n.sqlExpression&&n.supportsSQLExpression;return!e&&!l&&!a}function nn(n){const e=n.returnDistinct?[...new Set(n.values)]:n.values,l=e.filter(o=>o!=null).sort(),a=l.length,i={count:a,min:l[0],max:l[a-1]};return n.supportsNullCount&&(i.nullcount=e.length-a),n.percentileParams&&(i.median=M(e,n.percentileParams)),i}function N(n){const{values:e,useSampleStdDev:l,supportsNullCount:a}=n;let i=Number.POSITIVE_INFINITY,o=Number.NEGATIVE_INFINITY,c=null,u=null,f=null,p=null,s=0;const d=n.minValue==null?-1/0:n.minValue,r=n.maxValue==null?1/0:n.maxValue;for(const m of e)Number.isFinite(m)?m>=d&&m<=r&&(c=c===null?m:c+m,i=Math.min(i,m),o=Math.max(o,m),s++):typeof m=="string"&&s++;if(s&&c!=null){u=c/s;let m=0;for(const h of e)Number.isFinite(h)&&h>=d&&h<=r&&(m+=(h-u)**2);p=l?s>1?m/(s-1):0:s>0?m/s:0,f=Math.sqrt(p)}else i=null,o=null;const t={avg:u,count:s,max:o,min:i,stddev:f,sum:c,variance:p};return a&&(t.nullcount=e.length-s),n.percentileParams&&(t.median=M(e,n.percentileParams)),t}function M(n,e){const{fieldType:l,value:a,orderBy:i,isDiscrete:o}=e,c=k(l,i==="desc");if((n=[...n].filter(t=>t!=null).sort((t,m)=>c(t,m))).length===0)return null;if(a<=0)return n[0];if(a>=1)return n[n.length-1];const u=(n.length-1)*a,f=Math.floor(u),p=f+1,s=u%1,d=n[f],r=n[p];return p>=n.length||o||typeof d=="string"||typeof r=="string"?d:d*(1-s)+r*s}function k(n,e){if(n){if(W.has(n))return q(e);if(X.has(n))return z(e,!1);if(n==="esriFieldTypeTimestampOffset")return tn(e);const o=z(e,!0);if(n==="esriFieldTypeString")return o;if(n==="esriFieldTypeGUID"||n==="esriFieldTypeGlobalID")return(c,u)=>o(C(c),C(u))}const l=e?1:-1,a=q(e),i=z(e,!0);return(o,c)=>typeof o=="number"&&typeof c=="number"?a(o,c):typeof o=="string"&&typeof c=="string"?i(o,c):l}const T=(n,e)=>n==null?e==null?0:1:e==null?-1:null,y=(n,e)=>n==null?e==null?0:-1:e==null?1:null;function en(n){return n?T:y}const ln=(n,e)=>y(n,e)??(n===e?0:new Date(n).getTime()-new Date(e).getTime()),an=(n,e)=>T(n,e)??(n===e?0:new Date(e).getTime()-new Date(n).getTime());function tn(n){return n?an:ln}const on=(n,e)=>y(n,e)??(n===e?0:n<e?-1:1),un=(n,e)=>T(n,e)??(n===e?0:n<e?1:-1);function z(n,e){if(!e)return n?un:on;const l=en(n);return n?(a,i)=>l(a,i)??((a=a.toUpperCase())>(i=i.toUpperCase())?-1:a<i?1:0):(a,i)=>l(a,i)??((a=a.toUpperCase())<(i=i.toUpperCase())?-1:a>i?1:0)}const rn=(n,e)=>T(n,e)??e-n,sn=(n,e)=>y(n,e)??n-e;function q(n){return n?rn:sn}function C(n){return n.substr(24,12)+n.substr(19,4)+n.substr(16,2)+n.substr(14,2)+n.substr(11,2)+n.substr(9,2)+n.substr(6,2)+n.substr(4,2)+n.substr(2,2)+n.substr(0,2)}function cn(n,e){let l;for(l in n)Z.includes(l)&&(Number.isFinite(n[l])||(n[l]=null));return e&&["avg","stddev","variance"].forEach(a=>{n[a]!=null&&(n[a]=Math.ceil(n[a]??0))}),n}function mn(n){const e={};for(let l of n)(l==null||typeof l=="string"&&l.trim()==="")&&(l=null),e[l]==null?e[l]={count:1,data:l}:e[l].count++;return{count:e}}function D(n){return n?.type!=="coded-value"?[]:n.codedValues.map(e=>e.code)}function fn(n,e,l,a){const i=n.count,o=[];if(l&&e){const c=[],u=D(e[0]);for(const f of u)if(e[1]){const p=D(e[1]);for(const s of p)if(e[2]){const d=D(e[2]);for(const r of d)c.push(`${x(f)}${a}${x(s)}${a}${x(r)}`)}else c.push(`${x(f)}${a}${x(s)}`)}else c.push(f);for(const f of c)i.hasOwnProperty(f)||(i[f]={data:f,count:0})}for(const c in i){const u=i[c];o.push({value:u.data,count:u.count,label:u.label})}return{uniqueValueInfos:o}}function dn(n,e,l,a){let i=null;switch(e){case"log":n!==0&&(i=Math.log(n)*Math.LOG10E);break;case"percent-of-total":Number.isFinite(a)&&a!==0&&(i=n/a*100);break;case"field":Number.isFinite(l)&&l!==0&&(i=n/l);break;case"natural-log":n>0&&(i=Math.log(n));break;case"square-root":n>0&&(i=n**.5)}return i}function w(n,e){const l=hn({field:e.field,normalizationType:e.normalizationType,normalizationField:e.normalizationField,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,breakCount:e.numClasses||H});return n=pn(n,e.minValue,e.maxValue),U({definition:l,values:n,normalizationTotal:e.normalizationTotal})}function pn(n,e,l){const a=e??-1/0,i=l??1/0;return n.filter(o=>Number.isFinite(o)&&o>=a&&o<=i)}function hn(n){const{breakCount:e,field:l,normalizationField:a,normalizationType:i}=n,o=n.classificationMethod||R,c=o==="standard-deviation"?n.standardDeviationInterval||j:void 0;return new B({breakCount:e,classificationField:l,classificationMethod:o,normalizationField:i==="field"?a:void 0,normalizationType:i,standardDeviationInterval:c})}function bn(n,e){let l=n.classBreaks;const a=l.length,i=l[0]?.minValue,o=l[a-1]?.maxValue,c=e==="standard-deviation",u=K;return l=l.map(f=>{const p=f.label,s={minValue:f.minValue,maxValue:f.maxValue,label:p};if(c&&p){const d=p.match(u),r=d?.map(t=>+t.trim())??[];r.length===2?(s.minStdDev=r[0],s.maxStdDev=r[1],r[0]<0&&r[1]>0&&(s.hasAvg=!0)):r.length===1&&(p.includes("<")?(s.minStdDev=null,s.maxStdDev=r[0]):p.includes(">")&&(s.minStdDev=r[0],s.maxStdDev=null))}return s}),{minValue:i,maxValue:o,classBreakInfos:l,normalizationTotal:n.normalizationTotal}}function Vn(n,e){const l=gn(n,e);if(l.min==null&&l.max==null)return{bins:[],minValue:l.min,maxValue:l.max,normalizationTotal:e.normalizationTotal};const a=l.intervals,i=l.min??0,o=l.max??0,c=a.map((u,f)=>({minValue:a[f][0],maxValue:a[f][1],count:0}));for(const u of n)if(u!=null&&u>=i&&u<=o){const f=vn(a,u);f>-1&&c[f].count++}return{bins:c,minValue:i,maxValue:o,normalizationTotal:e.normalizationTotal}}function gn(n,e){const{field:l,classificationMethod:a,standardDeviationInterval:i,normalizationType:o,normalizationField:c,normalizationTotal:u,minValue:f,maxValue:p}=e,s=e.numBins||J;let d=null,r=null,t=null;if((!a||a==="equal-interval")&&!o){if(f!=null&&p!=null)d=f,r=p;else{const m=N({values:n,minValue:f,maxValue:p,useSampleStdDev:!o,supportsNullCount:I({normalizationType:o,normalizationField:c,minValue:f,maxValue:p})});d=m.min??null,r=m.max??null}t=xn(d??0,r??0,s)}else{const{classBreaks:m}=w(n,{field:l,normalizationType:o,normalizationField:c,normalizationTotal:u,classificationMethod:a,standardDeviationInterval:i,minValue:f,maxValue:p,numClasses:s});d=m[0].minValue,r=m[m.length-1].maxValue,t=m.map(h=>[h.minValue,h.maxValue])}return{min:d,max:r,intervals:t}}function vn(n,e){let l=-1;for(let a=n.length-1;a>=0;a--)if(e>=n[a][0]){l=a;break}return l}function xn(n,e,l){const a=(e-n)/l,i=[];let o,c=n;for(let u=1;u<=l;u++)o=c+a,o=Number(o.toFixed(16)),i.push([c,u===l?e:o]),c=o;return i}export{fn as $,dn as B,cn as C,w as E,bn as P,k as T,Vn as U,x as c,nn as d,I as f,mn as k,N as p,M as v};
