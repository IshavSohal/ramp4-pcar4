import{gk as O,$ as k,bv as I,c9 as x,gl as C}from"./main-C02UbYD7.js";import{O as F}from"./quat-WfNBaEox.js";import{e as R}from"./quatf64-DxbQqBtW.js";import{t as A,n as w}from"./vec3f32-BS0cezmI.js";import{a as U,b as B,d as J}from"./PointCloudUniqueValueRenderer-N0xEFxZr.js";import{w as N,l as V,c as T,I as q}from"./I3SBinaryReader-D5E9uYJg.js";import{I as z}from"./orientedBoundingBox-CYqCFc_r.js";function E(u,e,l,n){const{rendererJSON:c,isRGBRenderer:m}=u;let t=null,s=null;if(e&&m)t=e;else if(e&&c?.type==="pointCloudUniqueValueRenderer"){s=U.fromJSON(c);const r=s.colorUniqueValueInfos;t=new Uint8Array(3*n);const i=g(s.fieldTransformType);for(let o=0;o<n;o++){const a=(i?i(e[o]):e[o])+"";for(let f=0;f<r.length;f++)if(r[f].values.includes(a)){t[3*o]=r[f].color.r,t[3*o+1]=r[f].color.g,t[3*o+2]=r[f].color.b;break}}}else if(e&&c?.type==="pointCloudStretchRenderer"){s=B.fromJSON(c);const r=s.stops;t=new Uint8Array(3*n);const i=g(s.fieldTransformType);for(let o=0;o<n;o++){const a=i?i(e[o]):e[o],f=r.length-1;if(a<r[0].value)t[3*o]=r[0].color.r,t[3*o+1]=r[0].color.g,t[3*o+2]=r[0].color.b;else if(a>=r[f].value)t[3*o]=r[f].color.r,t[3*o+1]=r[f].color.g,t[3*o+2]=r[f].color.b;else for(let b=1;b<r.length;b++)if(a<r[b].value){const p=(a-r[b-1].value)/(r[b].value-r[b-1].value);t[3*o]=r[b].color.r*p+r[b-1].color.r*(1-p),t[3*o+1]=r[b].color.g*p+r[b-1].color.g*(1-p),t[3*o+2]=r[b].color.b*p+r[b-1].color.b*(1-p);break}}}else if(e&&c?.type==="pointCloudClassBreaksRenderer"){s=J.fromJSON(c);const r=s.colorClassBreakInfos;t=new Uint8Array(3*n);const i=g(s.fieldTransformType);for(let o=0;o<n;o++){const a=i?i(e[o]):e[o];for(let f=0;f<r.length;f++)if(a>=r[f].minValue&&a<=r[f].maxValue){t[3*o]=r[f].color.r,t[3*o+1]=r[f].color.g,t[3*o+2]=r[f].color.b;break}}}else t=new Uint8Array(3*n).fill(255);if(l&&s?.colorModulation){const r=s.colorModulation.minValue,i=s.colorModulation.maxValue,o=.3;for(let a=0;a<n;a++){const f=l[a],b=f>=i?1:f<=r?o:o+(1-o)*(f-r)/(i-r);t[3*a]=b*t[3*a],t[3*a+1]=b*t[3*a+1],t[3*a+2]=b*t[3*a+2]}}return t}function X(u,e){if(u.encoding==null||u.encoding===""){const l=N(e,u);if(l.vertexAttributes.position==null)return;const n=V(e,l.vertexAttributes.position),c=l.header.fields,m=[c.offsetX,c.offsetY,c.offsetZ],t=[c.scaleX,c.scaleY,c.scaleZ],s=n.length/3,r=new Float64Array(3*s);for(let i=0;i<s;i++)r[3*i]=n[3*i]*t[0]+m[0],r[3*i+1]=n[3*i+1]*t[1]+m[1],r[3*i+2]=n[3*i+2]*t[2]+m[2];return r}if(u.encoding==="lepcc-xyz")return T(e).result}function h(u,e,l){return u?.attributeInfo.useElevation?e?Y(e,l):null:u?.attributeInfo.storageInfo?q(u.attributeInfo.storageInfo,u.buffer,l):null}function Y(u,e){const l=new Float64Array(e);for(let n=0;n<e;n++)l[n]=u[3*n+2];return l}function Z(u,e,l,n,c){const m=u.length/3;let t=0;for(let s=0;s<m;s++){let r=!0;for(let i=0;i<n.length&&r;i++){const{filterJSON:o}=n[i],a=c[i].values[s];switch(o.type){case"pointCloudValueFilter":{const f=o.mode==="exclude";o.values.includes(a)===f&&(r=!1);break}case"pointCloudBitfieldFilter":{const f=M(o.requiredSetBits),b=M(o.requiredClearBits);((a&f)!==f||a&b)&&(r=!1);break}case"pointCloudReturnFilter":{const f=15&a,b=a>>>4&15,p=b>1,S=f===1,v=f===b;let y=!1;for(const d of o.includedReturns)if(d==="last"&&v||d==="firstOfMany"&&S&&p||d==="lastOfMany"&&v&&p||d==="single"&&!p){y=!0;break}y||(r=!1);break}}}r&&(l[t]=s,u[3*t]=u[3*s],u[3*t+1]=u[3*s+1],u[3*t+2]=u[3*s+2],e[3*t]=e[3*s],e[3*t+1]=e[3*s+1],e[3*t+2]=e[3*s+2],t++)}return t}function g(u){switch(u){default:case null:case"none":return e=>e;case"low-four-bit":return e=>15&e;case"high-four-bit":return e=>(240&e)>>4;case"absolute-value":return e=>Math.abs(e);case"modulo-ten":return e=>e%10}}function M(u){let e=0;for(const l of u||[])e|=1<<l;return e}class _{transform(e){const l=this._transform(e),n=[l.points.buffer,l.rgb.buffer];l.pointIdFilterMap!=null&&n.push(l.pointIdFilterMap.buffer);for(const c of l.attributes)"buffer"in c.values&&O(c.values.buffer)&&c.values.buffer!==l.rgb.buffer&&n.push(c.values.buffer);return Promise.resolve({result:l,transferList:n})}_transform(e){const l=X(e.schema,e.geometryBuffer);let n=l.length/3,c=null;const m=new Array,t=h(e.primaryAttributeData,l,n);e.primaryAttributeData!=null&&t&&m.push({attributeInfo:e.primaryAttributeData.attributeInfo,values:t});const s=h(e.modulationAttributeData,l,n);e.modulationAttributeData!=null&&s&&m.push({attributeInfo:e.modulationAttributeData.attributeInfo,values:s});let r=E(e.rendererInfo,t,s,n);if(e.filterInfo&&e.filterInfo.length>0&&e.filterAttributesData!=null){const o=e.filterAttributesData.filter(k).map(a=>{const f=h(a,l,n),b={attributeInfo:a.attributeInfo,values:f};return m.push(b),b});c=new Uint32Array(n),n=Z(l,r,c,e.filterInfo,o)}for(const o of e.userAttributesData){const a=h(o,l,n);m.push({attributeInfo:o.attributeInfo,values:a})}3*n<r.length&&(r=new Uint8Array(r.buffer.slice(0,3*n))),$(l,n,e.elevationOffset);const i=j(l,n,z.fromData(e.obbData),I.fromJSON(e.inSR),I.fromJSON(e.outSR));return{obbData:e.obbData,points:i,rgb:r,attributes:m,pointIdFilterMap:c}}}function j(u,e,l,n,c){if(!x(u,n,0,u,c,0,e))throw new Error("Can't reproject");const m=A(l.center),t=w(),s=w(),r=A(l.halfSize);F(D,l.quaternion);const i=new Float32Array(3*e);for(let o=0;o<e;o++){let a=3*o;t[0]=u[a]-m[0],t[1]=u[a+1]-m[1],t[2]=u[a+2]-m[2],C(s,t,D),r[0]=Math.max(r[0],Math.abs(s[0])),r[1]=Math.max(r[1],Math.abs(s[1])),r[2]=Math.max(r[2],Math.abs(s[2])),i[a++]=t[0],i[a++]=t[1],i[a]=t[2]}return l.halfSize=r,i}function $(u,e,l){if(l!==0)for(let n=0;n<e;n++)u[3*n+2]+=l}const D=R();function G(){return new _}export{G as default};
