import{ac as S,c4 as Q,J as V,jf as _,b2 as A,jg as E,b3 as d,a2 as f,dm as u,eY as X,ak as ss,c3 as es,am as I,e_ as ts,an as os,a1 as as,eN as rs,D as ns}from"./main-C02UbYD7.js";import{h as is,a as cs,i as k,o as x,A as ls}from"./MeshTransform-DdjnyVLO.js";import{r as us,n as ps,a as ms,d as fs,c as D,l as ds,t as hs,u as gs,p as ws}from"./uploadAssetErrors-wSTeCLEb.js";const j={upload:{createFromFiles:.8,loadMesh:.2},uploadAssetBlobs:{prepareAssetItems:.9,uploadAssetItems:.1},uploadConvertibleSource:{uploadEditSource:.5,serviceAssetsToGlb:.5},uploadLocalMesh:{meshToAssetBlob:.5,uploadAssetBlobs:.5}};function h(s,t=o=>{},e){return new ys(s,t,e)}let ys=class{constructor(s,t=o=>{},e){if(this.onProgress=t,this.taskName=e,this._progressMap=new Map,this._startTime=void 0,this._timingsMap=new Map,typeof s=="number"){this._weights={};for(let o=0;o<s;o++){const a=o,r=1/s;this._weights[a]=r,this._progressMap.set(a,0)}}else this._weights=s;this.emitProgress()}emitProgress(){let s=0;for(const[t,e]of this._progressMap.entries())s+=e*this._weights[t];if(s===1&&S("enable-feature:esri-3dofl-upload-timings")){const t=Math.round(performance.now()-(this._startTime??0))/1e3;console.log(`${this.taskName} done in ${t} sec`);for(const[e,o]of this._timingsMap){const a=Math.round(o.end-o.start)/1e3,r=Math.round(a/t*100);console.log(this.taskName??"Task",{stepKey:e,stepTime:a,relativeTime:r})}}this.onProgress(s)}setProgress(s,t){if(this._progressMap.set(s,t),S("enable-feature:esri-3dofl-upload-timings")){const e=performance.now();this._startTime??=e;const o=Q(this._timingsMap,s,()=>({start:e,end:0}));t===1&&(o.end=e)}this.emitProgress()}simulate(s,t){return U(e=>this.setProgress(s,e),t)}makeOnProgress(s){return t=>this.setProgress(s,t)}};function U(s=e=>{},t=Fs){const e=performance.now();s(0);const o=setInterval(()=>{const a=performance.now()-e,r=1-Math.exp(-a/t);s(r)},js);return V(()=>{clearInterval(o),s(1)})}function Ps(s,t=bs){return _(E(s*B/t))}function Ts(s,t=As){return _(E(s*B/t))}const bs=10,As=10,B=8e-6,js=A(50),Fs=A(1e3),O=1e6,C=20*O,Ms=2e9,Ns=3;async function vs({data:s,name:t,description:e},o,a){let r=null;try{const n=d(o,"uploads"),i=d(n,"info"),{data:c}=await f(i,{query:{f:"json"},responseType:"json"});u(a);const l=X(o),m=c.maxUploadFileSize*O,g=l?Ms:m,b=l?Math.min(C,m):C;if(s.size>g)throw new Error("Data too large");const z=d(n,"register"),{data:F}=await f(z,{query:{f:"json",itemName:Ss(t),description:e},responseType:"json",method:"post"});if(u(a),!F.success)throw new Error("Registration failed");const{itemID:H}=F.item;r=d(n,H);const G=d(r,"uploadPart"),M=Math.ceil(s.size/b),w=new Array;for(let p=0;p<M;++p)w.push(s.slice(p*b,Math.min((p+1)*b,s.size)));const y=w.slice().reverse(),N=new Array,J=h(M,a?.onProgress,"uploadItem"),K=async()=>{for(;y.length!==0;){const p=w.length-y.length,P=y.pop(),T=new FormData,Y=J.simulate(p,Ps(P.size));try{T.append("f","json"),T.append("file",P),T.append("partId",`${p}`);const{data:Z}=await f(G,{timeout:0,body:T,responseType:"json",method:"post"});if(u(a),!Z.success)throw new Error("Part upload failed")}finally{Y.remove()}}};for(let p=0;p<Ns&&y.length!==0;++p)N.push(K());await Promise.all(N);const W=d(r,"commit"),{data:v}=await f(W,{query:{f:"json",parts:w.map((p,P)=>P).join(",")},responseType:"json",method:"post"});if(u(a),!v.success)throw new Error("Commit failed");return v.item}catch(n){if(r!=null){const i=d(r,"delete");await f(i,{query:{f:"json"},responseType:"json",method:"post"})}throw n}}function Ss(s){return s.replaceAll("/","_").replaceAll("\\","_")}async function _s(s,t,e){const o=s.length;if(!o)return e?.onProgress?.(1),[];const a=h(o,e?.onProgress,"uploadAssets");return Promise.all(s.map((r,n)=>Es(r,t,{...e,onProgress:a.makeOnProgress(n)})))}async function Es(s,{layer:t,ongoingUploads:e},o){const a=e.get(s);if(a)return a;if(!Ks(t))throw new us;if(Is(s,t))return o?.onProgress?.(1),s;const r=ks(s,t,o);e.set(s,r);try{await r}finally{e.delete(s)}return s}function Is(s,t){const{parsedUrl:e}=t;return e!=null&&s.metadata.externalSources.some(o=>is(o,e))}async function ks(s,t,e){const{metadata:o}=s,{displaySource:a}=o,r=R(a?.source,t),n=!!r,i=o.externalSources.length>0,c=n?xs(r,t,e):i?Ds(s,t,e):Us(s,t,e),l=await c;return u(e),s.addExternalSources([l]),s}async function xs(s,t,e){return{source:await q(s,t,e),original:!0}}async function Ds(s,t,e){const o=$(t),{externalSources:a}=s.metadata,r=Os(a,t);if(!r)throw new ps;const n=h(j.uploadConvertibleSource,e?.onProgress,"uploadConvertibleSource"),i=await q(r,t,{onProgress:n.makeOnProgress("uploadEditSource")});s.addExternalSources([{source:i,original:!0}]);const c=r.reduce((m,{asset:g})=>g instanceof File?m+g.size:m,0),l=n.simulate("serviceAssetsToGlb",Ts(c));try{return{source:await Hs(i,t,o)}}finally{l.remove()}}async function Us(s,t,e){const o=h(j.uploadLocalMesh,e?.onProgress,"uploadLocalMesh"),a=Bs(s,t,{...e,onProgress:o.makeOnProgress("meshToAssetBlob")});return{source:await L([a],t,{...e,onProgress:o.makeOnProgress("uploadAssetBlobs")}),extent:s.extent.clone(),original:!0}}async function Bs(s,t,e){const o=$(t),a=await s.load(e),r=await a.toBinaryGLTF({origin:a.origin,signal:e?.signal,ignoreLocalTransform:!0});return u(e),{blob:new Blob([r],{type:"model/gltf-binary"}),assetName:`${ss()}.glb`,assetType:o}}function Os(s,t){for(const e of s){const o=R(e.source,t);if(o)return o}return null}function R(s,t){if(!s)return null;const{infoFor3D:{supportedFormats:e,editFormats:o}}=t,a=ls(s),r=new Array;let n=!1;for(let i=0;i<a.length;++i){const c=Cs(a[i],e);if(!c)return null;o.includes(c.assetType)&&(n=!0),r.push(c)}return n?r:null}function Cs(s,t){const e=cs(s,t);return e?{asset:s,assetType:e}:null}async function q(s,t,e){return L(s.map(o=>Rs(o,e)),t,e)}async function L(s,t,e){const o=h(j.uploadAssetBlobs,e?.onProgress,"uploadAssetBlobs"),a=await Ls(s,t,{...e,onProgress:o.makeOnProgress("prepareAssetItems")});u(e);const r=a.map(({item:i})=>i),{uploadResults:n}=await $s(r,t,{...e,onProgress:o.makeOnProgress("uploadAssetItems")});return u(e),s.map((i,c)=>zs(a[c],n[c],t))}async function Rs(s,t){const{asset:e,assetType:o}=s;if(e instanceof File)return{blob:e,assetName:e.name,assetType:o};const a=await e.toBlob(t);return u(t),{blob:a,assetName:e.assetName,assetType:o}}async function qs(s,t,e){const{blob:o,assetType:a,assetName:r}=s;let n=null;try{const i=await vs({data:o,name:r},t.url,e);u(e),n={assetType:a,assetUploadId:i.itemID}}catch(i){as(i),Ws().warnOnce(`Service ${t.url} does not support the REST Uploads API.`)}if(!n){const i=await rs(o);if(u(e),!i.isBase64)throw new gs;n={assetType:a,assetData:i.data}}if(!n)throw new ws;return{item:n,assetName:r}}function Ls(s,t,e){const o=h(s.length,e?.onProgress,"prepareAssetItems");return Promise.all(s.map(async(a,r)=>{const n=qs(await a,t,{...e,onProgress:o.makeOnProgress(r)});return u(e),n}))}async function $s(s,t,e){const o=U(e?.onProgress);try{const a=await f(d(t.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(s)},method:"post",responseType:"json"});if(u(e),a.data.uploadResults.length!==s.length)throw new ms(s.length,a.data.uploadResults.length);return a.data}finally{o.remove()}}function zs(s,t,e){const{success:o}=t;if(!o){const{error:l}=t;throw new fs(s.assetName,l)}const{assetHash:a}=t,{assetName:r,item:{assetType:n}}=s,{infoFor3D:{supportedFormats:i}}=e,c=es(n,i);if(!c)throw new D(n);return new k(r,c,[new x(`${e.parsedUrl.path}/assets/${a}`,a)])}async function Hs(s,t,e){const o=s.map(({assetName:l,parts:m})=>({assetName:l,assetHash:m[0].partHash})),a=t.capabilities?.operations.supportsAsyncConvert3D,r={f:"json",assets:JSON.stringify(o),transportType:"esriTransportTypeUrl",targetFormat:e,async:a},n=d(t.parsedUrl.path,"convert3D");let i;try{i=(await(a?Js:Gs)(n,{query:r,responseType:"json",timeout:0})).data}catch{throw new ds}const{supportedFormats:c}=t.infoFor3D;return i.assets.map(l=>{const m=I(l.contentType,c);if(!m)throw new D(m);return new k(l.assetName,l.contentType,[new x(l.assetURL,l.assetHash)])})}function Gs(s,t){return f(s,t)}async function Js(s,t){const e=(await f(s,t)).data.statusUrl;for(;;){const o=(await f(e,{query:{f:"json"},responseType:"json"})).data;switch(o.status){case"Completed":return f(o.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new Error(o.status);case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new Error}await ts(Ys)}}function Ks(s){return!!s.infoFor3D&&!!s.url}function $(s){const{infoFor3D:t}=s,e=I("model/gltf-binary",t.supportedFormats)??os("glb",t.supportedFormats);if(!e)throw new hs;return e}function Ws(){return ns.getLogger("esri.layers.graphics.sources.support.uploadAssets")}const Ys=A(1e3);export{_s as uploadAssets};
