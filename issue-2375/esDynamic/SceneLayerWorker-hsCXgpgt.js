import{f3 as Q,bv as T,cb as W}from"./main-C02UbYD7.js";import{y as X}from"./DoubleArray-tw2hNJ72.js";import{i as Z,a as ee}from"./MeshLocalVertexSpace-CpZ2bRnI.js";import{f as te,l as ne}from"./vec3-BZAykMFH.js";import"./sphere-CS6x3lRQ.js";import"./I3SUtil-CIg1mUER.js";var S,D;(function(e){e[e.None=0]="None",e[e.Int16=1]="Int16",e[e.Int32=2]="Int32"})(S||(S={})),function(e){e[e.Replace=0]="Replace",e[e.Outside=1]="Outside",e[e.Inside=2]="Inside",e[e.Finished=3]="Finished"}(D||(D={}));function re(){return P||(P=new Promise(e=>import("./i3s-9Av-_BIt.js").then(t=>t.i).then(({default:t})=>{const n=t({locateFile:oe,onRuntimeInitialized:()=>e(n)});delete n.then})).catch(e=>{throw e})),P}function oe(e){return Q(`esri/libs/i3s/${e}`)}let P;var j,b,B,k,H;(function(e){e[e.Unmodified=0]="Unmodified",e[e.Culled=1]="Culled",e[e.NotChecked=2]="NotChecked"})(j||(j={})),function(e){e[e.Unmodified=0]="Unmodified",e[e.PotentiallyModified=1]="PotentiallyModified",e[e.Culled=2]="Culled",e[e.Unknown=3]="Unknown",e[e.NotChecked=4]="NotChecked"}(b||(b={})),function(e){e[e.Unknown=0]="Unknown",e[e.Uncached=1]="Uncached",e[e.Cached=2]="Cached"}(B||(B={})),function(e){e[e.None=0]="None",e[e.MaxScreenThreshold=1]="MaxScreenThreshold",e[e.ScreenSpaceRelative=2]="ScreenSpaceRelative",e[e.RemovedFeatureDiameter=3]="RemovedFeatureDiameter",e[e.DistanceRangeFromDefaultCamera=4]="DistanceRangeFromDefaultCamera"}(k||(k={})),function(e){e[e.Hole=0]="Hole",e[e.Leaf=1]="Leaf"}(H||(H={}));async function ie(e){o=await p();const t=[e.geometryBuffer];return{result:J(o,e,t),transferList:t}}async function ae(e){o=await p();const t=[e.geometryBuffer],{geometryBuffer:n}=e,f=n.byteLength,i=o._malloc(f),u=new Uint8Array(o.HEAPU8.buffer,i,f);u.set(new Uint8Array(n));const c=o.dracoDecompressPointCloudData(i,u.byteLength);if(o._free(i),c.error.length>0)throw new Error(`i3s.wasm: ${c.error}`);const l=c.featureIds?.length>0?c.featureIds.slice():null,s=c.positions.slice();return l&&t.push(l.buffer),t.push(s.buffer),{result:{positions:s,featureIds:l},transferList:t}}async function se(e){await p(),z(e);const t={buffer:e.buffer};return{result:t,transferList:[t.buffer]}}async function fe(e){await p(),Y(e)}async function ce(e){o=await p(),o.setLegacySchema(e.context,e.jsonSchema)}async function le(e){const{localMatrix:t,origin:n,positions:f,vertexSpace:i,localMode:u}=e,c=T.fromJSON(e.inSpatialReference),l=T.fromJSON(e.outSpatialReference);let s;const[{projectBuffer:I},{initializeProjection:F}]=await Promise.all([import("./main-C02UbYD7.js").then(a=>a.rv),import("./main-C02UbYD7.js").then(a=>a.rw)]);await F(c,l);const g=[0,0,0];if(!I(n,c,0,g,l,0,1))throw new Error("Failed to project");if(i.type==="georeferenced"&&i.origin==null){if(s=new Float64Array(f.length),!I(f,c,0,s,l,0,s.length/3))throw new Error("Failed to project")}else{const a=i.type==="georeferenced"?Z.fromJSON(i):ee.fromJSON(i),{project:m}=await import("./projection-C_jiNUg8.js"),d=m({positions:f,transform:t?{localMatrix:t}:void 0,vertexSpace:a,inSpatialReference:c,outSpatialReference:l,localMode:u});if(!d)throw new Error("Failed to project");s=X(d)}const w=s.length,[A,E,L]=g;for(let a=0;a<w;a+=3)s[a]-=A,s[a+1]-=E,s[a+2]-=L;return{result:{projected:s,original:f,projectedOrigin:g},transferList:[s.buffer,f.buffer]}}async function ue({normalMatrix:e,normals:t}){const n=new Float32Array(t.length);return te(n,t,e),W(e)&&ne(n,n),{result:{transformed:n,original:t},transferList:[n.buffer,t.buffer]}}function de(e){V(e)}let N,o;function Y(e){if(!o)return;const t=e.modifications,n=o._malloc(8*t.length),f=new Float64Array(o.HEAPU8.buffer,n,t.length);for(let i=0;i<t.length;++i)f[i]=t[i];o.setModifications(e.context,n,t.length,e.isGeodetic),o._free(n)}function J(e,t,n){const{context:f,globalTrafo:i,mbs:u,obbData:c,elevationOffset:l,geometryBuffer:s,geometryDescriptor:I,indexToVertexProjector:F,vertexToRenderProjector:g}=t,w=e._malloc(s.byteLength),A=33,E=e._malloc(A*Float64Array.BYTES_PER_ELEMENT),L=new Uint8Array(e.HEAPU8.buffer,w,s.byteLength);L.set(new Uint8Array(s));const a=new Float64Array(e.HEAPU8.buffer,E,A);U(a,[NaN,NaN,NaN]);let m=a.byteOffset+3*a.BYTES_PER_ELEMENT,d=new Float64Array(a.buffer,m);U(d,i),m+=16*a.BYTES_PER_ELEMENT,d=new Float64Array(a.buffer,m),U(d,u),m+=4*a.BYTES_PER_ELEMENT,c&&(d=new Float64Array(a.buffer,m),U(d,c));const v=I,$={isDraco:!1,isLegacy:!1,color:t.layouts.some(h=>h.some(y=>y.name==="color")),normal:t.needNormals&&t.layouts.some(h=>h.some(y=>y.name==="normalCompressed")),uv0:t.layouts.some(h=>h.some(y=>y.name==="uv0")),uvRegion:t.layouts.some(h=>h.some(y=>y.name==="uvRegion")),featureIndex:v.featureIndex},r=e.process(f,!!t.obbData,w,L.byteLength,v,$,E,l,F,g,t.normalReferenceFrame);if(e._free(E),e._free(w),r.error.length>0)throw new Error(`i3s.wasm: ${r.error}`);if(r.discarded)return null;const M=r.componentOffsets.length>0?r.componentOffsets.slice():null,R=r.featureIds.length>0?r.featureIds.slice():null,G=r.anchorIds.length>0?Array.from(r.anchorIds):null,q=r.anchors.length>0?Array.from(r.anchors):null,O=r.interleavedVertedData.slice().buffer,_=r.indicesType===S.Int16?new Uint16Array(r.indices.buffer,r.indices.byteOffset,r.indices.byteLength/2).slice():new Uint32Array(r.indices.buffer,r.indices.byteOffset,r.indices.byteLength/4).slice(),x=r.positions.slice(),C=r.positionIndicesType===S.Int16?new Uint16Array(r.positionIndices.buffer,r.positionIndices.byteOffset,r.positionIndices.byteLength/2).slice():new Uint32Array(r.positionIndices.buffer,r.positionIndices.byteOffset,r.positionIndices.byteLength/4).slice(),K={layout:t.layouts[0],interleavedVertexData:O,indices:_,hasColors:r.hasColors,hasModifications:r.hasModifications,positionData:{data:x,indices:C}};return R&&n.push(R.buffer),M&&n.push(M.buffer),n.push(O),n.push(_.buffer),n.push(x.buffer),n.push(C.buffer),{componentOffsets:M,featureIds:R,anchorIds:G,anchors:q,transformedGeometry:K,obb:r.obb,globalTrafo:i}}function me(e){return e===0?b.Unmodified:e===1?b.PotentiallyModified:e===2?b.Culled:b.Unknown}function z(e){if(!o)return;const{context:t,buffer:n}=e,f=o._malloc(n.byteLength),i=n.byteLength/Float64Array.BYTES_PER_ELEMENT,u=new Float64Array(o.HEAPU8.buffer,f,i),c=new Float64Array(n);u.set(c),o.filterOBBs(t,f,i),c.set(u),o._free(f)}function V(e){o&&o.destroy(e)===0&&(o=null)}function U(e,t){for(let n=0;n<t.length;++n)e[n]=t[n]}async function he(){o||await p()}function p(){return o?Promise.resolve(o):(N||(N=re().then(e=>(o=e,N=null,o))),N)}const ye={transform:(e,t)=>o&&J(o,e,t),destroy:V};export{de as destroyContext,ae as dracoDecompressPointCloudData,se as filterObbsForModifications,z as filterObbsForModificationsSync,he as initialize,me as interpretObbModificationResults,ie as process,le as project,ce as setLegacySchema,fe as setModifications,Y as setModificationsSync,ye as test,ue as transformNormals};
