{"version":3,"file":"index-KH7vZp0h.js","sources":["../../src/fixtures/northarrow/api/northarrow.ts","../../src/fixtures/northarrow/northarrow.vue","../../src/fixtures/northarrow/index.ts"],"sourcesContent":["import { FixtureInstance } from '@/api';\r\nimport { useNortharrowStore } from '../store';\r\nimport type { NortharrowConfig } from '../store';\r\n\r\nexport class NortharrowAPI extends FixtureInstance {\r\n    /**\r\n     * Parses the north arrow config JSON snippet from the config file and save to the fixture store.\r\n     *\r\n     * @param {NortharrowConfig} [northarrowConfig]\r\n     * @memberof NortharrowAPI\r\n     */\r\n    _parseConfig(northarrowConfig?: NortharrowConfig) {\r\n        const northarrowStore = useNortharrowStore(this.$vApp.$pinia);\r\n\r\n        if (!northarrowConfig) return;\r\n        northarrowStore.arrowIcon = northarrowConfig.arrowIcon;\r\n        northarrowStore.poleIcon = northarrowConfig.poleIcon;\r\n    }\r\n\r\n    get config(): NortharrowConfig {\r\n        return super.config;\r\n    }\r\n}\r\n","<template>\r\n    <div\r\n        class=\"absolute transition-all duration-300 ease-out\"\r\n        :style=\"{\r\n            'transform-origin': `top center`,\r\n            transform: `rotate(${angle}deg)`,\r\n            left: `${arrowLeft}px`,\r\n            visibility: displayArrow ? `visible` : `hidden`\r\n        }\"\r\n        ref=\"el\"\r\n    >\r\n        <span class=\"northarrow\" v-html=\"arrow\"></span>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { computed, inject, onBeforeUnmount, onMounted, reactive, ref } from 'vue';\r\n\r\nimport { useNortharrowStore } from './store';\r\nimport { GlobalEvents, CommonGraphicLayer, InstanceAPI } from '@/api/internal';\r\nimport {\r\n    Graphic,\r\n    Extent,\r\n    LayerType,\r\n    Point,\r\n    type PointIconStyleOptions,\r\n    type PointMarkerStyleOptions,\r\n    PointStyle,\r\n    PointStyleType,\r\n    type RampBasemapConfig,\r\n    type RampMapConfig,\r\n    type RampTileSchemaConfig\r\n} from '@/geo/api';\r\nimport { useConfigStore } from '@/stores/config';\r\nimport flag from './flag.json';\r\nimport { debounce } from 'throttle-debounce';\r\nimport { POLE_MARKER_LAYER_ID } from '.'; // imports from index.ts\r\n\r\nconst configStore = useConfigStore();\r\nconst northarrowStore = useNortharrowStore();\r\nconst iApi = inject('iApi') as InstanceAPI;\r\nconst el = ref();\r\n\r\nconst arrowIcon = computed(() => northarrowStore.arrowIcon);\r\nconst poleIcon = computed(() => northarrowStore.poleIcon);\r\nconst angle = ref(0);\r\nconst arrowLeft = ref(0);\r\nconst displayArrow = ref(false);\r\nconst arrow =\r\n    ref(`<svg xmlns=\"http://www.w3.org/2000/svg\" fit=\"\"  width=\"25\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 24 24\" focusable=\"false\">\r\n                <g id=\"northarrow\" transform=\"translate(-285.24 -142.234)\">\r\n                    <path id=\"path3770-7\" d=\"M305.91 156.648a8.652 8.652 0 0 1-8.654 8.653 8.652 8.652 0 0 1-8.653-8.653 8.653 8.653 0 0 1 8.653-8.653 8.653 8.653 0 0 1 8.653 8.653z\" fill=\"#fff\" stroke=\"#fff\" stroke-width=\".895\"/>\r\n                    <path id=\"path3770\" d=\"M304.982 156.648a7.725 7.725 0 0 1-7.726 7.726 7.725 7.725 0 0 1-7.726-7.726 7.725 7.725 0 0 1 7.726-7.726 7.725 7.725 0 0 1 7.726 7.726z\" fill=\"none\" stroke=\"#6d6d6d\" stroke-width=\".799\"/>\r\n                    <path id=\"path3774\" d=\"M297.256 156.648v-8.525\" fill=\"none\" stroke=\"#000\" stroke-width=\".067\"/>\r\n                    <path d=\"M297.258 143.48l8.793 22.432-8.811-8.812-8.812 8.812z\" id=\"path3778\" fill=\"#fff\" stroke=\"#fff\" stroke-width=\".912\"/>\r\n                    <path d=\"M297.256 144.805l7.726 19.568-7.726-7.726-7.726 7.726z\" id=\"path3780\" fill=\"#d6d6d6\" stroke=\"#000\" stroke-width=\".266\" stroke-linecap=\"square\"/>\r\n                    <path id=\"path6038\" d=\"M297.256 144.666l-7.726 19.568 7.726-7.726\" fill=\"#6d6d6d\" stroke-width=\".296\" stroke-linecap=\"square\"/>\r\n                </g>\r\n            </svg>`);\r\nconst poleMarkerAdded = ref(false);\r\nconst handlers = reactive<Array<string>>([]);\r\n\r\nconst tileSchemas = ref<Array<RampTileSchemaConfig>>([]);\r\nlet basemap: RampBasemapConfig;\r\n\r\nonMounted(() => {\r\n    const mapConfig = configStore.config.map as RampMapConfig;\r\n    tileSchemas.value = mapConfig.tileSchemas;\r\n    if (arrowIcon?.value) {\r\n        arrow.value = `<img width='25' src='${arrowIcon.value}'>`;\r\n    }\r\n    // don't think this condition should be needed but sometimes errors at startup without it\r\n    // TODO could this type of thing be moved to the `initialized()` handler of the FixtureInstance, once implemented?\r\n    if (iApi.geo.map.esriView?.ready) {\r\n        updateNortharrow(iApi.geo.map.getExtent());\r\n    }\r\n\r\n    handlers.push(iApi.event.on(GlobalEvents.MAP_EXTENTCHANGE, debounce(300, updateNortharrow)));\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n    handlers.forEach(h => iApi.event.off(h));\r\n});\r\n\r\nconst updateNortharrow = async (newExtent: Extent) => {\r\n    // determine if there is a hasNorthPole configured\r\n    basemap = configStore.activeBasemapConfig!;\r\n    let hasNorthPole: boolean | undefined;\r\n    for (const tile of tileSchemas.value) {\r\n        if (basemap?.tileSchemaId === tile.id) {\r\n            hasNorthPole = tile?.hasNorthPole;\r\n            break;\r\n        }\r\n    }\r\n\r\n    const innerShell = iApi.$vApp.$el.querySelector('.inner-shell')!;\r\n    const arrowWidth = el.value.querySelector('.northarrow')!.getBoundingClientRect().width;\r\n    const appbarWidth = iApi.$vApp.$el.querySelector('.appbar')?.clientWidth || 0;\r\n    const sr = newExtent.sr;\r\n\r\n    if (hasNorthPole || (typeof hasNorthPole === 'undefined' && !sr.isWebMercator())) {\r\n        // set up northpole if it is configured or if it isn't configured and the map isn't mercator\r\n        // north value (set longitude to be half of Canada extent (141° W, 52° W))\r\n        const pole: Point = new Point('pole', { x: -96, y: 90 });\r\n        const projPole = (await iApi.geo.proj.projectGeometry(sr, pole)) as Point;\r\n        const poleScreenPos = iApi.geo.map.mapPointToScreenPoint(projPole);\r\n        if (poleScreenPos.screenY < 0) {\r\n            // draw arrow if pole not visibile\r\n            displayArrow.value = true;\r\n            // get angle from bottom centre\r\n            const bcScreenPos = {\r\n                screenX: innerShell.clientWidth / 2,\r\n                screenY: innerShell.clientHeight\r\n            };\r\n            angle.value =\r\n                (Math.atan(\r\n                    (poleScreenPos.screenX - bcScreenPos.screenX) / (bcScreenPos.screenY - poleScreenPos.screenY)\r\n                ) *\r\n                    180) /\r\n                Math.PI;\r\n            arrowLeft.value =\r\n                innerShell.clientWidth / 2 +\r\n                innerShell.clientHeight * Math.tan((angle.value * Math.PI) / 180) -\r\n                arrowWidth / 2;\r\n            // make sure arrow is within visible part of map\r\n            arrowLeft.value = Math.max(\r\n                appbarWidth - arrowWidth / 2,\r\n                Math.min(iApi.geo.map.getPixelWidth() - arrowWidth / 2, arrowLeft.value)\r\n            );\r\n        } else {\r\n            // add pole marker if visible\r\n            displayArrow.value = false;\r\n            if (!poleMarkerAdded.value) {\r\n                poleMarkerAdded.value = true;\r\n\r\n                let poleStyleParams;\r\n                if (poleIcon.value) {\r\n                    // fixture config has provided a custom image.\r\n                    // TODO do we need to parameterize the additonal options? offsets? height?\r\n                    //      we would need to expand what our config schema accepts. Right now\r\n                    //      you can only specify an icon image. Maybe we should allow the option\r\n                    //      to pass any Option param object that a PointStyle class can accept.\r\n                    poleStyleParams = {\r\n                        style: PointStyleType.ICON,\r\n                        icon: poleIcon.value,\r\n                        height: 16.5,\r\n                        width: 16.5\r\n                    };\r\n                } else {\r\n                    // grab data from our default in flag.json\r\n                    poleStyleParams = flag;\r\n                }\r\n\r\n                const poleLayer = iApi.geo.layer.createLayer({\r\n                    id: POLE_MARKER_LAYER_ID,\r\n                    layerType: LayerType.GRAPHIC,\r\n                    url: '',\r\n                    cosmetic: true // mark this layer as a cosmetic layer\r\n                });\r\n                iApi.geo.map.addLayer(poleLayer);\r\n\r\n                poleLayer.loadPromise().then(() => {\r\n                    const poleGraphic = new Graphic(projPole, 'northpole');\r\n                    const poleStyle = new PointStyle(\r\n                        poleStyleParams as PointIconStyleOptions | PointMarkerStyleOptions\r\n                    );\r\n                    poleGraphic.style = poleStyle;\r\n\r\n                    (poleLayer as CommonGraphicLayer).addGraphic(poleGraphic);\r\n                });\r\n            }\r\n        }\r\n    } else {\r\n        // don't specify a northpole if it isn't configured or if the map is mercator\r\n        displayArrow.value = true;\r\n        angle.value = 0;\r\n        arrowLeft.value = appbarWidth + (innerShell.clientWidth - appbarWidth - arrowWidth) / 2;\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import { NortharrowAPI } from './api/northarrow';\r\nimport { type NortharrowConfig, useNortharrowStore } from './store/index';\r\nimport NortharrowV from './northarrow.vue';\r\n\r\nexport const POLE_MARKER_LAYER_ID: string = 'RampPoleMarker';\r\n\r\nclass NortharrowFixture extends NortharrowAPI {\r\n    async added() {\r\n        // console.log(`[fixture] ${this.id} added`);\r\n\r\n        this._parseConfig(this.config);\r\n        const unwatch = this.$vApp.$watch(\r\n            () => this.config,\r\n            (value: NortharrowConfig | undefined) => this._parseConfig(value)\r\n        );\r\n\r\n        const { destroy, el } = this.mount(NortharrowV, {\r\n            app: this.$element\r\n        });\r\n        const innerShell = this.$vApp.$el.getElementsByClassName('inner-shell')[0];\r\n        innerShell.appendChild(el.childNodes[0]);\r\n\r\n        // override the removed method here to get access to scope\r\n        this.removed = () => {\r\n            // console.log(`[fixture] ${this.id} removed`);\r\n\r\n            unwatch();\r\n\r\n            // remove the pole marker layer if it exists\r\n            if (this.$iApi.geo.layer.getLayer(POLE_MARKER_LAYER_ID)) {\r\n                this.$iApi.geo.map.removeLayer(POLE_MARKER_LAYER_ID);\r\n            }\r\n\r\n            const northarrowStore = useNortharrowStore(this.$vApp.$pinia);\r\n            northarrowStore.$reset();\r\n\r\n            destroy();\r\n        };\r\n    }\r\n}\r\n\r\nexport default NortharrowFixture;\r\n"],"names":["NortharrowAPI","FixtureInstance","northarrowConfig","northarrowStore","useNortharrowStore","configStore","useConfigStore","iApi","inject","el","ref","arrowIcon","computed","poleIcon","angle","arrowLeft","displayArrow","arrow","poleMarkerAdded","handlers","reactive","tileSchemas","basemap","onMounted","mapConfig","updateNortharrow","GlobalEvents","debounce","onBeforeUnmount","h","newExtent","hasNorthPole","tile","innerShell","arrowWidth","appbarWidth","sr","pole","Point","projPole","poleScreenPos","bcScreenPos","poleStyleParams","PointStyleType","flag","poleLayer","POLE_MARKER_LAYER_ID","LayerType","poleGraphic","Graphic","poleStyle","PointStyle","NortharrowFixture","unwatch","value","destroy","NortharrowV"],"mappings":"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"}