{"version":3,"file":"index-BceE4ST7.js","sources":["../../src/fixtures/mapnav/buttons/divider-nav.vue","../../src/fixtures/mapnav/buttons/zoom-nav.vue","../../src/fixtures/mapnav/mapnav.vue","../../src/fixtures/mapnav/api/mapnav.ts","../../src/fixtures/mapnav/lang/lang.csv?raw","../../src/fixtures/mapnav/index.ts"],"sourcesContent":["<template>\r\n    <span class=\"border-b p-0 self-center w-2/3\"></span>\r\n</template>\r\n\r\n<script setup lang=\"ts\"></script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","<template>\r\n    <div>\r\n        <mapnav-button :onClickFunction=\"zoomIn\" :tooltip=\"t('mapnav.zoomIn')\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"fill-current w-32 h-20\">\r\n                <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" />\r\n                <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n            </svg>\r\n        </mapnav-button>\r\n        <divider-nav></divider-nav>\r\n        <mapnav-button :onClickFunction=\"zoomOut\" :tooltip=\"t('mapnav.zoomOut')\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"fill-current w-32 h-20\">\r\n                <path d=\"M19 13H5v-2h14v2z\" />\r\n                <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n            </svg>\r\n        </mapnav-button>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport type { InstanceAPI } from '@/api';\r\nimport { throttle } from 'throttle-debounce';\r\nimport { inject } from 'vue';\r\nimport { useI18n } from 'vue-i18n';\r\nimport DividerNav from './divider-nav.vue';\r\n\r\nconst { t } = useI18n();\r\nconst iApi = inject('iApi') as InstanceAPI;\r\n\r\nconst zoomIn = throttle(400, true, () => iApi.geo.map.zoomIn());\r\nconst zoomOut = throttle(400, true, () => iApi.geo.map.zoomOut());\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","<template>\r\n    <div class=\"mapnav absolute right-0 bottom-0 pb-36 sm:pb-48 pr-12\">\r\n        <div\r\n            class=\"flex flex-col\"\r\n            v-focus-list\r\n            :content=\"t('panels.controls.items')\"\r\n            v-tippy=\"{\r\n                trigger: 'manual',\r\n                placement: 'top-end',\r\n                touch: false,\r\n                maxWidth: 190\r\n            }\"\r\n            ref=\"el\"\r\n        >\r\n            <zoom-nav-section class=\"mapnav-section bg-white-75 hover:bg-white\"></zoom-nav-section>\r\n            <span class=\"py-1\"></span>\r\n            <div class=\"mapnav-section bg-white-75 hover:bg-white\">\r\n                <template v-for=\"(button, index) in visible\" :key=\"button.id + 'button'\">\r\n                    <component :is=\"button.id + '-nav-button'\"></component>\r\n                    <divider-nav class=\"mapnav-divider\" v-if=\"index !== visible.length - 1\"></divider-nav>\r\n                </template>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { computed, onBeforeUnmount, onMounted, ref } from 'vue';\r\nimport { useMapnavStore } from './store';\r\nimport { useI18n } from 'vue-i18n';\r\nimport ZoomNavSection from './buttons/zoom-nav.vue';\r\nimport DividerNav from './buttons/divider-nav.vue';\r\n\r\nconst mapnavStore = useMapnavStore();\r\nconst { t } = useI18n();\r\nconst el = ref<Element>();\r\n\r\nconst blurEvent = () => {\r\n    (el.value as any)._tippy.hide();\r\n};\r\n\r\nconst keyupEvent = (e: Event) => {\r\n    const evt = e as KeyboardEvent;\r\n    if (evt.key === 'Tab' && el.value?.matches(':focus')) {\r\n        (el.value as any)._tippy.show();\r\n    }\r\n};\r\n\r\nonMounted(() => {\r\n    el.value?.addEventListener('blur', blurEvent);\r\n\r\n    el.value?.addEventListener('keyup', keyupEvent);\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n    el.value?.removeEventListener('blur', blurEvent);\r\n\r\n    el.value?.removeEventListener('keyup', keyupEvent);\r\n});\r\n\r\n/**\r\n * Return a list of mapnav items with registered components (ones that can be rendered right now).\r\n */\r\nconst visible = computed(() => mapnavStore.order.map(id => mapnavStore.items[id]).filter(item => item.componentId));\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.mapnav-section {\r\n    @apply flex-col flex shadow-tm pointer-events-auto;\r\n\r\n    .focused {\r\n        @apply text-black;\r\n    }\r\n}\r\n</style>\r\n","import { FixtureInstance } from '@/api';\r\n\r\nimport type { MapnavFixtureConfig, MapnavItem, MapnavItemSet } from '../store';\r\nimport { useMapnavStore } from '../store';\r\n\r\nexport class MapnavAPI extends FixtureInstance {\r\n    private mapnavStore = useMapnavStore(this.$vApp.$pinia);\r\n    /**\r\n     * Returns `MapnavFixtureConfig` section of the global config file.\r\n     *\r\n     * @readonly\r\n     * @type {MapnavFixtureConfig}\r\n     * @memberof MapnavFixture\r\n     */\r\n    get config(): MapnavFixtureConfig | undefined {\r\n        return super.config;\r\n    }\r\n\r\n    /**\r\n     * Parses the mapnav config JSON snippet from the config file and save resulting objects to the fixture store.\r\n     *\r\n     * @param {MapnavFixtureConfig} [mapnavConfig]\r\n     * @returns\r\n     * @memberof MapnavAPI\r\n     */\r\n    _parseConfig(mapnavConfig?: MapnavFixtureConfig) {\r\n        if (!mapnavConfig) {\r\n            return;\r\n        }\r\n\r\n        const mapnavItems: MapnavItem[] = mapnavConfig.items.map((item: string) => ({\r\n            id: item\r\n        }));\r\n\r\n        // save mapnav items as a collection to the store\r\n        // they are saves as a set for easy by-id access\r\n        this.mapnavStore.items = mapnavItems.reduce<MapnavItemSet>((map: any, item: any) => {\r\n            map[item.id] = item;\r\n            return map;\r\n        }, {});\r\n\r\n        // save an ordered list of item ids to use when rendering components\r\n        this.mapnavStore.order = mapnavItems.map((item: any) => item.id);\r\n\r\n        this._validateItems();\r\n    }\r\n\r\n    /**\r\n     * Checks if components specified as mapnav items are registered or not.\r\n     * Will check the literal id values, and id values with `-nav-button` suffixes appended.\r\n     *\r\n     * @memberof MapnavAPI\r\n     */\r\n    _validateItems() {\r\n        // system mapnav controls that are not tied to a fixture\r\n        const systemControls: string[] = ['geolocator', 'zoom', 'home', 'fullscreen'];\r\n\r\n        // get the ordered list of items and see if any of them are registered\r\n        this.mapnavStore.order.forEach((id: string) => {\r\n            // can't check if the nav button component is registered\r\n            // so we make the assumption that it will always have the `-nav-button` prefix\r\n\r\n            // check if fixture exists, or if control is a system control\r\n            if (this.$iApi.fixture.exists(id) || systemControls.includes(id)) {\r\n                this.mapnavStore.items[id].componentId = `${id}-nav-button`;\r\n            }\r\n        });\r\n    }\r\n}\r\n","export default \"key,enValue,enValid,frValue,frValid\\r\\nmapnav.zoomIn,Zoom In,1,Zoom avant,1\\r\\nmapnav.zoomOut,Zoom Out,1,Zoom arrière,1\\r\\nmapnav.home,Home,1,Accueil,1\\r\\nmapnav.fullscreen,Full Screen,1,Plein Écran,1\\r\\nmapnav.geolocator,Your Location,1,Votre position,1\\r\\nmapnav.geolocator.error.permission,The location request was denied. Please check your browser permission settings.,1,Demande de localisation refusée. Veuillez vérifier les paramètres d'autorisation de votre navigateur.,1\\r\\nmapnav.geolocator.error.internal,Your location could not be found.,1,Votre emplacement n'a pu être trouvé.,1\"","import MapnavV from './mapnav.vue';\r\nimport { MapnavAPI } from './api/mapnav';\r\nimport { useMapnavStore, type MapnavItemSet } from './store';\r\nimport type { MapnavFixtureConfig } from './store';\r\nimport { GlobalEvents } from '@/api';\r\nimport messages from './lang/lang.csv?raw';\r\n\r\nclass MapnavFixture extends MapnavAPI {\r\n    async added() {\r\n        // console.log(`[fixture] ${this.id} added`);\r\n\r\n        // since this has no panel we need to merge in translations ourselves\r\n        // TODO?: see if giving fixtures a nicer way to merge translations w/o panel makes sense\r\n        Object.entries(messages).forEach(value => (<any>this.$iApi.$i18n).mergeLocaleMessage(...value));\r\n\r\n        const { destroy, el } = this.mount(MapnavV, {\r\n            app: this.$element\r\n        });\r\n        const innerShell = this.$vApp.$el.getElementsByClassName('inner-shell')[0];\r\n        innerShell.appendChild(el.childNodes[0]);\r\n\r\n        this._parseConfig(this.config);\r\n        const unwatch = this.$vApp.$watch(\r\n            () => this.config,\r\n            (value: MapnavFixtureConfig | undefined) => this._parseConfig(value)\r\n        );\r\n\r\n        // since components used in appbar can be registered after this point, listen to the global component registration event and re-validate items\r\n        // TODO revist. this seems to be self-contained to the mapnav fixture, so ideally can stay as is and not worry about events api.\r\n        const handler = this.$iApi.event.on(GlobalEvents.COMPONENT, () => {\r\n            this._parseConfig(this.config);\r\n        });\r\n\r\n        // override the removed method here to get access to scope\r\n        this.removed = () => {\r\n            // console.log(`[fixture] ${this.id} removed`);\r\n            unwatch();\r\n            this.$iApi.event.off(handler);\r\n\r\n            // gracefully remove all buttons first (in case anything is watching for button removal)\r\n            const mapnavStore = useMapnavStore(this.$vApp.$pinia);\r\n            const items: MapnavItemSet = { ...mapnavStore.items };\r\n            Object.keys(items).forEach(item => mapnavStore.removeItem(item));\r\n            mapnavStore.$reset();\r\n            destroy();\r\n        };\r\n    }\r\n}\r\n\r\nexport default MapnavFixture;\r\n"],"names":["_sfc_render","_ctx","_cache","t","useI18n","iApi","inject","zoomIn","throttle","zoomOut","mapnavStore","useMapnavStore","el","ref","blurEvent","keyupEvent","e","onMounted","onBeforeUnmount","visible","computed","id","item","MapnavAPI","FixtureInstance","mapnavConfig","mapnavItems","map","systemControls","messages","MapnavFixture","value","destroy","MapnavV","unwatch","handler","GlobalEvents","items"],"mappings":";;AACI,SAAAA,EAAAC,GAAAC,GAAA;;;;;;ACwBE,UAAA,EAAE,GAAAC,EAAE,IAAIC,EAAQ,GAChBC,IAAOC,EAAO,MAAM,GAEpBC,IAASC,EAAS,KAAK,IAAM,MAAMH,EAAK,IAAI,IAAI,QAAQ,GACxDI,IAAUD,EAAS,KAAK,IAAM,MAAMH,EAAK,IAAI,IAAI,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIhE,UAAMK,IAAcC,EAAe,GAC7B,EAAE,GAAAR,EAAE,IAAIC,EAAQ,GAChBQ,IAAKC,EAAa,GAElBC,IAAY,MAAM;AACnB,MAAAF,EAAG,MAAc,OAAO,KAAK;AAAA,IAClC,GAEMG,IAAa,CAACC,MAAa;AAE7B,MADYA,EACJ,QAAQ,SAASJ,EAAG,OAAO,QAAQ,QAAQ,KAC9CA,EAAG,MAAc,OAAO,KAAK;AAAA,IAEtC;AAEA,IAAAK,EAAU,MAAM;AACT,MAAAL,EAAA,OAAO,iBAAiB,QAAQE,CAAS,GAEzCF,EAAA,OAAO,iBAAiB,SAASG,CAAU;AAAA,IAAA,CACjD,GAEDG,EAAgB,MAAM;AACf,MAAAN,EAAA,OAAO,oBAAoB,QAAQE,CAAS,GAE5CF,EAAA,OAAO,oBAAoB,SAASG,CAAU;AAAA,IAAA,CACpD;AAKD,UAAMI,IAAUC,EAAS,MAAMV,EAAY,MAAM,IAAI,CAAMW,MAAAX,EAAY,MAAMW,CAAE,CAAC,EAAE,OAAO,CAAQC,MAAAA,EAAK,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1D3G,MAAMC,UAAkBC,EAAgB;AAAA,EACnC,cAAcb,EAAe,KAAK,MAAM,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQtD,IAAI,SAA0C;AAC1C,WAAO,MAAM;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUjB,aAAac,GAAoC;AAC7C,QAAI,CAACA;AACD;AAGJ,UAAMC,IAA4BD,EAAa,MAAM,IAAI,CAACH,OAAkB;AAAA,MACxE,IAAIA;AAAA,IAAA,EACN;AAIF,SAAK,YAAY,QAAQI,EAAY,OAAsB,CAACC,GAAUL,OAC9DK,EAAAL,EAAK,EAAE,IAAIA,GACRK,IACR,EAAE,GAGL,KAAK,YAAY,QAAQD,EAAY,IAAI,CAACJ,MAAcA,EAAK,EAAE,GAE/D,KAAK,eAAe;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASxB,iBAAiB;AAEb,UAAMM,IAA2B,CAAC,cAAc,QAAQ,QAAQ,YAAY;AAG5E,SAAK,YAAY,MAAM,QAAQ,CAACP,MAAe;AAKvC,OAAA,KAAK,MAAM,QAAQ,OAAOA,CAAE,KAAKO,EAAe,SAASP,CAAE,OAC3D,KAAK,YAAY,MAAMA,CAAE,EAAE,cAAc,GAAGA,CAAE;AAAA,IAClD,CACH;AAAA,EAAA;AAET;ACpEA,MAAAQ,IAAe,EAAC,IAAK,EAAC,iBAAgB,WAAU,kBAAiB,YAAW,eAAc,QAAO,qBAAoB,eAAc,qBAAoB,iBAAgB,sCAAqC,mFAAkF,oCAAmC,oCAAmC,GAAE,IAAK,EAAC,iBAAgB,cAAa,kBAAiB,gBAAe,eAAc,WAAU,qBAAoB,eAAc,qBAAoB,kBAAiB,sCAAqC,yGAAwG,oCAAmC,wCAAuC,EAAC;ACOhuB,MAAMC,UAAsBP,EAAU;AAAA,EAClC,MAAM,QAAQ;AAKH,WAAA,QAAQM,CAAQ,EAAE,QAAQ,CAAAE,MAAe,KAAK,MAAM,MAAO,mBAAmB,GAAGA,CAAK,CAAC;AAE9F,UAAM,EAAE,SAAAC,GAAS,IAAApB,EAAA,IAAO,KAAK,MAAMqB,GAAS;AAAA,MACxC,KAAK,KAAK;AAAA,IAAA,CACb;AAED,IADmB,KAAK,MAAM,IAAI,uBAAuB,aAAa,EAAE,CAAC,EAC9D,YAAYrB,EAAG,WAAW,CAAC,CAAC,GAElC,KAAA,aAAa,KAAK,MAAM;AACvB,UAAAsB,IAAU,KAAK,MAAM;AAAA,MACvB,MAAM,KAAK;AAAA,MACX,CAACH,MAA2C,KAAK,aAAaA,CAAK;AAAA,IACvE,GAIMI,IAAU,KAAK,MAAM,MAAM,GAAGC,EAAa,WAAW,MAAM;AACzD,WAAA,aAAa,KAAK,MAAM;AAAA,IAAA,CAChC;AAGD,SAAK,UAAU,MAAM;AAET,MAAAF,EAAA,GACH,KAAA,MAAM,MAAM,IAAIC,CAAO;AAG5B,YAAMzB,IAAcC,EAAe,KAAK,MAAM,MAAM,GAC9C0B,IAAuB,EAAE,GAAG3B,EAAY,MAAM;AAC7C,aAAA,KAAK2B,CAAK,EAAE,QAAQ,OAAQ3B,EAAY,WAAWY,CAAI,CAAC,GAC/DZ,EAAY,OAAO,GACXsB,EAAA;AAAA,IACZ;AAAA,EAAA;AAER;"}