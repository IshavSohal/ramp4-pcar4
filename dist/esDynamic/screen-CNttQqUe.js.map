{"version":3,"file":"screen-CNttQqUe.js","sources":["../../src/fixtures/metadata/files/xstyle_default_en.xsl?raw","../../src/fixtures/metadata/files/xstyle_default_fr.xsl?raw","../../src/fixtures/metadata/screen.vue"],"sourcesContent":["export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\r\\n<xsl:stylesheet version=\\\"1.0\\\"\\r\\n                xmlns:xsl=\\\"http://www.w3.org/1999/XSL/Transform\\\"\\r\\n                xmlns:gmd=\\\"http://www.isotc211.org/2005/gmd\\\"\\r\\n                xmlns:gco=\\\"http://www.isotc211.org/2005/gco\\\"\\r\\n                xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\r\\n                xmlns:gmdl=\\\"http://www.canada.gc.ca/ns/gmdl\\\"\\r\\n                xmlns:napec=\\\"http://www.ec.gc.ca/data_donnees/standards/schemas/napec\\\"\\r\\n                xmlns:gml=\\\"http://www.opengis.net/gml\\\"\\r\\n                xmlns:geonet=\\\"http://www.fao.org/geonetwork\\\"\\r\\n                xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\"\\r\\n                xsi:schemaLocation=\\\"http://www.ec.gc.ca/data_donnees/standards/schemas/napec/schema.xsd\\\">\\r\\n\\r\\n  <xsl:param name=\\\"catalogue_url\\\" />\\r\\n  <xsl:decimal-format NaN=\\\"\\\"/>\\r\\n\\r\\n  <xsl:template match=\\\"/\\\">\\r\\n\\r\\n    <div class=\\\"metadata-view\\\">\\r\\n\\r\\n      <xsl:if test=\\\"//gmd:abstract/gco:CharacterString/text() != ''\\\">\\r\\n        <h5 class=\\\"text-xl font-bold mb-3\\\">{{metadata.xslt.Abstract}}</h5>\\r\\n        <p>\\r\\n          <xsl:value-of select=\\\"//gmd:abstract/gco:CharacterString/text()\\\" />\\r\\n        </p>\\r\\n      </xsl:if>\\r\\n\\r\\n      <xsl:comment>\\r\\n        <h5 class=\\\"text-xl font-bold mb-3\\\">{{metadata.xslt.Scope}}</h5>\\r\\n        <p>{{metadata.xslt.hereBeScope}}</p>\\r\\n      </xsl:comment>\\r\\n\\r\\n      <xsl:if test=\\\"//gml:TimePeriod//* != ''\\\">\\r\\n        <h5 class=\\\"text-xl font-bold mb-3\\\">{{metadata.xslt.timePeriod}}</h5>\\r\\n        <p>\\r\\n          <xsl:value-of select=\\\"//gml:TimePeriod//gml:beginPosition\\\" />\\r\\n          <xsl:if test=\\\"//gml:TimePeriod//gml:beginPosition/text() != '' and //gml:TimePeriod//gml:endPosition/text() != ''\\\">\\r\\n            -\\r\\n          </xsl:if>\\r\\n          <xsl:value-of select=\\\"//gml:TimePeriod//gml:endPosition\\\" />\\r\\n        </p>\\r\\n      </xsl:if>\\r\\n\\r\\n      <xsl:comment>\\r\\n        <xsl:if test=\\\"//gmd:supplementalInformation/gco:CharacterString/text() != ''\\\">\\r\\n          <h5 class=\\\"text-xl font-bold mb-3\\\">{{metadata.xslt.supplementalData}}</h5>\\r\\n          <p>\\r\\n            <xsl:value-of select=\\\"//gmd:supplementalInformation/gco:CharacterString/text()\\\" />\\r\\n          </p>\\r\\n        </xsl:if>\\r\\n      </xsl:comment>\\r\\n\\r\\n      <xsl:if test=\\\"//gmd:pointOfContact//gmd:individualName/* != '' \\r\\n              or //gmd:pointOfContact//gmd:organisationName/gco:CharacterString/text() != ''\\r\\n              or //gmd:pointOfContact//gmd:positionName/gco:CharacterString/text() != ''\\r\\n              or //gmd:pointOfContact//gmd:electronicMailAddress/* != ''\\r\\n              or //gmd:pointOfContact//gmd:role/gmd:CI_RoleCode/@codeListValue != ''\\\">\\r\\n        <h5 class=\\\"text-xl font-bold mb-3\\\">{{metadata.xslt.contactInfo}}</h5>\\r\\n        <p>\\r\\n          <xsl:value-of select=\\\"//gmd:pointOfContact//gmd:individualName\\\" />\\r\\n        </p>\\r\\n        <p>\\r\\n          <xsl:value-of select=\\\"//gmd:pointOfContact//gmd:organisationName/gco:CharacterString/text()\\\" />\\r\\n        </p>\\r\\n        <p>\\r\\n          <xsl:value-of select=\\\"//gmd:pointOfContact//gmd:positionName/gco:CharacterString/text()\\\" />\\r\\n        </p>\\r\\n        <p>\\r\\n          <a href=\\\"mailto:{//gmd:pointOfContact//gmd:electronicMailAddress/gco:CharacterString/text()}?Subject={//gmd:identificationInfo//gmd:title/gco:CharacterString/text()}\\\">\\r\\n            <xsl:value-of select=\\\"//gmd:pointOfContact//gmd:electronicMailAddress\\\" />\\r\\n          </a>\\r\\n        </p>\\r\\n        <p>\\r\\n          <xsl:variable name=\\\"roleCode\\\" >\\r\\n            <xsl:value-of select=\\\"concat(substring(//gmd:pointOfContact//gmd:role/gmd:CI_RoleCode/@codeListValue,1,1),\\r\\n                        substring(//gmd:pointOfContact//gmd:role/gmd:CI_RoleCode/@codeListValue, 2))\\\" />\\r\\n          </xsl:variable>\\r\\n\\r\\n          <xsl:choose>\\r\\n            <xsl:when test=\\\"$roleCode = 'resourceProvider'\\\">{{metadata.xslt.resourceProvider}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'custodian'\\\">{{metadata.xslt.custodian}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'owner'\\\">{{metadata.xslt.owner}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'user'\\\">{{metadata.xslt.user}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'distributor'\\\">{{metadata.xslt.distributor}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'originator'\\\">{{metadata.xslt.originator}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'pointOfContact'\\\">{{metadata.xslt.pointOfContact}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'principalInvestigator'\\\">{{metadata.xslt.principalInvestigator}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'processor'\\\">{{metadata.xslt.processor}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'publisher'\\\">{{metadata.xslt.publisher}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'author'\\\">{{metadata.xslt.author}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'collaborator'\\\">{{metadata.xslt.collaborator}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'editor'\\\">{{metadata.xslt.editor}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'mediator'\\\">{{metadata.xslt.mediator}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'rightsHolder'\\\">{{metadata.xslt.rightsHolder}}</xsl:when>\\r\\n          </xsl:choose>\\r\\n        </p>\\r\\n      </xsl:if>\\r\\n\\r\\n      <xsl:if test=\\\"$catalogue_url != ''\\\">\\r\\n        <h5 class=\\\"text-xl font-bold mb-3\\\">{{metadata.xslt.cataloguePage}}</h5>\\r\\n        <p>\\r\\n          <a href=\\\"{$catalogue_url}\\\"\\r\\n             rel=\\\"external\\\" target=\\\"_blank\\\" class=\\\"ui-link\\\">\\r\\n            {{metadata.xslt.metadata}}\\r\\n          </a>\\r\\n        </p>\\r\\n      </xsl:if>\\r\\n    </div>\\r\\n  </xsl:template>\\r\\n</xsl:stylesheet>\\r\\n\"","export default \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\r\\n<xsl:stylesheet version=\\\"1.0\\\"\\r\\n                xmlns:xsl=\\\"http://www.w3.org/1999/XSL/Transform\\\"\\r\\n                xmlns:gmd=\\\"http://www.isotc211.org/2005/gmd\\\"\\r\\n                xmlns:gco=\\\"http://www.isotc211.org/2005/gco\\\"\\r\\n                xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\r\\n                xmlns:gmdl=\\\"http://www.canada.gc.ca/ns/gmdl\\\"\\r\\n                xmlns:napec=\\\"http://www.ec.gc.ca/data_donnees/standards/schemas/napec\\\"\\r\\n                xmlns:gml=\\\"http://www.opengis.net/gml\\\"\\r\\n                xmlns:geonet=\\\"http://www.fao.org/geonetwork\\\"\\r\\n                xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\"\\r\\n                xsi:schemaLocation=\\\"http://www.ec.gc.ca/data_donnees/standards/schemas/napec/schema.xsd\\\">\\r\\n\\r\\n  <xsl:param name=\\\"catalogue_url\\\" />\\r\\n  <xsl:decimal-format NaN=\\\"\\\"/>\\r\\n\\r\\n  <xsl:template match=\\\"/\\\">\\r\\n\\r\\n    <div class=\\\"metadata-view\\\">\\r\\n\\r\\n      <xsl:if test=\\\"//gmd:abstract//gmd:LocalisedCharacterString[@locale='#fra']/text() != ''\\\">\\r\\n        <h5 class=\\\"text-xl font-bold mb-3\\\">{{metadata.xslt.Abstract}}</h5>\\r\\n        <p>\\r\\n          <xsl:value-of select=\\\"//gmd:abstract//gmd:LocalisedCharacterString[@locale='#fra']/text()\\\" />\\r\\n        </p>\\r\\n      </xsl:if>\\r\\n\\r\\n      <xsl:comment>\\r\\n        <h5 class=\\\"text-xl font-bold mb-3\\\">{{metadata.xslt.Scope}}</h5>\\r\\n        <p>{{metadata.xslt.hereBeScope}}</p>\\r\\n      </xsl:comment>\\r\\n\\r\\n      <xsl:if test=\\\"//gml:TimePeriod//* != ''\\\">\\r\\n        <h5 class=\\\"text-xl font-bold mb-3\\\">{{metadata.xslt.timePeriod}}</h5>\\r\\n        <p>\\r\\n          <xsl:value-of select=\\\"//gml:TimePeriod//gml:beginPosition\\\" />\\r\\n          <xsl:if test=\\\"//gml:TimePeriod//gml:beginPosition/text() != '' and //gml:TimePeriod//gml:endPosition/text() != ''\\\">\\r\\n            -\\r\\n          </xsl:if>\\r\\n          <xsl:value-of select=\\\"//gml:TimePeriod//gml:endPosition\\\" />\\r\\n        </p>\\r\\n      </xsl:if>\\r\\n\\r\\n      <xsl:comment>\\r\\n        <xsl:if test=\\\"//gmd:supplementalInformation//gmd:LocalisedCharacterString[@locale='#fra']/text() != ''\\\">\\r\\n          <h5 class=\\\"text-xl font-bold mb-3\\\">{{metadata.xslt.supplementalData}}</h5>\\r\\n          <p>\\r\\n            <xsl:value-of select=\\\"//gmd:supplementalInformation//gmd:LocalisedCharacterString[@locale='#fra']/text()\\\" />\\r\\n          </p>\\r\\n        </xsl:if>\\r\\n      </xsl:comment>\\r\\n\\r\\n      <xsl:if test=\\\"//gmd:pointOfContact//gmd:individualName/* != '' \\r\\n              or //gmd:pointOfContact//gmd:organisationName//gmd:LocalisedCharacterString[@locale='#fra']/text() != ''\\r\\n              or //gmd:pointOfContact//gmd:positionName//gmd:LocalisedCharacterString[@locale='#fra']/text() != ''\\r\\n              or //gmd:pointOfContact//gmd:electronicMailAddress/* != ''\\r\\n              or //gmd:pointOfContact//gmd:role/gmd:CI_RoleCode/@codeListValue != ''\\\">\\r\\n        <h5 class=\\\"text-xl font-bold mb-3\\\">{{metadata.xslt.contactInfo}}</h5>\\r\\n        <p>\\r\\n          <xsl:value-of select=\\\"//gmd:pointOfContact//gmd:individualName\\\" />\\r\\n        </p>\\r\\n        <p>\\r\\n          <xsl:value-of select=\\\"//gmd:pointOfContact//gmd:organisationName//gmd:LocalisedCharacterString[@locale='#fra']/text()\\\" />\\r\\n        </p>\\r\\n        <p>\\r\\n          <xsl:value-of select=\\\"//gmd:pointOfContact//gmd:positionName//gmd:LocalisedCharacterString[@locale='#fra']/text()\\\" />\\r\\n        </p>\\r\\n        <p>\\r\\n          <a href=\\\"mailto:{//gmd:pointOfContact//gmd:electronicMailAddress//gmd:LocalisedCharacterString[@locale='#fra']/text()}?Subject={//gmd:identificationInfo//gmd:title//gmd:LocalisedCharacterString[@locale='#fra']/text()}\\\">\\r\\n            <xsl:value-of select=\\\"//gmd:pointOfContact//gmd:electronicMailAddress\\\" />\\r\\n          </a>\\r\\n        </p>\\r\\n        <p>\\r\\n          <xsl:variable name=\\\"roleCode\\\" >\\r\\n            <xsl:value-of select=\\\"concat(substring(//gmd:pointOfContact//gmd:role/gmd:CI_RoleCode/@codeListValue,1,1),\\r\\n                        substring(//gmd:pointOfContact//gmd:role/gmd:CI_RoleCode/@codeListValue, 2))\\\" />\\r\\n          </xsl:variable>\\r\\n\\r\\n          <xsl:choose>\\r\\n            <xsl:when test=\\\"$roleCode = 'resourceProvider'\\\">{{metadata.xslt.resourceProvider}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'custodian'\\\">{{metadata.xslt.custodian}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'owner'\\\">{{metadata.xslt.owner}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'user'\\\">{{metadata.xslt.user}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'distributor'\\\">{{metadata.xslt.distributor}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'originator'\\\">{{metadata.xslt.originator}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'pointOfContact'\\\">{{metadata.xslt.pointOfContact}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'principalInvestigator'\\\">{{metadata.xslt.principalInvestigator}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'processor'\\\">{{metadata.xslt.processor}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'publisher'\\\">{{metadata.xslt.publisher}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'author'\\\">{{metadata.xslt.author}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'collaborator'\\\">{{metadata.xslt.collaborator}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'editor'\\\">{{metadata.xslt.editor}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'mediator'\\\">{{metadata.xslt.mediator}}</xsl:when>\\r\\n            <xsl:when test=\\\"$roleCode = 'rightsHolder'\\\">{{metadata.xslt.rightsHolder}}</xsl:when>\\r\\n          </xsl:choose>\\r\\n        </p>\\r\\n      </xsl:if>\\r\\n\\r\\n      <xsl:if test=\\\"$catalogue_url != ''\\\">\\r\\n        <h5 class=\\\"text-xl font-bold mb-3\\\">{{metadata.xslt.cataloguePage}}</h5>\\r\\n        <p>\\r\\n          <a href=\\\"{$catalogue_url}\\\"\\r\\n             rel=\\\"external\\\" target=\\\"_blank\\\" class=\\\"ui-link\\\">\\r\\n            {{metadata.xslt.metadata}}\\r\\n          </a>\\r\\n        </p>\\r\\n      </xsl:if>\\r\\n    </div>\\r\\n  </xsl:template>\\r\\n</xsl:stylesheet>\\r\\n\"","<template>\r\n    <panel-screen :panel=\"panel\" ref=\"el\">\r\n        <template #header> {{ t('metadata.title') }}: {{ payload.layerName }} </template>\r\n\r\n        <template #content>\r\n            <div v-if=\"layerExists\">\r\n                <div class=\"flex justify-center\">\r\n                    <!-- Loading Screen -->\r\n                    <div v-if=\"status == 'loading'\" class=\"flex flex-col justify-center text-center\">\r\n                        {{ t('metadata.loading') }}\r\n                    </div>\r\n\r\n                    <!-- Found Screen, XML -->\r\n                    <div\r\n                        v-else-if=\"payload.type === 'xml' && status == 'success'\"\r\n                        v-html=\"response\"\r\n                        class=\"flex flex-col justify-center xml-content\"\r\n                    ></div>\r\n\r\n                    <!-- Found Screen, HTML -->\r\n                    <div\r\n                        v-else-if=\"(payload.type === 'html' || payload.type === 'md') && status == 'success'\"\r\n                        v-html=\"response\"\r\n                        class=\"flex flex-col justify-center max-w-full metadata-view\"\r\n                    ></div>\r\n\r\n                    <!-- Error Screen -->\r\n                    <div v-else class=\"flex flex-col justify-center text-center\">\r\n                        <img src=\"https://i.imgur.com/fA5EqV6.png\" />\r\n\r\n                        <span class=\"text-xl mt-20\">\r\n                            {{ t('metadata.error') }}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div v-else class=\"p-5\">\r\n                <span>{{ t('metadata.label.no.layer') }}</span>\r\n            </div>\r\n        </template>\r\n    </panel-screen>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { computed, inject, onBeforeUnmount, onMounted, reactive, ref, watch, type PropType } from 'vue';\r\nimport { GlobalEvents, InstanceAPI, LayerInstance, type PanelInstance } from '@/api';\r\nimport type { MetadataCache, MetadataPayload, MetadataResult } from './store';\r\nimport { useMetadataStore } from './store';\r\nimport { marked } from 'marked';\r\n\r\nimport XSLT_en from './files/xstyle_default_en.xsl?raw';\r\nimport XSLT_fr from './files/xstyle_default_fr.xsl?raw';\r\nimport { useI18n } from 'vue-i18n';\r\n\r\nconst metadataStore = useMetadataStore();\r\nconst { t } = useI18n();\r\nconst iApi = inject('iApi') as InstanceAPI;\r\nconst el = ref();\r\n\r\nconst props = defineProps({\r\n    panel: {\r\n        type: Object as PropType<PanelInstance>,\r\n        required: true\r\n    },\r\n    payload: {\r\n        type: Object as PropType<MetadataPayload>,\r\n        required: true\r\n    }\r\n});\r\n\r\nconst status = computed(() => metadataStore.status);\r\nconst response = computed(() => metadataStore.response);\r\nconst layerExists = ref(false); // tracks whether the layer still exists\r\nconst cache = reactive<MetadataCache>({});\r\nconst handlers = reactive<Array<string>>([]);\r\nconst watchers = reactive<Array<Function>>([]);\r\n\r\nonMounted(() => {\r\n    loadMetadata();\r\n\r\n    // if layer is removed with its metadata open close this panel\r\n    handlers.push(\r\n        iApi.event.on(GlobalEvents.LAYER_REMOVE, (removedLayer: LayerInstance) => {\r\n            if (props.payload.layer?.uid === removedLayer.uid) {\r\n                props.panel.close();\r\n            }\r\n        })\r\n    );\r\n\r\n    // watch for when metadata is opened for a new layer\r\n    watchers.push(\r\n        watch(\r\n            () => props.payload.layer!.uid,\r\n            (newUid: string, oldUid: string) => {\r\n                // update with new content\r\n                if (newUid !== oldUid) {\r\n                    loadMetadata();\r\n                }\r\n            }\r\n        )\r\n    );\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n    // remove all event handlers and watchers\r\n    handlers.forEach(handler => iApi.event.off(handler));\r\n    watchers.forEach(unwatch => unwatch());\r\n});\r\n\r\nconst loadMetadata = () => {\r\n    // check if layer has not been removed\r\n    layerExists.value = props.payload.layer !== undefined && !props.payload.layer!.isRemoved;\r\n\r\n    if (props.payload.type === 'xml') {\r\n        loadFromURL(props.payload.url, []).then((r: any) => {\r\n            metadataStore.status = 'success';\r\n\r\n            // Append the content to the panel.\r\n            if (r !== null) {\r\n                const textContainer = document.createElement('div');\r\n\r\n                textContainer.appendChild(stringToFragment(`${r.firstElementChild.outerHTML}`));\r\n\r\n                if (props.payload.catalogueUrl || props.payload.url) {\r\n                    textContainer.appendChild(\r\n                        stringToFragment(`<h5 class=\"text-xl font-bold mb-3\">${t('metadata.xslt.metadata')}</h5>`)\r\n                    );\r\n                }\r\n\r\n                // Append catalogue URL link if it exists\r\n                if (props.payload.catalogueUrl) {\r\n                    textContainer.appendChild(\r\n                        stringToFragment(\r\n                            `<p><a style=\"color: blue;\" href=\"${props.payload.catalogueUrl}\" target=\"_blank\">${t(\r\n                                'metadata.xslt.cataloguePage'\r\n                            )}</a></p>`\r\n                        )\r\n                    );\r\n                }\r\n\r\n                // Append raw XML link\r\n                textContainer.appendChild(\r\n                    stringToFragment(\r\n                        `<p><a style=\"color: blue;\" href=\"${props.payload.url}\" target=\"_blank\">${t(\r\n                            'metadata.xslt.metadataPage'\r\n                        )}</a> (xml)</p>`\r\n                    )\r\n                );\r\n\r\n                //@ts-ignore\r\n                metadataStore.response = textContainer.outerHTML;\r\n            }\r\n        });\r\n    } else if (props.payload.type === 'html') {\r\n        requestContent(props.payload.url).then(r => {\r\n            metadataStore.status = r.status;\r\n            //@ts-ignore\r\n            metadataStore.response = r.response;\r\n        });\r\n    } else if (props.payload.type === 'md') {\r\n        requestContent(props.payload.url).then(r => {\r\n            metadataStore.status = r.status;\r\n            //@ts-ignore\r\n            metadataStore.response = marked(r.response);\r\n        });\r\n    }\r\n};\r\n\r\n/**\r\n * Applies an XSLT to XML, XML is provided but the XSLT is stored in a string constant.\r\n *\r\n * @method loadFromURL\r\n * @param {String} xmlUrl Location of the xml file\r\n * @param {Array} params an array which never seems to be set and is never used\r\n * @return {Promise} a promise resolving with an HTML fragment\r\n */\r\nconst loadFromURL = (xmlUrl: string, params: any[]) => {\r\n    let XSLT = iApi.language === 'en' ? XSLT_en : XSLT_fr;\r\n\r\n    // Translate headers.\r\n    XSLT = XSLT.replace(/\\{\\{([\\w.]+)\\}\\}/g, (_: string, tag: string) => t(tag));\r\n\r\n    if (!cache[xmlUrl]) {\r\n        return requestContent(xmlUrl).then(xmlData => {\r\n            cache[xmlUrl] = xmlData.response;\r\n            return applyXSLT(cache[xmlUrl], XSLT, params);\r\n        });\r\n    } else {\r\n        return Promise.resolve(applyXSLT(cache[xmlUrl], XSLT, params));\r\n    }\r\n};\r\n\r\n/**\r\n * Transform XML using XSLT\r\n * @function applyXSLT\r\n * @private\r\n * @param {string} xmlString text data of the XML document\r\n * @param {string} xslString text data of the XSL document\r\n * in IE)}\r\n * @param {Array} params a list of paramters to apply to the transform\r\n * @return {object} transformed document\r\n */\r\nconst applyXSLT = (xmlString: string, xslString: string, params: any[]) => {\r\n    let output = null;\r\n\r\n    if (window.XSLTProcessor) {\r\n        const xsltProc = new window.XSLTProcessor();\r\n        const parser = new DOMParser();\r\n\r\n        const xmlDoc = parser.parseFromString(xmlString, 'text/xml');\r\n        const xslDoc = parser.parseFromString(xslString, 'text/xml');\r\n        xsltProc.importStylesheet(xslDoc);\r\n        // [patched from ECDMP] Add parameters to xsl document (setParameter = Chrome/FF/Others)\r\n        if (params) {\r\n            params.forEach(p => xsltProc.setParameter('', p.key, p.value || ''));\r\n        }\r\n        output = xsltProc.transformToFragment(xmlDoc, document);\r\n    }\r\n    // ('-')7 IE retirement (╯°□°）╯︵ ┻━┻\r\n\r\n    return output;\r\n};\r\n\r\n/**\r\n * Sends a GET request to the provided URL. Returns a promise containing information received from the webpage.\r\n * */\r\nconst requestContent = (url: string): Promise<MetadataResult> => {\r\n    return new Promise(resolve => {\r\n        const xobj = new XMLHttpRequest();\r\n        xobj.open('GET', url, true);\r\n        xobj.responseType = 'text';\r\n        xobj.onload = () => {\r\n            if (xobj.status === 200) {\r\n                resolve({ status: 'success', response: xobj.response });\r\n            } else {\r\n                resolve({\r\n                    status: 'error',\r\n                    response: 'Could not load results from remote service.'\r\n                });\r\n            }\r\n        };\r\n        xobj.onerror = () => {\r\n            resolve({\r\n                status: 'error',\r\n                response: 'Could not load results from remote service.'\r\n            });\r\n        };\r\n        xobj.send();\r\n    });\r\n};\r\n\r\n// Helper function to convert a HTML string to an HTMLElement.\r\nfunction stringToFragment(string: string) {\r\n    const temp = document.createElement('div');\r\n    temp.innerHTML = string;\r\n    return temp;\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.xml-content {\r\n    font-size: 14px;\r\n}\r\n\r\n// Tailwind removes basic heading styling, so add some here\r\n// to make the markdown presentable.\r\n.metadata-view {\r\n    a {\r\n        color: blue;\r\n    }\r\n\r\n    h1 {\r\n        font-size: 1.5em;\r\n        margin: 0.1em 0px;\r\n        font-weight: bold;\r\n    }\r\n    h2 {\r\n        font-size: 1.2em;\r\n        margin: 0.1em 0px;\r\n        font-weight: bold;\r\n    }\r\n\r\n    h3 {\r\n        font-size: 1em;\r\n        margin: 0.1em 0px;\r\n        font-weight: bold;\r\n    }\r\n\r\n    p {\r\n        margin: 0.2em 0px;\r\n    }\r\n}\r\n</style>\r\n"],"names":["XSLT_en","XSLT_fr","metadataStore","useMetadataStore","t","useI18n","iApi","inject","el","ref","props","__props","status","computed","response","layerExists","cache","reactive","handlers","watchers","onMounted","loadMetadata","GlobalEvents","removedLayer","watch","newUid","oldUid","onBeforeUnmount","handler","unwatch","loadFromURL","r","textContainer","stringToFragment","requestContent","marked","xmlUrl","params","XSLT","_","tag","applyXSLT","xmlData","xmlString","xslString","output","xsltProc","parser","xmlDoc","xslDoc","p","url","resolve","xobj","string","temp"],"mappings":"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"}