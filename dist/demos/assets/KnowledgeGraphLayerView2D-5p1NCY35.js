import{V as p,cZ as m,q as o,u as e,c_ as s,C as a}from"./main-BG78vFMl.js";import{j as n,y as l}from"./LayerView-Y8ibO4HR.js";import"./preload-helper-ExcqyqRp.js";import"./Container-Di1OFRnf.js";import"./MapView-hnAjElPk.js";import"./Cyclical-D6RX8bNR.js";import"./CollectionFlattener-CU10TIcD.js";import"./workers-YBeNk_d5.js";import"./projection-CKyvxIuM.js";import"./projectBuffer-7be0D7fQ.js";import"./TileInfo-DEFifjLF.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-tPX8Riw6.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-b3bEhnMI.js";import"./signal-BDjXhUjV.js";import"./Map-I7iJg6TV.js";import"./Basemap-DgiKihdH.js";import"./loadAll-ErQQwNH3.js";import"./PortalItem-C4xiich8.js";import"./writeUtils-C4KOkQaU.js";import"./compilerUtils-COqPErKo.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-Bm_nogKf.js";import"./common-DQOJ18NT.js";import"./TablesMixin-BTji6ZRE.js";import"./Layer-B_qy3WNu.js";import"./TimeExtent-DnFuWn4d.js";import"./GraphicsCollection-DC0Pd-Y7.js";import"./HeightModelInfo-D9dJ3loL.js";import"./ReactiveMap-Brk-5DB4.js";import"./Query-DTjak0cE.js";import"./Field-D_DeNmsA.js";import"./fieldType-CgH90gAx.js";import"./arcgisLayerUrl-Sozs2StG.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-B7N_6o8F.js";import"./vec2-DGVIkCvT.js";import"./Tile-DHe_cnwT.js";import"./TileKey-rG4KrRRg.js";import"./QueueProcessor-BpAFoDqT.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-h8tbFGuP.js";import"./normalizeUtilsCommon-DbUjbnJZ.js";import"./utils-DlqTBH7p.js";import"./utils-B1WAPbl4.js";import"./mat3-XZDRtl20.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-CsG4SvOk.js";import"./vec32-BqNkGBZ-.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-BmhfWxFM.js";import"./imageUtils-BBsxx4Zy.js";import"./capabilities-A2uoe7dc.js";import"./Version-puM6ANeB.js";import"./ColorBackground-Dc_qQy-G.js";import"./parser-DDgwWLIN.js";import"./layerViewUtils-BsX0RmI8.js";let r=class extends n(l){constructor(t){super(t),this.layerViews=new p}set layerViews(t){this._set("layerViews",m(t,this._get("layerViews")))}get updatingProgress(){return this.layerViews.length===0?1:this.layerViews.reduce((t,i)=>t+i.updatingProgress,0)/this.layerViews.length}attach(){this._updateStageChildren(),this.addAttachHandles(this.layerViews.on("after-changes",()=>this._updateStageChildren()))}detach(){this.container.removeAllChildren()}update(t){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((t,i)=>this.container.addChildAt(t.container,i))}};o([e({cast:s})],r.prototype,"layerViews",null),o([e({readOnly:!0})],r.prototype,"updatingProgress",null),r=o([a("esri.views.2d.layers.KnowledgeGraphLayerView2D")],r);const wt=r;export{wt as default};
