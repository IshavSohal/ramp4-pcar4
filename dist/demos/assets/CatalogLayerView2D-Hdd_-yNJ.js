import{q as r,u as o,C as a,V as m}from"./main-BG78vFMl.js";import{j as s,y as n}from"./LayerView-Y8ibO4HR.js";import"./preload-helper-ExcqyqRp.js";import"./Container-Di1OFRnf.js";import"./MapView-hnAjElPk.js";import"./Cyclical-D6RX8bNR.js";import"./CollectionFlattener-CU10TIcD.js";import"./workers-YBeNk_d5.js";import"./projection-CKyvxIuM.js";import"./projectBuffer-7be0D7fQ.js";import"./TileInfo-DEFifjLF.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-tPX8Riw6.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-b3bEhnMI.js";import"./signal-BDjXhUjV.js";import"./Map-I7iJg6TV.js";import"./Basemap-DgiKihdH.js";import"./loadAll-ErQQwNH3.js";import"./PortalItem-C4xiich8.js";import"./writeUtils-C4KOkQaU.js";import"./compilerUtils-COqPErKo.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-Bm_nogKf.js";import"./common-DQOJ18NT.js";import"./TablesMixin-BTji6ZRE.js";import"./Layer-B_qy3WNu.js";import"./TimeExtent-DnFuWn4d.js";import"./GraphicsCollection-DC0Pd-Y7.js";import"./HeightModelInfo-D9dJ3loL.js";import"./ReactiveMap-Brk-5DB4.js";import"./Query-DTjak0cE.js";import"./Field-D_DeNmsA.js";import"./fieldType-CgH90gAx.js";import"./arcgisLayerUrl-Sozs2StG.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-B7N_6o8F.js";import"./vec2-DGVIkCvT.js";import"./Tile-DHe_cnwT.js";import"./TileKey-rG4KrRRg.js";import"./QueueProcessor-BpAFoDqT.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-h8tbFGuP.js";import"./normalizeUtilsCommon-DbUjbnJZ.js";import"./utils-DlqTBH7p.js";import"./utils-B1WAPbl4.js";import"./mat3-XZDRtl20.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-CsG4SvOk.js";import"./vec32-BqNkGBZ-.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-BmhfWxFM.js";import"./imageUtils-BBsxx4Zy.js";import"./capabilities-A2uoe7dc.js";import"./Version-puM6ANeB.js";import"./ColorBackground-Dc_qQy-G.js";import"./parser-DDgwWLIN.js";import"./layerViewUtils-BsX0RmI8.js";const l=e=>{let t=class extends e{constructor(...i){super(...i),this.layerViews=new m}get dynamicGroupLayerView(){return this.layerViews.find(i=>i.layer===this.layer?.dynamicGroupLayer)}get footprintLayerView(){return this.layerViews.find(i=>i.layer===this.layer?.footprintLayer)}isUpdating(){return!this.dynamicGroupLayerView||!this.footprintLayerView||this.dynamicGroupLayerView.updating||this.footprintLayerView.updating}};return r([o()],t.prototype,"layer",void 0),r([o()],t.prototype,"layerViews",void 0),r([o({readOnly:!0})],t.prototype,"dynamicGroupLayerView",null),r([o({readOnly:!0})],t.prototype,"footprintLayerView",null),t=r([a("esri.views.layers.CatalogLayerView")],t),t};let p=class extends l(s(n)){constructor(){super(...arguments),this.layerViews=new m}update(e){}viewChange(){}moveEnd(){}attach(){this.addAttachHandles([this._updatingHandles.addOnCollectionChange(()=>this.layerViews,()=>this._updateStageChildren(),{initial:!0})])}detach(){this.container.removeAllChildren()}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((e,t)=>this.container.addChildAt(e.container,t))}};r([o()],p.prototype,"layerViews",void 0),p=r([a("esri.views.2d.layers.CatalogLayerView2D")],p);const Vt=p;export{Vt as default};
