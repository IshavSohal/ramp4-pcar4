import{V as m,cU as u,bT as h,aJ as g,aG as c,q as n,u as d,C as _}from"./main-BG78vFMl.js";import{n as w}from"./CollectionFlattener-CU10TIcD.js";import{c as y,y as f,C as k,T as M,j as V,S as F,w as G}from"./Stop-BGMQU3kN.js";import{j as I,y as v}from"./LayerView-Y8ibO4HR.js";import{t as H}from"./GraphicContainer-C9PQgfIK.js";import{F as C}from"./GraphicsView2D-Ba_zXj5_.js";import"./preload-helper-ExcqyqRp.js";import"./Container-Di1OFRnf.js";import"./MapView-hnAjElPk.js";import"./Cyclical-D6RX8bNR.js";import"./workers-YBeNk_d5.js";import"./projection-CKyvxIuM.js";import"./projectBuffer-7be0D7fQ.js";import"./TileInfo-DEFifjLF.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-tPX8Riw6.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-b3bEhnMI.js";import"./signal-BDjXhUjV.js";import"./Map-I7iJg6TV.js";import"./Basemap-DgiKihdH.js";import"./loadAll-ErQQwNH3.js";import"./PortalItem-C4xiich8.js";import"./writeUtils-C4KOkQaU.js";import"./compilerUtils-COqPErKo.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-Bm_nogKf.js";import"./common-DQOJ18NT.js";import"./TablesMixin-BTji6ZRE.js";import"./Layer-B_qy3WNu.js";import"./TimeExtent-DnFuWn4d.js";import"./GraphicsCollection-DC0Pd-Y7.js";import"./HeightModelInfo-D9dJ3loL.js";import"./ReactiveMap-Brk-5DB4.js";import"./Query-DTjak0cE.js";import"./Field-D_DeNmsA.js";import"./fieldType-CgH90gAx.js";import"./arcgisLayerUrl-Sozs2StG.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-B7N_6o8F.js";import"./vec2-DGVIkCvT.js";import"./Tile-DHe_cnwT.js";import"./TileKey-rG4KrRRg.js";import"./QueueProcessor-BpAFoDqT.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-h8tbFGuP.js";import"./normalizeUtilsCommon-DbUjbnJZ.js";import"./utils-DlqTBH7p.js";import"./utils-B1WAPbl4.js";import"./mat3-XZDRtl20.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-CsG4SvOk.js";import"./vec32-BqNkGBZ-.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-BmhfWxFM.js";import"./imageUtils-BBsxx4Zy.js";import"./capabilities-A2uoe7dc.js";import"./Version-puM6ANeB.js";import"./ColorBackground-Dc_qQy-G.js";import"./parser-DDgwWLIN.js";import"./layerViewUtils-BsX0RmI8.js";import"./AGraphicContainer-DwWq-BlL.js";import"./TechniqueInstance-BRz0oB5v.js";import"./UpdateTracking2D-DRI8rr9E.js";import"./BidiEngine-DNnuvc1i.js";import"./OptimizedFeature-CIptWNVu.js";import"./GeometryUtils-CH6chf1I.js";import"./enums-CmIX1y88.js";import"./utils-QWndGYJy.js";import"./Rect-CUzevAry.js";import"./LabelMetric-DRzil95y.js";import"./Program-CwbT6lL-.js";import"./BufferObject-BMyNaWf5.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BindType-BmZEZMMh.js";import"./Util-C4yWdKVH.js";import"./vec42-CKs01hkn.js";import"./vec4f64-CMoMXWBi.js";import"./TileContainer-CsYAbwzn.js";import"./WGLContainer-CKT-s2Uc.js";import"./VertexArrayObject-CF9mhzJk.js";import"./ProgramTemplate-C0qoVCWh.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BTt_i6C1.js";import"./config-MDUrh2eL.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-DmOTYy_I.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-BjqnMxq0.js";import"./constants-F8oTIn7N.js";import"./lengthUtils-Dxu9h9CE.js";import"./FieldsIndex-BPHQc7Vg.js";import"./UnknownTimeZone-DPq-HP09.js";import"./OverrideHelper-DXelbwwb.js";import"./colorUtils-2gSyG7Xy.js";import"./quantizationUtils-BWmWr3HR.js";import"./AttributeStore-D3_vFiy1.js";import"./TimeOnly-CT6iTtPi.js";import"./timeSupport-B4_LU4tB.js";import"./queryUtils-C6dXUBei.js";import"./json-Wa8cmqdu.js";import"./labelUtils-4_DTMUWm.js";import"./diffUtils-hpK4jfiu.js";import"./normalizeUtilsSync-DI8K6-KQ.js";const U=["route-info","direction-line","direction-point","polygon-barrier","polyline-barrier","point-barrier","stop"],s={graphic:null,property:null,oldValue:null,newValue:null};function l(t){return t instanceof y||t instanceof f||t instanceof k||t instanceof M||t instanceof V||t instanceof F||t instanceof G}function b(t){return m.isCollection(t)&&t.length&&l(t.at(0))}function $(t){return Array.isArray(t)&&t.length>0&&l(t[0])}const T=new Set(["default"]);let p=class extends I(v){constructor(){super(...arguments),this._graphics=new m,this._highlightIds=new Map,this._networkFeatureMap=new Map,this._networkGraphicMap=new Map}get _routeItems(){return new w({getCollections:()=>this.layer==null||this.destroyed?[]:[this.layer.routeInfo!=null?new m([this.layer.routeInfo]):null,this.layer.directionLines,this.layer.directionPoints,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.pointBarriers,this.layer.stops]})}initialize(){this._updatingHandles.addOnCollectionChange(()=>this._routeItems,t=>this._routeItemsChanged(t),u)}destroy(){this._networkFeatureMap.clear(),this._networkGraphicMap.clear(),this._graphics.removeAll(),this._get("_routeItems")?.destroy()}attach(){this._createGraphicsView()}detach(){this._destroyGraphicsView()}async fetchPopupFeaturesAtLocation(t,i){return this._graphicsView.hitTest(t).filter(({popupTemplate:r})=>!!r)}highlight(t){let i;i=l(t)?[this._getNetworkFeatureUid(t)]:$(t)?t.map(e=>this._getNetworkFeatureUid(e)):b(t)?t.map(e=>this._getNetworkFeatureUid(e)).toArray():[t.uid];const r=i.filter(h);return r.length?(this._addHighlight(r),g(()=>this._removeHighlight(r))):g()}async hitTest(t,i){if(this.suspended)return null;const r=this._graphicsView.hitTest(t).filter(h).map(o=>this._networkGraphicMap.get(o));if(!r.length)return null;const{layer:e}=this;return r.reverse().map(o=>({type:"route",layer:e,mapPoint:t,networkFeature:o}))}isUpdating(){return this._graphicsView.updating}moveEnd(){}update(t){this._graphicsView.processUpdate(t)}viewChange(){this._graphicsView.viewChange()}_addHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const r=this._highlightIds.get(i);this._highlightIds.set(i,r+1)}else this._highlightIds.set(i,1);this._updateHighlight()}_createGraphic(t){const i=t.toGraphic();return i.layer=this.layer,i.sourceLayer=this.layer,i}_createGraphicsView(){const t=this.view,i=()=>this.requestUpdate(),r=new H(t.featuresTilingScheme);this._graphicsView=new C({container:r,graphics:this._graphics,requestUpdateCallback:i,view:t}),this.container.addChild(r),this._updateHighlight()}_destroyGraphicsView(){this.container.removeChild(this._graphicsView.container),this._graphicsView.destroy()}_getDrawOrder(t){const i=this._networkGraphicMap.get(t);return U.indexOf(i.type)}_getNetworkFeatureUid(t){return this._networkFeatureMap.has(t)?this._networkFeatureMap.get(t).uid:null}_removeHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const r=this._highlightIds.get(i)-1;r===0?this._highlightIds.delete(i):this._highlightIds.set(i,r)}this._updateHighlight()}_routeItemsChanged(t){if(t.removed.length){this._graphics.removeMany(t.removed.map(i=>{const r=this._networkFeatureMap.get(i);return this._networkFeatureMap.delete(i),this._networkGraphicMap.delete(r),r}));for(const i of t.removed)this.removeHandles(i)}if(t.added.length){this._graphics.addMany(t.added.map(i=>{const r=this._createGraphic(i);return r.symbol==null?null:(this._networkFeatureMap.set(i,r),this._networkGraphicMap.set(r,i),r)}).filter(h));for(const i of t.added)this.addHandles([c(()=>i.geometry,(r,e)=>{this._updateGraphic(i,"geometry",r,e)}),c(()=>i.symbol,(r,e)=>{this._updateGraphic(i,"symbol",r,e)})],i);this._graphics.sort((i,r)=>this._getDrawOrder(i)-this._getDrawOrder(r))}}_updateGraphic(t,i,r,e){if(!this._networkFeatureMap.has(t)){const a=this._createGraphic(t);return this._networkFeatureMap.set(t,a),this._networkGraphicMap.set(a,t),void this._graphics.add(a)}const o=this._networkFeatureMap.get(t);o[i]=r,s.graphic=o,s.property=i,s.oldValue=e,s.newValue=r,this._graphicsView.graphicUpdateHandler(s)}_updateHighlight(){const t=Array.from(this._highlightIds.keys()),i=this._getHighlightBits(T);this._graphicsView.setHighlight(t.map(r=>({objectId:r,highlightFlags:i})))}};n([d()],p.prototype,"_graphics",void 0),n([d()],p.prototype,"_routeItems",null),p=n([_("esri.views.2d.layers.RouteLayerView2D")],p);const $i=p;export{$i as default};
