import{V as p,cZ as m,q as o,u as e,c_ as s,C as a}from"./main-DsA2enjY.js";import{j as n,y as l}from"./LayerView-BH0TJyex.js";import"./preload-helper-ExcqyqRp.js";import"./Container-seQIKspx.js";import"./MapView-D0Yj62sn.js";import"./Cyclical-DCPXowd-.js";import"./CollectionFlattener-DDBA36tK.js";import"./workers-pANfPD-l.js";import"./projection-DmCB8svq.js";import"./projectBuffer-Bqn_06nr.js";import"./TileInfo-CYf3XLuO.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-BsjCeexc.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-Dwrlevzz.js";import"./signal-s0YSOrGn.js";import"./Map-DQbrG2_j.js";import"./Basemap-hA2G76g9.js";import"./loadAll-DX3by7Z-.js";import"./PortalItem-DN2hTldC.js";import"./writeUtils-Bfdrg-r6.js";import"./compilerUtils-DRnuTGcx.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-BCcSZTC2.js";import"./common-DQOJ18NT.js";import"./TablesMixin-BOfO7s8w.js";import"./Layer-CMTaaxot.js";import"./TimeExtent-DSM08QbF.js";import"./GraphicsCollection-Cycsq6He.js";import"./HeightModelInfo-Cwcpnlu6.js";import"./ReactiveMap-8JExvKgD.js";import"./Query-DibebXVL.js";import"./Field-IF8JdYvK.js";import"./fieldType-BiQqnDhz.js";import"./arcgisLayerUrl-9T1R0FHg.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-B7N_6o8F.js";import"./vec2-DGVIkCvT.js";import"./Tile-CbSKTmWz.js";import"./TileKey-BklVf7vT.js";import"./QueueProcessor-DIo2ZlkZ.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-f_jWnhFl.js";import"./normalizeUtilsCommon-BvSfGz81.js";import"./utils-CaV_sEtR.js";import"./utils-C76Fg_gV.js";import"./mat3-XZDRtl20.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-Hv_QAiKQ.js";import"./vec32-mrfOxCTu.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-txOakhX8.js";import"./imageUtils-D0ms7Eur.js";import"./capabilities-A2uoe7dc.js";import"./Version-DUTMO_Mn.js";import"./ColorBackground-CA5_vUjO.js";import"./parser-m2yMUaJF.js";import"./layerViewUtils-DgQUe20Y.js";let r=class extends n(l){constructor(t){super(t),this.layerViews=new p}set layerViews(t){this._set("layerViews",m(t,this._get("layerViews")))}get updatingProgress(){return this.layerViews.length===0?1:this.layerViews.reduce((t,i)=>t+i.updatingProgress,0)/this.layerViews.length}attach(){this._updateStageChildren(),this.addAttachHandles(this.layerViews.on("after-changes",()=>this._updateStageChildren()))}detach(){this.container.removeAllChildren()}update(t){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((t,i)=>this.container.addChildAt(t.container,i))}};o([e({cast:s})],r.prototype,"layerViews",null),o([e({readOnly:!0})],r.prototype,"updatingProgress",null),r=o([a("esri.views.2d.layers.KnowledgeGraphLayerView2D")],r);const wt=r;export{wt as default};
