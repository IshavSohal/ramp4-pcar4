import{q as r,u as o,C as a,V as m}from"./main-u5Gw4CBf.js";import{j as s,y as n}from"./LayerView-CruMsXqc.js";import"./preload-helper-ExcqyqRp.js";import"./Container-CkHuruyk.js";import"./MapView-nMNZpzw7.js";import"./Cyclical-BAA_9Vlm.js";import"./CollectionFlattener-BB-y6FmZ.js";import"./workers-BfrrvDgk.js";import"./projection-B38hAux-.js";import"./projectBuffer-PP0xoOlR.js";import"./TileInfo-BFpShsDu.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-DjEBNhIE.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-D5ilQwC3.js";import"./signal-B9o-FbV6.js";import"./Map-BGcjnOVe.js";import"./Basemap-CW6SH-h1.js";import"./loadAll-CtnTXYtL.js";import"./PortalItem-BE1u-tRV.js";import"./writeUtils-Vgz8tNpz.js";import"./compilerUtils-rJxbTFUG.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-BT_oNlpC.js";import"./common-DQOJ18NT.js";import"./TablesMixin-BFHVdc_q.js";import"./Layer-DUAaxjxM.js";import"./TimeExtent-DaZkvWiV.js";import"./GraphicsCollection-BV4GL2xh.js";import"./HeightModelInfo-DzLAjhUs.js";import"./ReactiveMap-D9w7pbh-.js";import"./Query-Bi5BlfVx.js";import"./Field-Dpvh2D-a.js";import"./fieldType-CAla-QNP.js";import"./arcgisLayerUrl-DxP6-OWp.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-B7N_6o8F.js";import"./vec2-DGVIkCvT.js";import"./Tile-7fDMnNp0.js";import"./TileKey-CmXJ3Z0H.js";import"./QueueProcessor-C1-3G4WY.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-f0BWULWR.js";import"./normalizeUtilsCommon-CTlqd_sP.js";import"./utils-ChBLs1lF.js";import"./utils-C1qa8_vV.js";import"./mat3-XZDRtl20.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-oqWytPlC.js";import"./vec32-Br-JPIAa.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-BreCJJ6G.js";import"./imageUtils-D3SmnVul.js";import"./capabilities-A2uoe7dc.js";import"./Version-bYJNupb-.js";import"./ColorBackground-BLrIxpOQ.js";import"./parser-D1fzlXvG.js";import"./layerViewUtils-BbSAa7RE.js";const l=e=>{let t=class extends e{constructor(...i){super(...i),this.layerViews=new m}get dynamicGroupLayerView(){return this.layerViews.find(i=>i.layer===this.layer?.dynamicGroupLayer)}get footprintLayerView(){return this.layerViews.find(i=>i.layer===this.layer?.footprintLayer)}isUpdating(){return!this.dynamicGroupLayerView||!this.footprintLayerView||this.dynamicGroupLayerView.updating||this.footprintLayerView.updating}};return r([o()],t.prototype,"layer",void 0),r([o()],t.prototype,"layerViews",void 0),r([o({readOnly:!0})],t.prototype,"dynamicGroupLayerView",null),r([o({readOnly:!0})],t.prototype,"footprintLayerView",null),t=r([a("esri.views.layers.CatalogLayerView")],t),t};let p=class extends l(s(n)){constructor(){super(...arguments),this.layerViews=new m}update(e){}viewChange(){}moveEnd(){}attach(){this.addAttachHandles([this._updatingHandles.addOnCollectionChange(()=>this.layerViews,()=>this._updateStageChildren(),{initial:!0})])}detach(){this.container.removeAllChildren()}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((e,t)=>this.container.addChildAt(e.container,t))}};r([o()],p.prototype,"layerViews",void 0),p=r([a("esri.views.2d.layers.CatalogLayerView2D")],p);const Vt=p;export{Vt as default};
