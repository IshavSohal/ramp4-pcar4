import{q as r,u as o,C as a,V as m}from"./main-DGujzD_M.js";import{j as s,y as n}from"./LayerView-BLx7A75F.js";import"./preload-helper-ExcqyqRp.js";import"./Container-B7KeRWb_.js";import"./MapView-DARv2gDj.js";import"./Cyclical-BupTIqAx.js";import"./CollectionFlattener-vhnnMfZ4.js";import"./workers-BIOy1VE1.js";import"./projection-BGqxbXnR.js";import"./projectBuffer-B4NK-jf0.js";import"./TileInfo-B67koBzm.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-Ce-yO9vJ.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-C6OlSYRw.js";import"./signal-Z4Na1r4w.js";import"./Map-1MTMdPcV.js";import"./Basemap-Cy5wiM9V.js";import"./loadAll-BaNc8nTu.js";import"./PortalItem-DHiHRhyv.js";import"./writeUtils-tK8TS2bV.js";import"./compilerUtils-C8FmnaHa.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-DgACfE_X.js";import"./common-DQOJ18NT.js";import"./TablesMixin-BXJ1nQ2s.js";import"./Layer-nFIr2Jg1.js";import"./TimeExtent-CdSFtPnV.js";import"./GraphicsCollection-D-_NNL20.js";import"./HeightModelInfo-Bfuk_p8P.js";import"./ReactiveMap-DtyTuzMb.js";import"./Query-DuIz807x.js";import"./Field-BdQvaWYn.js";import"./fieldType-fX_9gVm6.js";import"./arcgisLayerUrl-A1BgX7Ym.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-B7N_6o8F.js";import"./vec2-DGVIkCvT.js";import"./Tile-D7Gf052u.js";import"./TileKey-BCA5_pRW.js";import"./QueueProcessor-DdUC0NAG.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-CmMvyowT.js";import"./normalizeUtilsCommon-Cq_Ghmzj.js";import"./utils-BkOd4WMh.js";import"./utils-D7YQg5xY.js";import"./mat3-XZDRtl20.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-DMfhUsGb.js";import"./vec32-JNeZPdN5.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-9SomPLIb.js";import"./imageUtils-C9L2zprn.js";import"./capabilities-A2uoe7dc.js";import"./Version-95CyOaLc.js";import"./ColorBackground-CMT5zMqu.js";import"./parser-BKHAlMdZ.js";import"./layerViewUtils-CmuxlYxc.js";const l=e=>{let t=class extends e{constructor(...i){super(...i),this.layerViews=new m}get dynamicGroupLayerView(){return this.layerViews.find(i=>i.layer===this.layer?.dynamicGroupLayer)}get footprintLayerView(){return this.layerViews.find(i=>i.layer===this.layer?.footprintLayer)}isUpdating(){return!this.dynamicGroupLayerView||!this.footprintLayerView||this.dynamicGroupLayerView.updating||this.footprintLayerView.updating}};return r([o()],t.prototype,"layer",void 0),r([o()],t.prototype,"layerViews",void 0),r([o({readOnly:!0})],t.prototype,"dynamicGroupLayerView",null),r([o({readOnly:!0})],t.prototype,"footprintLayerView",null),t=r([a("esri.views.layers.CatalogLayerView")],t),t};let p=class extends l(s(n)){constructor(){super(...arguments),this.layerViews=new m}update(e){}viewChange(){}moveEnd(){}attach(){this.addAttachHandles([this._updatingHandles.addOnCollectionChange(()=>this.layerViews,()=>this._updateStageChildren(),{initial:!0})])}detach(){this.container.removeAllChildren()}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((e,t)=>this.container.addChildAt(e.container,t))}};r([o()],p.prototype,"layerViews",void 0),p=r([a("esri.views.2d.layers.CatalogLayerView2D")],p);const Vt=p;export{Vt as default};
