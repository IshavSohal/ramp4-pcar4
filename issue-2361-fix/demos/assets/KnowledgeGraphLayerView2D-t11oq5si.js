import{V as p,cZ as m,q as o,u as e,c_ as s,C as a}from"./main-DGujzD_M.js";import{j as n,y as l}from"./LayerView-BLx7A75F.js";import"./preload-helper-ExcqyqRp.js";import"./Container-B7KeRWb_.js";import"./MapView-DARv2gDj.js";import"./Cyclical-BupTIqAx.js";import"./CollectionFlattener-vhnnMfZ4.js";import"./workers-BIOy1VE1.js";import"./projection-BGqxbXnR.js";import"./projectBuffer-B4NK-jf0.js";import"./TileInfo-B67koBzm.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-Ce-yO9vJ.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-C6OlSYRw.js";import"./signal-Z4Na1r4w.js";import"./Map-1MTMdPcV.js";import"./Basemap-Cy5wiM9V.js";import"./loadAll-BaNc8nTu.js";import"./PortalItem-DHiHRhyv.js";import"./writeUtils-tK8TS2bV.js";import"./compilerUtils-C8FmnaHa.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-DgACfE_X.js";import"./common-DQOJ18NT.js";import"./TablesMixin-BXJ1nQ2s.js";import"./Layer-nFIr2Jg1.js";import"./TimeExtent-CdSFtPnV.js";import"./GraphicsCollection-D-_NNL20.js";import"./HeightModelInfo-Bfuk_p8P.js";import"./ReactiveMap-DtyTuzMb.js";import"./Query-DuIz807x.js";import"./Field-BdQvaWYn.js";import"./fieldType-fX_9gVm6.js";import"./arcgisLayerUrl-A1BgX7Ym.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-B7N_6o8F.js";import"./vec2-DGVIkCvT.js";import"./Tile-D7Gf052u.js";import"./TileKey-BCA5_pRW.js";import"./QueueProcessor-DdUC0NAG.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-CmMvyowT.js";import"./normalizeUtilsCommon-Cq_Ghmzj.js";import"./utils-BkOd4WMh.js";import"./utils-D7YQg5xY.js";import"./mat3-XZDRtl20.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-DMfhUsGb.js";import"./vec32-JNeZPdN5.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-9SomPLIb.js";import"./imageUtils-C9L2zprn.js";import"./capabilities-A2uoe7dc.js";import"./Version-95CyOaLc.js";import"./ColorBackground-CMT5zMqu.js";import"./parser-BKHAlMdZ.js";import"./layerViewUtils-CmuxlYxc.js";let r=class extends n(l){constructor(t){super(t),this.layerViews=new p}set layerViews(t){this._set("layerViews",m(t,this._get("layerViews")))}get updatingProgress(){return this.layerViews.length===0?1:this.layerViews.reduce((t,i)=>t+i.updatingProgress,0)/this.layerViews.length}attach(){this._updateStageChildren(),this.addAttachHandles(this.layerViews.on("after-changes",()=>this._updateStageChildren()))}detach(){this.container.removeAllChildren()}update(t){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((t,i)=>this.container.addChildAt(t.container,i))}};o([e({cast:s})],r.prototype,"layerViews",null),o([e({readOnly:!0})],r.prototype,"updatingProgress",null),r=o([a("esri.views.2d.layers.KnowledgeGraphLayerView2D")],r);const wt=r;export{wt as default};
