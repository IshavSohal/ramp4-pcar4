import{q as i,u as a,C as f,V,dD as b,eQ as F,aJ as U,ej as _,n as x,bv as w}from"./main-DGujzD_M.js";import{j as H,y as I}from"./LayerView-BLx7A75F.js";import"./preload-helper-ExcqyqRp.js";import"./Container-B7KeRWb_.js";import"./MapView-DARv2gDj.js";import"./Cyclical-BupTIqAx.js";import"./CollectionFlattener-vhnnMfZ4.js";import"./workers-BIOy1VE1.js";import"./projection-BGqxbXnR.js";import"./projectBuffer-B4NK-jf0.js";import"./TileInfo-B67koBzm.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-Ce-yO9vJ.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-C6OlSYRw.js";import"./signal-Z4Na1r4w.js";import"./Map-1MTMdPcV.js";import"./Basemap-Cy5wiM9V.js";import"./loadAll-BaNc8nTu.js";import"./PortalItem-DHiHRhyv.js";import"./writeUtils-tK8TS2bV.js";import"./compilerUtils-C8FmnaHa.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-DgACfE_X.js";import"./common-DQOJ18NT.js";import"./TablesMixin-BXJ1nQ2s.js";import"./Layer-nFIr2Jg1.js";import"./TimeExtent-CdSFtPnV.js";import"./GraphicsCollection-D-_NNL20.js";import"./HeightModelInfo-Bfuk_p8P.js";import"./ReactiveMap-DtyTuzMb.js";import"./Query-DuIz807x.js";import"./Field-BdQvaWYn.js";import"./fieldType-fX_9gVm6.js";import"./arcgisLayerUrl-A1BgX7Ym.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-B7N_6o8F.js";import"./vec2-DGVIkCvT.js";import"./Tile-D7Gf052u.js";import"./TileKey-BCA5_pRW.js";import"./QueueProcessor-DdUC0NAG.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-CmMvyowT.js";import"./normalizeUtilsCommon-Cq_Ghmzj.js";import"./utils-BkOd4WMh.js";import"./utils-D7YQg5xY.js";import"./mat3-XZDRtl20.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-DMfhUsGb.js";import"./vec32-JNeZPdN5.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-9SomPLIb.js";import"./imageUtils-C9L2zprn.js";import"./capabilities-A2uoe7dc.js";import"./Version-95CyOaLc.js";import"./ColorBackground-CMT5zMqu.js";import"./parser-BKHAlMdZ.js";import"./layerViewUtils-CmuxlYxc.js";const y=Symbol(),O=n=>{let e=class extends n{constructor(){super(...arguments),this.layerViews=new V,this._debouncedUpdate=b(async()=>{const{layer:r,parent:s}=this,o=s?.footprintLayerView;let p=[];const d=this._createQuery();if(d&&o){const{features:u}=await o.queryFeatures(d);this.suspended||(p=u.map(h=>r.acquireLayer(h)))}this.removeHandles(y),this.addHandles(p,y)})}get creatingLayerViews(){return this.view?.layerViewManager.isCreatingLayerViewsForLayer(this.layer)??!1}isUpdating(){return this.creatingLayerViews||this.layer.updating||this.layerViews.some(r=>r.updating)}enableLayerUpdates(){return F([this._updatingHandles.addWhen(()=>this.parent?.footprintLayerView?.dataUpdating===!1,()=>this.updateLayers()),this._updatingHandles.add(()=>[this.layer.maximumVisibleSublayers,this.layer.parent?.orderBy,this.parent?.footprintLayerView?.filter,this.parent?.footprintLayerView?.timeExtent,this.suspended],()=>this.updateLayers()),U(()=>this.removeHandles(y))])}updateLayers(){this.suspended?this.removeHandles(y):this._updatingHandles.addPromise(_(this._debouncedUpdate()).catch(r=>{x.getLogger(this).error(r)}))}_createQuery(){const r=this.parent?.footprintLayerView,s=this.layer?.parent;if(!r||!s||s.destroyed)return null;const{layer:{maximumVisibleSublayers:o},view:{scale:p}}=this;if(!o)return null;const{itemTypeField:d,itemSourceField:u,itemNameField:h,minScaleField:c,maxScaleField:L,objectIdField:v,orderBy:$}=s,S=w(`${c} IS NULL OR ${p} <= ${c} OR ${c} = 0`,`${L} IS NULL OR ${p} >= ${L}`),m=$?.find(l=>l.field&&!l.valueExpression),t=r.createQuery();if(t.returnGeometry=!1,t.num=o,t.outFields=[v,u,h],t.where=w(t.where,S),this.unsupportedItemTypes!=null){const l=`${d} NOT IN (${this.unsupportedItemTypes.map(C=>`'${C}'`)})`;t.where=w(t.where,l)}return m?.field&&(t.orderByFields=[`${m.field} ${m.order==="descending"?"DESC":"ASC"}`],t.outFields.push(m.field)),t}};return i([a({readOnly:!0})],e.prototype,"creatingLayerViews",null),i([a()],e.prototype,"layer",void 0),i([a()],e.prototype,"layerViews",void 0),i([a({readOnly:!0})],e.prototype,"unsupportedItemTypes",void 0),i([a()],e.prototype,"parent",void 0),i([a({readOnly:!0})],e.prototype,"isUpdating",null),e=i([f("esri.views.layers.CatalogDynamicGroupLayerView")],e),e};let g=class extends O(H(I)){constructor(){super(...arguments),this.unsupportedItemTypes=["Scene Service"],this.layerViews=new V}attach(){this.addAttachHandles([this.layerViews.on("after-changes",()=>this._updateStageChildren()),this.enableLayerUpdates()])}detach(){this.container.removeAllChildren()}update(n){this.updateLayers()}viewChange(){}moveEnd(){this.requestUpdate()}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((n,e)=>this.container.addChildAt(n.container,e))}};g=i([f("esri.views.2d.layers.CatalogDynamicGroupLayerView2D")],g);const qe=g;export{qe as default};
