const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./WhereClause-BW-E7lLT.js","./main-C1jnFJXF.js","./preload-helper-ExcqyqRp.js","./main-DyywX7Kt.css","./TimeOnly-C9PYxWjL.js"])))=>i.map(i=>d[i]);
import{_ as G}from"./preload-helper-ExcqyqRp.js";import{v as o,x as a,J as S,bo as H,f0 as Z,b0 as V,bi as M,i9 as Q,ia as K,ib as X,ic as B,V as Y,id as ee,ie as te,ig as N,ay as ie,c9 as f,aV as W,d3 as b,aO as re,Q as oe,bF as se,eX as ne,de as ae,fQ as le,bE as R,dq as de,a9 as pe,aE as ue,f2 as he,b$ as ce,U as j,eh as y,cb as ye,df as A,f1 as L,cJ as me}from"./main-C1jnFJXF.js";import{t as fe}from"./memoize-DsJmrG76.js";import{h as q}from"./UpdatingHandles-wq5HmkiG.js";import{j as ge,y as we}from"./SketchOptions-Pblv600W.js";import{t as C}from"./TileKey-DZd6gJy7.js";import{o as _e}from"./vec32-Hh3I5M3g.js";import{W as ve,t as be,g as Se}from"./boundedPlane-gBTa7Knz.js";import{i as Ie}from"./layerViewUtils-CG3vquhs.js";import{o as Oe,i as He}from"./queryEngineUtils-ATVuaMoZ.js";import{h as ke}from"./WorkerHandle-BzNXLfVL.js";import{e as $e}from"./projectVectorToVector-Bspt7bR8.js";import{z as Te,p as Fe}from"./TileInfo-DjeRd3ie.js";import{E as Pe}from"./Scheduler-DIvnu_5f.js";import"./vec2-maR1OrZI.js";import"./common-DQOJ18NT.js";import"./vec2f64-DohEyf3f.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./projection-Vy0ZlKbO.js";import"./geodesicUtils-BsZR6UD9.js";import"./plane-ChTLAUe9.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-aQ5IuZRd.js";import"./sphere-CWce3mtJ.js";import"./mat4-BvBT-TXm.js";import"./mat3-CruJiiUv.js";import"./TimeExtent-DKSNJ8Bm.js";import"./Query-Ckfmrrtp.js";import"./Field-LsRjlaGK.js";import"./fieldType-Db7hPrGE.js";import"./MapView-a8i943Nc.js";import"./CollectionFlattener-ibiTG2xT.js";import"./workers-Cn0Q7zC8.js";import"./Queue-CmNWFva0.js";import"./intl-BZ4rVvqH.js";import"./themeUtils-BrF-JySq.js";import"./uuid-Cl5lrJ4c.js";import"./signal-BCySYmLx.js";import"./Map-J3tYLbTp.js";import"./Basemap-C3OxGW7w.js";import"./loadAll-5aYWBoho.js";import"./PortalItem-Wo6yUEbz.js";import"./mat4f32-DcsiF_Rp.js";import"./Layer-yBJ5xxGH.js";import"./GraphicsCollection-D07OzAOS.js";import"./HeightModelInfo-K3LMoSM2.js";import"./timeZoneUtils-BAL51Sog.js";import"./ReactiveMap-BIi0AGbF.js";import"./HighlightDefaults-BFAi_kk0.js";import"./ViewingMode-HRfKv6NR.js";import"./Tile-Du2tCxeG.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-C3lgASKe.js";import"./utils-BMNpR1Gg.js";import"./utils-DFsgVUQE.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-B1N-tmtC.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-DC1tjEGm.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-DEOjCFU4.js";import"./Version-HFbi4Hao.js";import"./ColorBackground-CM_3PwB5.js";import"./ElevationInfo-Bj1HhVNU.js";import"./lengthUtils-DRVCuQO6.js";import"./quantityUtils-X1efczOu.js";import"./lineSegment-BwbNpO0u.js";import"./RouteLayerInteraction-CcNxKN1x.js";import"./GraphicsLayer-BAFRl99x.js";import"./ScaleRangeLayer-BqqV6BhL.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-2dYJ4H-1.js";import"./parser-DfWy3AVI.js";import"./RouteLayerView2D-DCpIOptR.js";import"./LayerView--mflzMiq.js";import"./Container-Cxa1fa2d.js";import"./GraphicContainer-Cg1-DsoU.js";import"./AGraphicContainer-CXuw_Bx3.js";import"./TechniqueInstance-B7n-JRu7.js";import"./UpdateTracking2D-N5CVKe4_.js";import"./BidiEngine-DNnuvc1i.js";import"./OptimizedFeatureSet-DElmmwrI.js";import"./memoryEstimations-D28a58Kd.js";import"./Rect-Ig_8nRdp.js";import"./enums-BJSSbDkD.js";import"./utils-Bo5cZB6_.js";import"./defaultCIMValues-CnsXYo_x.js";import"./rasterizingUtils-BKDHC-Cb.js";import"./floatRGBA-BuIHwqNr.js";import"./dataViewUtils-B_RhWue0.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./FramebufferObject-BfqwiEJh.js";import"./VertexArrayObject-DOUsx_lm.js";import"./TileContainer-DcJBHBNO.js";import"./WGLContainer-DeK5jdX1.js";import"./ProgramTemplate-DOQV_Kij.js";import"./vec3f32-nZdmKIgz.js";import"./config-DoMhnbNN.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-DgTpzIiC.js";import"./FeatureCommandQueue-DRObhDfq.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-V8VDhL2O.js";import"./ShaderBuilder-D9eZPxlo.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-CpmXMNb4.js";import"./GraphicsView2D-DfPixkkt.js";import"./FieldsIndex-Be_Wfpai.js";import"./OverrideHelper-B9ph2oZD.js";import"./colorUtils-DZc_maoS.js";import"./quantizationUtils-BGOp-eYe.js";import"./FeatureMetadata-di175nXP.js";import"./queryUtils-DayB3KdG.js";import"./json-Wa8cmqdu.js";import"./timeSupport-LDFZO9e2.js";import"./TimeOnly-C9PYxWjL.js";import"./labelUtils-DAzlzjXq.js";import"./dehydratedFeatures-BLKBpu6D.js";import"./VertexSnappingCandidate-CdVHrvWA.js";import"./PointSnappingHint-B9R3S2Ls.js";import"./projectPointToVector-BX5aac8C.js";const Me=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let O=class extends H{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=Me.map(e=>new Z({color:[e[0],e[1],e[2],.6],outline:{color:"black",width:1}})),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=n=>{if(n.label!=null)return n.label;let l=n.lij.toString();return n.loadPriority!=null&&(l+=` (${n.loadPriority})`),n.measures&&(l+=`[${n.measures.lodLevel}]`),l},t=this.getTiles(),i=new Array,s=new Set((this._labels.size,this._labels.keys()));t.forEach((n,l)=>{const p=n.lij.toString();s.delete(p);const w=n.measures?.lodLevel??n.level,h=n.geometry;if(this.enablePolygons&&!this._polygons.has(p)){const d=new V({geometry:h,symbol:this._symbols[w%this._symbols.length]});this._polygons.set(p,d),i.push(d)}if(this.enableLabels){const d=e(n),_=l/(t.length-1),I=N(0,200,_),k=N(20,6,_)/.75,E=n.loadPriority!=null&&n.loadPriority>=t.length,z=new M([I,E?0:I,E?0:I]),x=this.view.type==="3d"?()=>new Q({verticalOffset:new K({screenLength:40/.75}),callout:new X({color:new M("white"),border:new B({color:new M("black")})}),symbolLayers:new Y([new ee({text:d,halo:{color:"white",size:1/.75},material:{color:z},size:k})])}):()=>new te({text:d,haloColor:"white",haloSize:1/.75,color:z,size:k}),T=this._labels.get(p);if(T){const $=x();T.symbol!=null&&JSON.stringify($)===JSON.stringify(T.symbol)||(T.symbol=$)}else{const $=new V({geometry:h.extent.center,symbol:x()});this._labels.set(p,$),i.push($)}}});const r=new Array;s.forEach(n=>{const l=this._polygons.get(n);l!=null&&(r.push(l),this._polygons.delete(n));const p=this._labels.get(n);p!=null&&(r.push(p),this._labels.delete(n))}),this.view.graphics.removeMany(r),this.view.graphics.addMany(i)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};o([a({constructOnly:!0})],O.prototype,"view",void 0),o([a({readOnly:!0})],O.prototype,"updating",void 0),o([a()],O.prototype,"enabled",null),O=o([S("esri.views.support.TileTreeDebugger")],O);function P(e,t){return be(t.extent,U),Se(U,_e(Ce,e.x,e.y,0))}const U=ve(),Ce=ie();let m=class extends H{get tiles(){const e=this.tilesCoveringView,t=this.pointOfInterest!=null?this.pointOfInterest:this.view.center;return e.sort((i,s)=>P(t,i)-P(t,s)),e}_scaleEnabled(){return Ie(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||this.tileInfo==null)return[];if(!this._scaleEnabled)return[];const{spans:e,lodInfo:t}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:i}=t,s=[];for(const{row:r,colFrom:n,colTo:l}of e)for(let p=n;p<=l;p++){const w=t.normalizeCol(p),h=new C(null,i,r,w);this.tileInfo.updateTileInfo(h),s.push(h)}return s}get tileInfo(){return this.view.featuresTilingScheme?.tileInfo??null}get tileSize(){return this.tileInfo!=null?this.tileInfo.size[0]:256}constructor(e){super(e),this.pointOfInterest=null}initialize(){this.addHandles(f(()=>this.view?.state?.viewpoint,()=>this.notifyChange("tilesCoveringView"),W))}};o([a({readOnly:!0})],m.prototype,"tiles",null),o([a({readOnly:!0})],m.prototype,"_scaleEnabled",null),o([a({readOnly:!0})],m.prototype,"tilesCoveringView",null),o([a({readOnly:!0})],m.prototype,"tileInfo",null),o([a({readOnly:!0})],m.prototype,"tileSize",null),o([a({constructOnly:!0})],m.prototype,"view",void 0),o([a({constructOnly:!0})],m.prototype,"layer",void 0),o([a()],m.prototype,"pointOfInterest",void 0),m=o([S("esri.views.2d.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],m);let g=class extends H{get _sortedTilesCoveringView(){const t=(this.view.featureTiles?.tiles?.toArray()??[]).map(Ee),i=this._effectivePointOfInterest;return i!=null&&t.sort((s,r)=>P(i,s)-P(i,r)),t}get tileInfo(){return this.view.featureTiles?.tilingScheme?.toTileInfo()??null}get tileSize(){return this.view.featureTiles?.tileSize??256}get _effectivePointOfInterest(){const t=this.pointOfInterest;return t??this.view.pointsOfInterest?.focus.location}constructor(t){super(t),this.tiles=[],this.pointOfInterest=null}initialize(){this.addHandles([f(()=>this.view.featureTiles,t=>{this.removeHandles(D),t&&this.addHandles(t.addClient(),D)},b),f(()=>this._sortedTilesCoveringView,t=>this._set("tiles",t),{initial:!0,equals:(t,i)=>re(t,i,(s,r)=>s.id===r.id)})])}};function Ee({lij:[e,t,i],extent:s}){return new C(`${e}/${t}/${i}`,e,t,i,s)}o([a({readOnly:!0})],g.prototype,"tiles",void 0),o([a({readOnly:!0})],g.prototype,"_sortedTilesCoveringView",null),o([a({readOnly:!0})],g.prototype,"tileInfo",null),o([a({readOnly:!0})],g.prototype,"tileSize",null),o([a({constructOnly:!0})],g.prototype,"view",void 0),o([a()],g.prototype,"pointOfInterest",void 0),o([a()],g.prototype,"_effectivePointOfInterest",null),g=o([S("esri.views.3d.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],g);const D="feature-tiles";let F=class extends O{constructor(e){super(e)}initialize(){const e=setInterval(()=>this._fetchDebugInfo(),2e3);this.addHandles(oe(()=>clearInterval(e)))}getTiles(){if(!this._debugInfo)return[];const e=new Map,t=new Map;this._debugInfo.storedTiles.forEach(r=>{e.set(r.data.id,r.featureCount)}),this._debugInfo.pendingTiles.forEach(r=>{e.set(r.data.id,r.featureCount),t.set(r.data.id,r.state)});const i=r=>{const n=t.get(r),l=e.get(r)??"?";return n?`${n}:${l}
${r}`:`store:${l}
${r}`},s=new Map;return this._debugInfo.storedTiles.forEach(r=>{s.set(r.data.id,r.data)}),this._debugInfo.pendingTiles.forEach(r=>{s.set(r.data.id,r.data)}),Array.from(s.values()).map(r=>({lij:[r.level,r.row,r.col],level:r.level,geometry:se.fromExtent(ne(r.extent,this.view.spatialReference)),label:i(r.id)}))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then(e=>{this._debugInfo=e,this.update()})}};o([a({constructOnly:!0})],F.prototype,"handle",void 0),F=o([S("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],F);let c=class extends H{get updating(){return this._updatingHandles.updating||this._workerHandleUpdating}constructor(e){super(e),this._updatingHandles=new q,this._suspendController=null,this.schedule=null,this.hasZ=!1,this.elevationAlignPointsInFeatures=async t=>{const i=[];for(const{points:s}of t.pointsInFeatures)for(const{z:r}of s)i.push(r);return{elevations:i,drapedObjectIds:new Set,failedObjectIds:new Set}},this.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]}),this.availability=0,this._workerHandleUpdating=!0,this.updateOutFields=ae(async(t,i)=>{await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("updateOutFields",[...t],i)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},i))})}destroy(){this._suspendController=le(this._suspendController),this._workerHandle.destroy(),this._updatingHandles.destroy()}initialize(){this._workerHandle=new xe(this.schedule,{alignElevation:async(e,{signal:t})=>({result:await this.elevationAlignPointsInFeatures(e.query,t)}),getSymbologyCandidates:async(e,{signal:t})=>({result:await this.queryForSymbologySnapping(e,t)})}),this.addHandles([this._workerHandle.on("notify-updating",({updating:e})=>this._workerHandleUpdating=e),this._workerHandle.on("notify-availability",({availability:e})=>this._set("availability",e))])}async setup(e,t){const i=ze(e.layer);if(i==null)return;const s={configuration:J(e.configuration),serviceInfo:i,spatialReference:e.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:e.layer.elevationInfo?.toJSON()};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",s,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async configure(e,t){const i=J(e);await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",i,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async refresh(e){await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},e)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async fetchCandidates(e,t){const{point:i,filter:s,coordinateHelper:r}=e,n={...e,point:$e(i[0],i[1],i[2],r.spatialReference.toJSON()),filter:s?.toJSON()};return this._workerHandle.invoke(n,t)}async updateTiles(e,t){const i={tiles:e.tiles,tileInfo:e.tileInfo!=null?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",i,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async handleEdits({historicMoment:e,addedFeatures:t,deletedFeatures:i,updatedFeatures:s},r){const n={historicMoment:e,addedFeatures:t?.map(({objectId:l})=>l).filter(R)??[],deletedFeatures:i?.map(({objectId:l,globalId:p})=>({objectId:l,globalId:p}))??[],updatedFeatures:s?.map(({objectId:l})=>l).filter(R)??[]};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("handleEdits",n,r)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},r))}async setHistoricMoment(e,t){await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("setHistoricMoment",{moment:e},t))}getDebugInfo(e){return this._workerHandle.invokeMethod("getDebugInfo",{},e)}async notifyElevationSourceChange(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{})}async notifySymbologyChange(){await this._workerHandle.invokeMethod("notifySymbologyChange",{})}async setSymbologySnappingSupported(e){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",e)}async setSuspended(e){this._suspendController?.abort(),this._suspendController=new AbortController,await this._workerHandle.invokeMethod("setSuspended",e,this._suspendController.signal)}};function J(e){return{filter:e.filter!=null?e.filter.toJSON():null,customParameters:e.customParameters,viewType:e.viewType}}function ze(e){return e.geometryType==="multipatch"||e.geometryType==="mesh"?null:{url:e.parsedUrl?.path??"",fieldsIndex:e.fieldsIndex.toJSON(),geometryType:de.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:e.timeInfo?.toJSON()}}o([a({constructOnly:!0})],c.prototype,"schedule",void 0),o([a({constructOnly:!0})],c.prototype,"hasZ",void 0),o([a({constructOnly:!0})],c.prototype,"elevationAlignPointsInFeatures",void 0),o([a({constructOnly:!0})],c.prototype,"queryForSymbologySnapping",void 0),o([a({readOnly:!0})],c.prototype,"updating",null),o([a({readOnly:!0})],c.prototype,"availability",void 0),o([a()],c.prototype,"_workerHandleUpdating",void 0),c=o([S("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],c);class xe extends ke{constructor(t,i){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:i})}}let v=class extends H{get tiles(){return[new C("0/0/0",0,0,0,pe(-1e8,-1e8,1e8,1e8))]}get tileInfo(){return new Te({origin:new ue({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new Fe({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}constructor(e){super(e),this.pointOfInterest=null}};o([a({readOnly:!0})],v.prototype,"tiles",null),o([a({readOnly:!0})],v.prototype,"tileInfo",null),o([a({readOnly:!0})],v.prototype,"tileSize",null),o([a({constructOnly:!0})],v.prototype,"layer",void 0),o([a()],v.prototype,"pointOfInterest",void 0),v=o([S("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],v);let u=class extends H{get _updateTilesParameters(){return{tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get _layerView(){return this.view?.allLayerViews.find(e=>e.layer===this._layer)}get _isSuspended(){return he(this._layer)&&!this.layerSource.sublayerSources.some(e=>e.enabled&&e.layer.visible)?!0:!!this.view&&(this._layerView?.suspended!==!1||!this.layerSource.enabled)}get updating(){return this._workerHandle?.updating||this._updatingHandles.updating}get _outFields(){const{view:e,_layerView:t,layerSource:i}=this,{layer:s}=i,{fieldsIndex:r,timeInfo:n,floorInfo:l,subtypeField:p}=s,w=t&&"filter"in t?t.filter:null,h=w?.where&&w.where!=="1=1"?this._getOrLoadWhereFields(w.where,r):[];if(w?.timeExtent&&n){const{startField:d,endField:_}=n,I=r.get(d)?.name??d,k=r.get(_)?.name??_;I&&h.push(I),k&&h.push(k)}if(e?.map&&ge(e.map)&&e.map.utilityNetworks?.find(d=>d.isUtilityLayer(s))){const d=s.fieldsIndex.get("assetGroup")?.name,_=s.fieldsIndex.get("assetType")?.name;d&&_&&(h.push(d),h.push(_))}if(s&&l?.floorField&&e?.floors?.length){const d=r.get(l.floorField)?.name??l.floorField;d&&h.push(d)}if(p){const d=r.get(p)?.name??p;d&&h.push(d)}return new Set(h)}get configuration(){const{view:e}=this,{apiKey:t,customParameters:i}=this._layer,s=e!=null?e.type:"2d",r=this._layer.createQuery();return this._layerView&&"effectiveDisplayFilter"in this._layerView&&(r.where=ce(r.where,this._layerView.effectiveDisplayFilter?.where)),{filter:r,customParameters:t?{...i,token:t}:i,viewType:s}}get availability(){return this._workerHandle?.availability??0}get _layer(){return this.layerSource.layer}constructor(e){super(e),this._updatingHandles=new q,this._workerHandle=null,this._debug=null,this._memoizedMakeGetGroundElevation=fe(He)}initialize(){let e;const t=this.view;if(t==null||t.destroyed)this._tilesOfInterest=new v({layer:this._layer}),e=this._workerHandle=new c;else switch(t.type){case"2d":this._tilesOfInterest=new m({view:t,layer:this._layer}),e=this._workerHandle=new c;break;case"3d":{const{resourceController:i}=t,s=this._layer;this._tilesOfInterest=new g({view:t}),e=this._workerHandle=new c({schedule:r=>i.immediate.schedule(r),hasZ:this._layer.hasZ&&(this._layer.returnZ??!0),elevationAlignPointsInFeatures:async(r,n)=>{const l=await t.whenLayerView(s);return j(n),l.elevationAlignPointsInFeatures(r,n)},queryForSymbologySnapping:async(r,n)=>{const l=await t.whenLayerView(s);return j(n),l.queryForSymbologySnapping(r,n)}}),this.addHandles([t.elevationProvider.on("elevation-change",({context:r})=>{const{elevationInfo:n}=s;we(r,n)&&y(e.notifyElevationSourceChange())}),f(()=>s.elevationInfo,()=>y(e.notifyElevationSourceChange()),b),f(()=>this._layerView?.layer?.renderer,()=>y(e.notifySymbologyChange()),b),f(()=>this._layerView?.symbologySnappingSupported??!1,r=>y(e.setSymbologySnappingSupported(r)),b),ye(()=>this._layerView?.layer,["edits","apply-edits","graphic-update"],()=>e.notifySymbologyChange())]);break}}this.addHandles([A(e)]),y(e.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null)),this._updatingHandles.add(()=>this._updateTilesParameters,()=>y(e.updateTiles(this._updateTilesParameters,null)),b),this.addHandles([f(()=>this.configuration,i=>y(e.configure(i,null)),W),f(()=>this._layer.historicMoment,i=>y(e.setHistoricMoment(i)),L),f(()=>this._outFields,i=>y(e.updateOutFields(i)),b),f(()=>this._isSuspended,i=>y(e.setSuspended(i)),L)]),t!=null&&this.addHandles(f(()=>Pe.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES,i=>{i&&!this._debug?(this._debug=new F({view:t,handle:e}),this.addHandles(A(this._debug),"debug")):!i&&this._debug&&this.removeHandles("debug")},b)),this.addHandles([this.layerSource.layer.on("edits",i=>y(e.handleEdits(i,null))),this.layerSource.layer.on("apply-edits",i=>this._updatingHandles.addPromise(i.result))])}destroy(){this._updatingHandles.destroy(),this._tilesOfInterest.destroy()}refresh(){this._workerHandle?.refresh(null)}async fetchCandidates(e,t){const{coordinateHelper:i,point:s}=e;this._tilesOfInterest.pointOfInterest=i.arrayToPoint(s);const r=this._memoizedMakeGetGroundElevation(this.view,i.spatialReference);return(await this._workerHandle.fetchCandidates({...e},t)).candidates.map(n=>Oe(n,r))}getDebugInfo(e){return this._workerHandle.getDebugInfo(e)}_getOrLoadWhereFields(e,t){const{_whereModule:i}=this;if(!this._loadWhereModuleTask&&!i){const s=me(async()=>{const r=await G(()=>import("./WhereClause-BW-E7lLT.js").then(n=>n.W),__vite__mapDeps([0,1,2,3,4]),import.meta.url);return this._whereModule=r.default,this._whereModule});return this._loadWhereModuleTask=s,this._updatingHandles.addPromise(s.promise),[]}if(!i)return[];try{return i.create(e,{fieldsIndex:t}).fieldNames}catch{return[]}}};o([a({constructOnly:!0})],u.prototype,"spatialReference",void 0),o([a({constructOnly:!0})],u.prototype,"layerSource",void 0),o([a({constructOnly:!0})],u.prototype,"view",void 0),o([a()],u.prototype,"_tilesOfInterest",void 0),o([a({readOnly:!0})],u.prototype,"_updateTilesParameters",null),o([a()],u.prototype,"_layerView",null),o([a()],u.prototype,"_isSuspended",null),o([a({readOnly:!0})],u.prototype,"updating",null),o([a()],u.prototype,"_outFields",null),o([a({readOnly:!0})],u.prototype,"configuration",null),o([a({readOnly:!0})],u.prototype,"availability",null),o([a()],u.prototype,"_loadWhereModuleTask",void 0),o([a()],u.prototype,"_whereModule",void 0),u=o([S("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],u);export{u as FeatureServiceSnappingSource};
