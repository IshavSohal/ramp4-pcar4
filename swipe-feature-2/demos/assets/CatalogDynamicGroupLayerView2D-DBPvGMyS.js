import{v as i,x as a,J as f,V,de as C,eY as F,Q as U,eh as x,n as _,b$ as w}from"./main-C1jnFJXF.js";import{S as H,y as I}from"./LayerView--mflzMiq.js";import"./preload-helper-ExcqyqRp.js";import"./Container-Cxa1fa2d.js";import"./MapView-a8i943Nc.js";import"./CollectionFlattener-ibiTG2xT.js";import"./workers-Cn0Q7zC8.js";import"./Queue-CmNWFva0.js";import"./intl-BZ4rVvqH.js";import"./projection-Vy0ZlKbO.js";import"./TileInfo-DjeRd3ie.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-BrF-JySq.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-wq5HmkiG.js";import"./signal-BCySYmLx.js";import"./Map-J3tYLbTp.js";import"./Basemap-C3OxGW7w.js";import"./loadAll-5aYWBoho.js";import"./PortalItem-Wo6yUEbz.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-BvBT-TXm.js";import"./common-DQOJ18NT.js";import"./Layer-yBJ5xxGH.js";import"./TimeExtent-DKSNJ8Bm.js";import"./GraphicsCollection-D07OzAOS.js";import"./HeightModelInfo-K3LMoSM2.js";import"./timeZoneUtils-BAL51Sog.js";import"./ReactiveMap-BIi0AGbF.js";import"./Query-Ckfmrrtp.js";import"./Field-LsRjlaGK.js";import"./fieldType-Db7hPrGE.js";import"./HighlightDefaults-BFAi_kk0.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./Tile-Du2tCxeG.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-C3lgASKe.js";import"./utils-BMNpR1Gg.js";import"./utils-DFsgVUQE.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-DIvnu_5f.js";import"./vec32-Hh3I5M3g.js";import"./unitBezier-B1N-tmtC.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-DC1tjEGm.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-DEOjCFU4.js";import"./Version-HFbi4Hao.js";import"./ColorBackground-CM_3PwB5.js";import"./parser-DfWy3AVI.js";import"./layerViewUtils-CG3vquhs.js";const y=Symbol(),O=n=>{let e=class extends n{constructor(){super(...arguments),this.layerViews=new V,this._debouncedUpdate=C(async()=>{const{layer:r,parent:s}=this,o=s?.footprintLayerView;let p=[];const d=this._createQuery();if(d&&o){const{features:u}=await o.queryFeatures(d);this.suspended||(p=u.map(h=>r.acquireLayer(h)))}this.removeHandles(y),this.addHandles(p,y)})}get creatingLayerViews(){return this.view?.layerViewManager.isCreatingLayerViewsForLayer(this.layer)??!1}isUpdating(){return this.creatingLayerViews||this.layer.updating||this.layerViews.some(r=>r.updating)}enableLayerUpdates(){return F([this._updatingHandles.addWhen(()=>this.parent?.footprintLayerView?.dataUpdating===!1,()=>this.updateLayers()),this._updatingHandles.add(()=>[this.layer.maximumVisibleSublayers,this.layer.parent?.orderBy,this.parent?.footprintLayerView?.filter,this.parent?.footprintLayerView?.timeExtent,this.suspended],()=>this.updateLayers()),U(()=>this.removeHandles(y))])}updateLayers(){this.suspended?this.removeHandles(y):this._updatingHandles.addPromise(x(this._debouncedUpdate()).catch(r=>{_.getLogger(this).error(r)}))}_createQuery(){const r=this.parent?.footprintLayerView,s=this.layer?.parent;if(!r||!s||s.destroyed)return null;const{layer:{maximumVisibleSublayers:o},view:{scale:p}}=this;if(!o)return null;const{itemTypeField:d,itemSourceField:u,itemNameField:h,minScaleField:c,maxScaleField:L,objectIdField:v,orderBy:$}=s,S=w(`${c} IS NULL OR ${p} <= ${c} OR ${c} = 0`,`${L} IS NULL OR ${p} >= ${L}`),m=$?.find(l=>l.field&&!l.valueExpression),t=r.createQuery();if(t.returnGeometry=!1,t.num=o,t.outFields=[v,u,h],t.where=w(t.where,S),this.unsupportedItemTypes!=null){const l=`${d} NOT IN (${this.unsupportedItemTypes.map(b=>`'${b}'`)})`;t.where=w(t.where,l)}return m?.field&&(t.orderByFields=[`${m.field} ${m.order==="descending"?"DESC":"ASC"}`],t.outFields.push(m.field)),t}};return i([a({readOnly:!0})],e.prototype,"creatingLayerViews",null),i([a()],e.prototype,"layer",void 0),i([a()],e.prototype,"layerViews",void 0),i([a({readOnly:!0})],e.prototype,"unsupportedItemTypes",void 0),i([a()],e.prototype,"parent",void 0),i([a({readOnly:!0})],e.prototype,"isUpdating",null),e=i([f("esri.views.layers.CatalogDynamicGroupLayerView")],e),e};let g=class extends O(H(I)){constructor(){super(...arguments),this.unsupportedItemTypes=["Scene Service"],this.layerViews=new V}attach(){this.addAttachHandles([this.layerViews.on("after-changes",()=>this._updateStageChildren()),this.enableLayerUpdates()])}detach(){this.container.removeAllChildren()}update(n){this.updateLayers()}viewChange(){}moveEnd(){this.requestUpdate()}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((n,e)=>this.container.addChildAt(n.container,e))}};g=i([f("esri.views.2d.layers.CatalogDynamicGroupLayerView2D")],g);const Ae=g;export{Ae as default};
