import{Y as w,eS as C,v as o,x as s,J as y,bo as f,ay as L,l as H,fQ as E,df as _,gH as x,U as $,bE as I}from"./main-C1jnFJXF.js";import{h as O}from"./UpdatingHandles-wq5HmkiG.js";import{h as k}from"./WorkerHandle-BzNXLfVL.js";import{t as h}from"./workerHelper-B-Bx60tQ.js";import{f as V}from"./edgeProcessing-q6WR2lqb.js";import{V as A}from"./sphere-CWce3mtJ.js";import{b as v,r as R}from"./SketchOptions-Pblv600W.js";import{c as D}from"./RouteLayerInteraction-CcNxKN1x.js";import{r as P}from"./VertexSnappingCandidate-CdVHrvWA.js";import"./preload-helper-ExcqyqRp.js";import"./workers-Cn0Q7zC8.js";import"./Queue-CmNWFva0.js";import"./intl-BZ4rVvqH.js";import"./InterleavedLayout-BwJEiKxr.js";import"./BufferView-BgUl5c4y.js";import"./vec2-maR1OrZI.js";import"./common-DQOJ18NT.js";import"./vec32-Hh3I5M3g.js";import"./vec42-CKs01hkn.js";import"./vec2f64-DohEyf3f.js";import"./vec4f64-o2zAXfmz.js";import"./deduplicate-C_qoVFH4.js";import"./Indices-BNrlvn90.js";import"./VertexAttribute-Cq4MnHjR.js";import"./glUtil-BuljoYCz.js";import"./enums-Dk3osxpS.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./Normals-iwYZlA6i.js";import"./mat4-BvBT-TXm.js";import"./mat3-CruJiiUv.js";import"./mat3f64-q3fE-ZOt.js";import"./plane-ChTLAUe9.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-aQ5IuZRd.js";import"./projection-Vy0ZlKbO.js";import"./geodesicUtils-BsZR6UD9.js";import"./TimeExtent-DKSNJ8Bm.js";import"./projectVectorToVector-Bspt7bR8.js";import"./projectPointToVector-BX5aac8C.js";import"./Query-Ckfmrrtp.js";import"./Field-LsRjlaGK.js";import"./fieldType-Db7hPrGE.js";import"./MapView-a8i943Nc.js";import"./CollectionFlattener-ibiTG2xT.js";import"./TileInfo-DjeRd3ie.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-BrF-JySq.js";import"./uuid-Cl5lrJ4c.js";import"./signal-BCySYmLx.js";import"./Map-J3tYLbTp.js";import"./Basemap-C3OxGW7w.js";import"./loadAll-5aYWBoho.js";import"./PortalItem-Wo6yUEbz.js";import"./mat4f32-DcsiF_Rp.js";import"./Layer-yBJ5xxGH.js";import"./GraphicsCollection-D07OzAOS.js";import"./HeightModelInfo-K3LMoSM2.js";import"./timeZoneUtils-BAL51Sog.js";import"./ReactiveMap-BIi0AGbF.js";import"./HighlightDefaults-BFAi_kk0.js";import"./ViewingMode-HRfKv6NR.js";import"./Tile-Du2tCxeG.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-C3lgASKe.js";import"./utils-BMNpR1Gg.js";import"./utils-DFsgVUQE.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-DIvnu_5f.js";import"./unitBezier-B1N-tmtC.js";import"./definitions-CPtb4TQS.js";import"./Texture-DC1tjEGm.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-DEOjCFU4.js";import"./Version-HFbi4Hao.js";import"./ColorBackground-CM_3PwB5.js";import"./ElevationInfo-Bj1HhVNU.js";import"./lengthUtils-DRVCuQO6.js";import"./quantityUtils-X1efczOu.js";import"./GraphicsLayer-BAFRl99x.js";import"./ScaleRangeLayer-BqqV6BhL.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-2dYJ4H-1.js";import"./parser-DfWy3AVI.js";import"./RouteLayerView2D-DCpIOptR.js";import"./LayerView--mflzMiq.js";import"./Container-Cxa1fa2d.js";import"./layerViewUtils-CG3vquhs.js";import"./GraphicContainer-Cg1-DsoU.js";import"./AGraphicContainer-CXuw_Bx3.js";import"./TechniqueInstance-B7n-JRu7.js";import"./UpdateTracking2D-N5CVKe4_.js";import"./BidiEngine-DNnuvc1i.js";import"./OptimizedFeatureSet-DElmmwrI.js";import"./memoryEstimations-D28a58Kd.js";import"./Rect-Ig_8nRdp.js";import"./enums-BJSSbDkD.js";import"./utils-Bo5cZB6_.js";import"./defaultCIMValues-CnsXYo_x.js";import"./rasterizingUtils-BKDHC-Cb.js";import"./floatRGBA-BuIHwqNr.js";import"./dataViewUtils-B_RhWue0.js";import"./FramebufferObject-BfqwiEJh.js";import"./VertexArrayObject-DOUsx_lm.js";import"./TileContainer-DcJBHBNO.js";import"./WGLContainer-DeK5jdX1.js";import"./ProgramTemplate-DOQV_Kij.js";import"./vec3f32-nZdmKIgz.js";import"./config-DoMhnbNN.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-DgTpzIiC.js";import"./FeatureCommandQueue-DRObhDfq.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-V8VDhL2O.js";import"./ShaderBuilder-D9eZPxlo.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-CpmXMNb4.js";import"./GraphicsView2D-DfPixkkt.js";import"./FieldsIndex-Be_Wfpai.js";import"./OverrideHelper-B9ph2oZD.js";import"./colorUtils-DZc_maoS.js";import"./quantizationUtils-BGOp-eYe.js";import"./FeatureMetadata-di175nXP.js";import"./queryUtils-DayB3KdG.js";import"./json-Wa8cmqdu.js";import"./timeSupport-LDFZO9e2.js";import"./TimeOnly-C9PYxWjL.js";import"./labelUtils-DAzlzjXq.js";import"./dehydratedFeatures-BLKBpu6D.js";import"./PointSnappingHint-B9R3S2Ls.js";class j extends k{constructor(e){super("EdgeProcessingWorker","extract",{extract:r=>[r.dataBuffer],extractComponentsEdgeLocations:r=>[r.dataBuffer],extractEdgeLocations:r=>[r.dataBuffer]},e)}async process(e,r,i){return i?V(e):B(await this.invoke(new g(e),r))}async extractEdgeLocations(e,r){const i=await this.invokeMethod("extractEdgeLocations",new g(e),r);return h(i)}async extractComponentsEdgeLocations(e,r){const i=await this.invokeMethod("extractComponentsEdgeLocations",new g(e),r);return h(i)}}function B(t){return{regular:{instancesData:h(t.regular.instancesData),lodInfo:{lengths:new Float32Array(t.regular.lodInfo.lengths)}},silhouette:{instancesData:h(t.silhouette.instancesData),lodInfo:{lengths:new Float32Array(t.silhouette.lodInfo.lengths)}},averageEdgeLength:t.averageEdgeLength}}class g{constructor(e){this.dataBuffer=e.data.buffer,this.writerSettings=e.writerSettings,this.skipDeduplicate=e.skipDeduplicate,this.indices=w(e.indices)?e.indices.buffer:e.indices,this.indicesType=w(e.indices)?C(e.indices)?"Uint32Array":"Uint16Array":"Array",this.indicesLength=e.indicesLength}}let p=class extends f{constructor(t){super(t),this.availability=0,this._ids=new Set}destroy(){this._workerHandle.destroy(),this._workerHandle=null}initialize(){this._workerHandle=new W(this.schedule,{fetchAllEdgeLocations:(t,e)=>this._fetchAllEdgeLocations(t,e)})}async fetchCandidates(t,e){const r=t.coordinateHelper,{point:i}=t,n=M;this.renderCoordsHelper.toRenderCoords(i,r.spatialReference,n);const m=t.distance,d=typeof m=="number"?m:m.distance,l=await this._workerHandle.invoke({bounds:A(n[0],n[1],n[2],d),returnEdge:t.returnEdge,returnVertex:t.vertexMode!=="none"},e);return l.candidates.sort((u,b)=>u.distance-b.distance),l.candidates.map(u=>this._convertCandidate(r,u))}async add(t,e){this._ids.add(t.id),await this._workerHandle.invokeMethod("add",t,e)}async remove(t,e){this._ids.delete(t.id),await this._workerHandle.invokeMethod("remove",t,e)}_convertCandidate(t,e){switch(e.type){case"edge":return new D({objectId:e.objectId,targetPoint:v(this._convertRenderCoordinate(t,e.target)),edgeStart:this._convertRenderCoordinate(t,e.start),edgeEnd:this._convertRenderCoordinate(t,e.end),isDraped:!1});case"vertex":return new P({objectId:e.objectId,targetPoint:v(this._convertRenderCoordinate(t,e.target)),isDraped:!1})}}_convertRenderCoordinate({spatialReference:t},e){const r=L();return this.renderCoordsHelper.fromRenderCoords(e,r,t),R(r)}async _fetchAllEdgeLocations(t,e){const r=[],i=[];for(const{id:n,uid:m}of t.components)this._ids.has(n)&&r.push((async()=>{const d=await this.fetchEdgeLocations(n,e.signal),l=d.locations.buffer;return i.push(l),{id:n,uid:m,objectIds:d.objectIds,locations:l,origin:d.origin,type:d.type}})());return{result:{components:(await Promise.all(r)).filter(({id:n})=>this._ids.has(n))},transferList:i}}};o([s({constructOnly:!0})],p.prototype,"renderCoordsHelper",void 0),o([s({constructOnly:!0})],p.prototype,"fetchEdgeLocations",void 0),o([s({constructOnly:!0})],p.prototype,"schedule",void 0),o([s({readOnly:!0})],p.prototype,"availability",void 0),p=o([y("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorkerHandle")],p);let W=class extends k{constructor(e,r){super("SceneLayerSnappingSourceWorker","fetchCandidates",{},e,{strategy:"dedicated",client:r})}};const M=L();let a=class extends f{get updating(){return this._updatingHandles.updating}constructor(t){super(t),this.availability=1,this._updatingHandles=new O,this._abortController=new AbortController}destroy(){this._tracker=H(this._tracker),this._abortController=E(this._abortController),this._updatingHandles.destroy()}initialize(){const{view:t}=this,e=t.resourceController;this._edgeWorker=new j(S(e)),this._workerHandle=new p({renderCoordsHelper:this.view.renderCoordsHelper,schedule:S(e),fetchEdgeLocations:async(r,i)=>{if(this._tracker==null)throw new Error("tracker-not-initialized");return this._tracker.fetchEdgeLocations(r,this._edgeWorker,i)}}),this._updatingHandles.addPromise(this._setupLayerView()),this.addHandles([_(this._workerHandle),_(this._edgeWorker)])}async fetchCandidates(t,e){return this._workerHandle.fetchCandidates(t,e)}refresh(){}async _setupLayerView(){if(this.destroyed)return;const t=this._abortController?.signal,e=await this.getLayerView();e==null||x(t)||(this._tracker=e.trackSnappingSources({add:(r,i)=>{this._updatingHandles.addPromise(this._workerHandle.add({id:r,bounds:i},t))},remove:r=>{this._updatingHandles.addPromise(this._workerHandle.remove({id:r},t))}}))}};function S(t){return e=>t.immediate.schedule(e)}o([s({constructOnly:!0})],a.prototype,"getLayerView",void 0),o([s({constructOnly:!0})],a.prototype,"view",void 0),o([s({readOnly:!0})],a.prototype,"updating",null),o([s({readOnly:!0})],a.prototype,"availability",void 0),a=o([y("esri.views.interactive.snapping.featureSources.I3SSnappingSource")],a);let c=class extends f{get updating(){return this._i3sSources.some(t=>t.updating)}constructor(t){super(t),this.availability=1,this._i3sSources=[]}destroy(){this._i3sSources.forEach(t=>t.destroy()),this._i3sSources.length=0}initialize(){const{view:t}=this,e=this.layerSource.layer;this._i3sSources=e.type==="building-scene"?this._getBuildingSceneI3SSources(t,e):[this._getSceneLayerI3SSource(t,e)]}async fetchCandidates(t,e){const r=await Promise.all(this._i3sSources.map(i=>i.fetchCandidates(t,e)));return $(e),r.flat()}refresh(){this._i3sSources.forEach(t=>t.refresh())}_getBuildingSceneI3SSources(t,e){return e.allSublayers.toArray().map(r=>r.type==="building-component"?new a({getLayerView:async()=>(await t.whenLayerView(e)).whenSublayerView(r),view:t}):null).filter(I)}_getSceneLayerI3SSource(t,e){return new a({getLayerView:async()=>{const r=await t.whenLayerView(e);return r.type==="scene-layer-graphics-3d"?void 0:r},view:t})}};o([s({constructOnly:!0})],c.prototype,"layerSource",void 0),o([s({constructOnly:!0})],c.prototype,"view",void 0),o([s({readOnly:!0})],c.prototype,"updating",null),o([s({readOnly:!0})],c.prototype,"availability",void 0),c=o([y("esri.views.interactive.snapping.featureSources.SceneLayerSnappingSource")],c);export{c as SceneLayerSnappingSource};
