import{V as p,d6 as m,v as o,x as e,d7 as s,J as a}from"./main-C1jnFJXF.js";import{S as n,y as l}from"./LayerView--mflzMiq.js";import"./preload-helper-ExcqyqRp.js";import"./Container-Cxa1fa2d.js";import"./MapView-a8i943Nc.js";import"./CollectionFlattener-ibiTG2xT.js";import"./workers-Cn0Q7zC8.js";import"./Queue-CmNWFva0.js";import"./intl-BZ4rVvqH.js";import"./projection-Vy0ZlKbO.js";import"./TileInfo-DjeRd3ie.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-BrF-JySq.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-wq5HmkiG.js";import"./signal-BCySYmLx.js";import"./Map-J3tYLbTp.js";import"./Basemap-C3OxGW7w.js";import"./loadAll-5aYWBoho.js";import"./PortalItem-Wo6yUEbz.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-BvBT-TXm.js";import"./common-DQOJ18NT.js";import"./Layer-yBJ5xxGH.js";import"./TimeExtent-DKSNJ8Bm.js";import"./GraphicsCollection-D07OzAOS.js";import"./HeightModelInfo-K3LMoSM2.js";import"./timeZoneUtils-BAL51Sog.js";import"./ReactiveMap-BIi0AGbF.js";import"./Query-Ckfmrrtp.js";import"./Field-LsRjlaGK.js";import"./fieldType-Db7hPrGE.js";import"./HighlightDefaults-BFAi_kk0.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./Tile-Du2tCxeG.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-C3lgASKe.js";import"./utils-BMNpR1Gg.js";import"./utils-DFsgVUQE.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-DIvnu_5f.js";import"./vec32-Hh3I5M3g.js";import"./unitBezier-B1N-tmtC.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-DC1tjEGm.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-DEOjCFU4.js";import"./Version-HFbi4Hao.js";import"./ColorBackground-CM_3PwB5.js";import"./parser-DfWy3AVI.js";import"./layerViewUtils-CG3vquhs.js";let r=class extends n(l){constructor(t){super(t),this.layerViews=new p}set layerViews(t){this._set("layerViews",m(t,this._get("layerViews")))}get updatingProgress(){return this.layerViews.length===0?1:this.layerViews.reduce((t,i)=>t+i.updatingProgress,0)/this.layerViews.length}attach(){this._updateStageChildren(),this.addAttachHandles(this.layerViews.on("after-changes",()=>this._updateStageChildren()))}detach(){this.container.removeAllChildren()}update(t){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((t,i)=>this.container.addChildAt(t.container,i))}};o([e({cast:s})],r.prototype,"layerViews",null),o([e({readOnly:!0})],r.prototype,"updatingProgress",null),r=o([a("esri.views.2d.layers.KnowledgeGraphLayerView2D")],r);const dt=r;export{dt as default};
