import{v as i,x as n,J as u,c9 as a,s as c,eY as h,Q as l,cS as y}from"./main-C1jnFJXF.js";import{d}from"./FeatureSet-DtKA3fDK.js";import{n as _,d as g}from"./FeatureLayerView2D-BjYh0Lv1.js";import f from"./FeatureFilter-hhIga31u.js";import"./preload-helper-ExcqyqRp.js";import"./Field-LsRjlaGK.js";import"./fieldType-Db7hPrGE.js";import"./UpdatingHandles-wq5HmkiG.js";import"./Container-Cxa1fa2d.js";import"./MapView-a8i943Nc.js";import"./CollectionFlattener-ibiTG2xT.js";import"./workers-Cn0Q7zC8.js";import"./Queue-CmNWFva0.js";import"./intl-BZ4rVvqH.js";import"./projection-Vy0ZlKbO.js";import"./TileInfo-DjeRd3ie.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-BrF-JySq.js";import"./uuid-Cl5lrJ4c.js";import"./signal-BCySYmLx.js";import"./Map-J3tYLbTp.js";import"./Basemap-C3OxGW7w.js";import"./loadAll-5aYWBoho.js";import"./PortalItem-Wo6yUEbz.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-BvBT-TXm.js";import"./common-DQOJ18NT.js";import"./Layer-yBJ5xxGH.js";import"./TimeExtent-DKSNJ8Bm.js";import"./GraphicsCollection-D07OzAOS.js";import"./HeightModelInfo-K3LMoSM2.js";import"./timeZoneUtils-BAL51Sog.js";import"./ReactiveMap-BIi0AGbF.js";import"./Query-Ckfmrrtp.js";import"./HighlightDefaults-BFAi_kk0.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./Tile-Du2tCxeG.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-C3lgASKe.js";import"./utils-BMNpR1Gg.js";import"./utils-DFsgVUQE.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-DIvnu_5f.js";import"./vec32-Hh3I5M3g.js";import"./unitBezier-B1N-tmtC.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-DC1tjEGm.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-DEOjCFU4.js";import"./Version-HFbi4Hao.js";import"./ColorBackground-CM_3PwB5.js";import"./parser-DfWy3AVI.js";import"./featureConversionUtils-DgTpzIiC.js";import"./OptimizedFeatureSet-DElmmwrI.js";import"./memoryEstimations-D28a58Kd.js";import"./labelingInfo-B-vg02Cj.js";import"./SimpleRenderer-CtNe7IFc.js";import"./commonProperties-B4q36lF7.js";import"./colorRamps-B9kEMOSc.js";import"./ColorStop-B-_19FAt.js";import"./visualVariableUtils-D3sN8mQX.js";import"./lengthUtils-DRVCuQO6.js";import"./UniqueValueRenderer-zmGSldef.js";import"./defaultCIMValues-CnsXYo_x.js";import"./enums-BJSSbDkD.js";import"./RendererLegendOptions-CisM7IbO.js";import"./styleUtils-T6QEfNTf.js";import"./RelationshipQuery-CJWPaQPa.js";import"./NormalizationBinParametersMixin-DkuTYjRb.js";import"./labelUtils-DAzlzjXq.js";import"./timeSupport-C4sAvbQq.js";import"./AttributeBinsFeatureSet-UMzh7wO9.js";import"./AttributeBinsQuery-B0mSyQbe.js";import"./queryUtils-DayB3KdG.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-BjyN89oQ.js";import"./LayerView--mflzMiq.js";import"./layerViewUtils-CG3vquhs.js";import"./TechniqueInstance-B7n-JRu7.js";import"./UpdateTracking2D-N5CVKe4_.js";import"./BidiEngine-DNnuvc1i.js";import"./Rect-Ig_8nRdp.js";import"./utils-Bo5cZB6_.js";import"./rasterizingUtils-BKDHC-Cb.js";import"./floatRGBA-BuIHwqNr.js";import"./dataViewUtils-B_RhWue0.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./FramebufferObject-BfqwiEJh.js";import"./VertexArrayObject-DOUsx_lm.js";import"./TileContainer-DcJBHBNO.js";import"./WGLContainer-DeK5jdX1.js";import"./ProgramTemplate-DOQV_Kij.js";import"./vec3f32-nZdmKIgz.js";import"./config-DoMhnbNN.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-DRObhDfq.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-V8VDhL2O.js";import"./ShaderBuilder-D9eZPxlo.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-CpmXMNb4.js";import"./CircularArray-CujHzHWW.js";import"./heatmapUtils-HQObO0Ak.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./SDFHelper-B2gvF3Ik.js";import"./parquet-DuE7-Q3_.js";import"./displayFilterUtils-DK4Lq-BQ.js";import"./FeatureEffect-CIb-BrOJ.js";import"./jsonUtils-2dYJ4H-1.js";import"./floorFilterUtils-DKzVzLpH.js";import"./popupUtils-C-KDC6_5.js";import"./RefreshableLayerView-27nUJbBg.js";const v=t=>{let e=class extends t{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}disconnect(){this._doDisconnect()}connect(){this._doConnect()}clear(){this._doClear()}constructor(...r){super(...r),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return(this._isUserPaused||this.suspended)&&this._streamConnectionStatus==="connected"?"paused":this._streamConnectionStatus}_onSuspendedChange(r){r?this._doPause():this._isUserPaused||this._doResume()}};return i([n()],e.prototype,"_isUserPaused",void 0),i([n({readOnly:!0})],e.prototype,"connectionStatus",null),i([n({type:f})],e.prototype,"filter",void 0),e=i([u("esri.views.layers.StreamLayerView")],e),e};let s=class extends v(g){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null}initialize(){this.addHandles([a(()=>this.layer.customParameters,async t=>{(await this.getWorker()).streamMessenger.updateCustomParameters(t)}),this.layer.on("send-message-to-socket",async t=>{(await this.getWorker()).streamMessenger.sendMessageToSocket(t)}),this.layer.on("send-message-to-client",async t=>{(await this.getWorker()).streamMessenger.sendMessageToClient(t),this._isUserPaused&&"type"in t&&t.type==="clear"&&this.incrementSourceRefreshVersion()}),a(()=>this.layer.purgeOptions,()=>this._update()),a(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor"),this._doResume()}destroy(){this._doPause()}get connectionError(){return this.pipelineErrorString?new c("stream-controller",this.pipelineErrorString):null}on(t,e){if(Array.isArray(t))return h(t.map(o=>this.on(o,e)));const r=["data-received","message-received"].includes(t);r&&this.getWorker().then(o=>o.streamMessenger.enableEvent(t,!0));const m=super.on(t,e),p=this;return l(()=>{m.remove(),r&&(p._workerProxy.closed||p.hasEventListener(t)||p.getWorker().then(o=>o.streamMessenger.enableEvent(t,!1)))})}async queryLatestObservations(t,e){if(!(this.layer.timeInfo?.endField||this.layer.timeInfo?.startField||this.layer.timeInfo?.trackIdField))throw new c("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");const r=await this.getWorker();return _(r.features.executeQueryForLatestObservations(this._cleanUpQuery(t),e).then(m=>{const p=d.fromJSON(m);return p.features.forEach(o=>{o.layer=this.layer,o.sourceLayer=this.layer}),p}),new d({features:[]}))}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}async queryObjectIds(t,e){return(await super.queryObjectIds(t,e)).filter(y)}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){this._refreshInterval!=null&&(clearInterval(this._refreshInterval),this._refreshInterval=null)}_doResume(){this._refreshInterval=setInterval(()=>this.incrementSourceRefreshVersion(),this.layer.updateInterval)}_doDisconnect(){this.getWorker().then(t=>t.streamMessenger.disconnect()),this._doPause()}_doConnect(){this.getWorker().then(t=>t.streamMessenger.connect()),this.resume()}_doClear(){this.getWorker().then(t=>t.streamMessenger.clear()),this._refreshInterval==null&&this.incrementSourceRefreshVersion()}_createClientOptions(){const t=super._createClientOptions(),e=this;return{...t,get container(){return e.featureContainer},setProperty:r=>{this.set(r.propertyName,r.value)}}}};i([n()],s.prototype,"pipelineConnectionStatus",void 0),i([n()],s.prototype,"pipelineErrorString",void 0),i([n({readOnly:!0})],s.prototype,"connectionError",null),i([n({readOnly:!0})],s.prototype,"_streamConnectionStatus",null),s=i([u("esri.views.2d.layers.StreamLayerView2D")],s);const be=s;export{be as default};
