import{bo as f,U as d,d3 as h,c9 as v,cb as S,dp as w,cJ as b,bF as k,dq as E,v as p,x as m,J as F,bp as C,y as $}from"./main-C1jnFJXF.js";import{t as P}from"./memoize-DsJmrG76.js";import{h as A}from"./UpdatingHandles-wq5HmkiG.js";import{Q as G,L as O,O as H}from"./projection-Vy0ZlKbO.js";import{a as I}from"./FeatureMetadata-di175nXP.js";import{s as R}from"./featureConversionUtils-DgTpzIiC.js";import{s as Z}from"./OptimizedFeatureSet-DElmmwrI.js";import{u as x,f as L}from"./executeQueryForSnapping-DdmvN3ez.js";import{L as z}from"./QueryEngine-DKECB3OO.js";import{Z as M}from"./FieldsIndex-Be_Wfpai.js";import{y as W,E as q,h as J}from"./SketchOptions-Pblv600W.js";import{N as u}from"./utils-DMfmxwYz.js";import{o as N,i as j}from"./queryEngineUtils-ATVuaMoZ.js";import{i as y,r as T,n as g}from"./symbologySnappingCandidates-MdJNLIox.js";import{g as U}from"./Scheduler-DIvnu_5f.js";import"./preload-helper-ExcqyqRp.js";import"./normalizeUtils-C3lgASKe.js";import"./utils-BMNpR1Gg.js";import"./utils-DFsgVUQE.js";import"./dataViewUtils-B_RhWue0.js";import"./enums-Dk3osxpS.js";import"./getDataTypeBytes-DflDeYgv.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./vec2f32-BbH2jxlN.js";import"./defaultCIMValues-CnsXYo_x.js";import"./enums-BJSSbDkD.js";import"./definitions-CPtb4TQS.js";import"./UpdateTracking2D-N5CVKe4_.js";import"./BidiEngine-DNnuvc1i.js";import"./Rect-Ig_8nRdp.js";import"./utils-Bo5cZB6_.js";import"./rasterizingUtils-BKDHC-Cb.js";import"./floatRGBA-BuIHwqNr.js";import"./Tile-Du2tCxeG.js";import"./vec2-maR1OrZI.js";import"./common-DQOJ18NT.js";import"./Queue-CmNWFva0.js";import"./ReactiveMap-BIi0AGbF.js";import"./signal-BCySYmLx.js";import"./quickselect-QQC62dOK.js";import"./Query-Ckfmrrtp.js";import"./Field-LsRjlaGK.js";import"./fieldType-Db7hPrGE.js";import"./TimeExtent-DKSNJ8Bm.js";import"./queryUtils-DayB3KdG.js";import"./json-Wa8cmqdu.js";import"./timeSupport-LDFZO9e2.js";import"./TimeOnly-C9PYxWjL.js";import"./quantizationUtils-BGOp-eYe.js";import"./intl-BZ4rVvqH.js";import"./labelUtils-DAzlzjXq.js";import"./memoryEstimations-D28a58Kd.js";import"./PooledRBush-BJ7UXdR-.js";import"./optimizedFeatureQueryEngineAdapter-9v48KbLH.js";import"./WhereClauseCache-Iwe8eau-.js";import"./LRUCache-CDr563-s.js";import"./MemCache-BYPidgkh.js";import"./WhereClause-BW-E7lLT.js";import"./QueryEngineCapabilities-DZTubngj.js";import"./utils-BvCyOLnV.js";import"./heatmapUtils-HQObO0Ak.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./utils-CcQEgChr.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-BvBT-TXm.js";import"./timeZoneUtils-BAL51Sog.js";import"./ClassBreaksDefinition-uW99KtWX.js";import"./SnappingCandidate-O5eRSE6e.js";import"./FixedIntervalBinParameters-BjyN89oQ.js";import"./NormalizationBinParametersMixin-DkuTYjRb.js";import"./vec32-Hh3I5M3g.js";import"./vec2f64-DohEyf3f.js";import"./geodesicUtils-BsZR6UD9.js";import"./plane-ChTLAUe9.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-aQ5IuZRd.js";import"./sphere-CWce3mtJ.js";import"./mat3-CruJiiUv.js";import"./projectVectorToVector-Bspt7bR8.js";import"./projectPointToVector-BX5aac8C.js";import"./MapView-a8i943Nc.js";import"./CollectionFlattener-ibiTG2xT.js";import"./workers-Cn0Q7zC8.js";import"./TileInfo-DjeRd3ie.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-BrF-JySq.js";import"./uuid-Cl5lrJ4c.js";import"./Map-J3tYLbTp.js";import"./Basemap-C3OxGW7w.js";import"./loadAll-5aYWBoho.js";import"./PortalItem-Wo6yUEbz.js";import"./Layer-yBJ5xxGH.js";import"./GraphicsCollection-D07OzAOS.js";import"./HeightModelInfo-K3LMoSM2.js";import"./HighlightDefaults-BFAi_kk0.js";import"./ViewingMode-HRfKv6NR.js";import"./unitBezier-B1N-tmtC.js";import"./Texture-DC1tjEGm.js";import"./imageUtils-DEOjCFU4.js";import"./Version-HFbi4Hao.js";import"./ColorBackground-CM_3PwB5.js";import"./ElevationInfo-Bj1HhVNU.js";import"./lengthUtils-DRVCuQO6.js";import"./quantityUtils-X1efczOu.js";import"./parser-DfWy3AVI.js";import"./cimSymbolUtils-DtFQKqoQ.js";import"./RouteLayerInteraction-CcNxKN1x.js";import"./GraphicsLayer-BAFRl99x.js";import"./ScaleRangeLayer-BqqV6BhL.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-2dYJ4H-1.js";import"./RouteLayerView2D-DCpIOptR.js";import"./LayerView--mflzMiq.js";import"./Container-Cxa1fa2d.js";import"./layerViewUtils-CG3vquhs.js";import"./GraphicContainer-Cg1-DsoU.js";import"./AGraphicContainer-CXuw_Bx3.js";import"./TechniqueInstance-B7n-JRu7.js";import"./FramebufferObject-BfqwiEJh.js";import"./VertexArrayObject-DOUsx_lm.js";import"./TileContainer-DcJBHBNO.js";import"./WGLContainer-DeK5jdX1.js";import"./ProgramTemplate-DOQV_Kij.js";import"./vec3f32-nZdmKIgz.js";import"./config-DoMhnbNN.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-DRObhDfq.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-V8VDhL2O.js";import"./ShaderBuilder-D9eZPxlo.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-CpmXMNb4.js";import"./GraphicsView2D-DfPixkkt.js";import"./OverrideHelper-B9ph2oZD.js";import"./colorUtils-DZc_maoS.js";import"./dehydratedFeatures-BLKBpu6D.js";import"./VertexSnappingCandidate-CdVHrvWA.js";import"./PointSnappingHint-B9R3S2Ls.js";const _="graphics-collections";let n=class extends f{get updating(){return this._updatingHandles.updating}get _hasZ(){const t=this.view;return t!=null&&t.type==="3d"&&this.layerSource.layer.type!=="map-notes"}get _snappingElevationAligner(){const{view:t}=this,{layer:e}=this.layerSource,i=t!=null&&t.type==="3d";if(!i||e.type==="map-notes")return y();const o=async(r,s)=>(await C(t.whenLayerView(e),s)).elevationAlignPointsInFeatures(r,s);return y(i,{elevationInfo:e.elevationInfo,alignPointsInFeatures:o})}get _snappingElevationFilter(){const{view:t}=this,e=t!=null&&t.type==="3d"&&this.layerSource.layer.type!=="map-notes";return T(e)}get _symbologySnappingFetcher(){const{view:t}=this,{layer:e}=this.layerSource,i=t!=null&&t.type==="3d",o=this._extrudedPolygonSymbolsCount>0;return i&&e.type!=="map-notes"&&o?g(o,async(r,s)=>{const a=await t.whenLayerView(e);return d(s),a.queryForSymbologySnapping({candidates:r,spatialReference:t.spatialReference},s)}):g()}constructor(t){super(t),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0,this._updatingHandles=new A,this._memoizedMakeGetGroundElevation=P(j)}destroy(){for(const t of this._pendingAdds)t.task.abort();this._pendingAdds.length=0,this._mapSources(t=>this._destroySource(t)),this._updatingHandles.destroy()}initialize(){this._updatingHandles.add(()=>this.getGraphicsLayers(),i=>{this._updatingHandles.removeHandles(_);for(const o of i)this._addMany(o.graphics.toArray()),this.addHandles([o.on("graphic-update",r=>this._onGraphicUpdate(r)),this._updatingHandles.addOnCollectionChange(()=>o.graphics,r=>this._onGraphicsChanged(r))],_)},h);const{view:t}=this,{layer:e}=this.layerSource;t!=null&&t.type==="3d"&&e.type!=="map-notes"&&t.elevationProvider&&this.addHandles([t.elevationProvider.on("elevation-change",({context:i})=>{W(i,e.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()}),v(()=>e.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),h),S(()=>e,["edits","apply-edits","graphic-update"],()=>this._symbologySnappingFetcher.notifySymbologyChange())])}async fetchCandidates(t,e){const{point:i,coordinateHelper:{spatialReference:o}}=t,r=await w(this._mapSources(l=>this._fetchCandidatesForSource(l,t,e)));d(e);const s=this._memoizedMakeGetGroundElevation(this.view,o),a=r.flat().map(l=>N(l,s));return q(i,a),a}async _fetchCandidatesForSource(t,e,i){const o=J(e,this.view?.type??"2d"),r=await x(t.queryEngine,o,i);d(i);const s=await this._snappingElevationAligner.alignCandidates(r.candidates,e.coordinateHelper.spatialReference,i);d(i);const a=await this._symbologySnappingFetcher.fetch(s,i);d(i);const l=a.length===0?s:[...s,...a];return this._snappingElevationFilter.filter(o,l)}refresh(){}_onGraphicUpdate(t){if(this.getGraphicsLayers().some(e=>e.graphics.includes(t.graphic)))switch(t.property){case"geometry":case"visible":this._remove(t.graphic),this._addMany([t.graphic])}}_onGraphicsChanged(t){for(const e of t.removed)this._remove(e);this._addMany(t.added)}_addMany(t){const e=[],i=new Map;for(const o of t)o.geometry!=null&&(this._needsInitializeProjection(o.geometry.spatialReference)?(e.push(o.geometry.spatialReference),i.set(o.uid,o)):this._add(o));this._createPendingAdd(e,i)}_createPendingAdd(t,e){if(!t.length)return;const i=b(async s=>{await G(t.map(a=>({source:a,dest:this.spatialReference})),{signal:s}),this._markLoadedSpatialReferences(t);for(const a of e.values())this._add(a)});this._updatingHandles.addPromise(i.promise);const o={task:i,graphics:e},r=()=>$(this._pendingAdds,o);i.promise.then(r,r),this._pendingAdds.push(o)}_markLoadedSpatialReferences(t){for(const e of t){e.wkid!=null&&this._loadedWkids.add(e.wkid);const i=e.wkt2||e.wkt;i&&this._loadedWkts.add(i)}}_add(t){if(t.geometry==null||!t.visible)return;let e=t.geometry;if(e.type==="mesh")return;e.type==="extent"&&(e=k.fromExtent(e));const i=this._ensureSource(e.type);if(i==null)return;const o=this._createOptimizedFeature(t.uid,e);o!=null&&(i.featureStore.add(o),u(t.symbol)&&this._extrudedPolygonSymbolsCount++)}_needsInitializeProjection(t){if(t.wkid!=null&&this._loadedWkids.has(t.wkid))return!1;const e=t.wkt2||t.wkt;return(!e||!this._loadedWkts.has(e))&&!O(t,this.spatialReference)}_createOptimizedFeature(t,e){const i=H(I(e),this.spatialReference);if(!i)return null;const o=this._ensureGeometryHasZ(i),r=R(o,this._hasZ,!1);return new Z(r,{[c]:t},null,t)}_ensureGeometryHasZ(t){if(!this._hasZ)return t;const e=o=>{for(;o.length<3;)o.push(0)},i=t.clone();switch(i.hasZ=!0,i.type){case"point":i.z=i.z??0;break;case"multipoint":i.points.forEach(e);break;case"polyline":i.paths.forEach(o=>o.forEach(e));break;case"polygon":i.rings.forEach(o=>o.forEach(e))}return i}_ensureSource(t){const e=this._sources[t];if(e!=null)return e;const i=this._createSource(t);return this._sources[t]=i,i}_createSource(t){const e=E.toJSON(t),i=this._hasZ,o=new L({geometryType:e,hasZ:i,hasM:!1});return{featureStore:o,queryEngine:new z({featureStore:o,fieldsIndex:M.fromLayerJSON({fields:[{name:c,type:"esriFieldTypeOID",alias:c}]}),geometryType:e,hasM:!1,hasZ:i,objectIdField:c,spatialReference:this.spatialReference,priority:U.SNAPPING,scheduler:this.view!=null&&this.view.type==="3d"?this.view.resourceController.scheduler:null}),type:t}}_remove(t){this._mapSources(e=>this._removeFromSource(e,t));for(const e of this._pendingAdds)e.graphics.delete(t.uid),e.graphics.size===0&&e.task.abort()}_removeFromSource(t,e){const i=e.uid;t.featureStore.has(i)&&(t.featureStore.removeById(e.uid),u(e.symbol)&&this._extrudedPolygonSymbolsCount--)}_destroySource(t){t.queryEngine.destroy(),this._sources[t.type]=null}_mapSources(t){const{point:e,polygon:i,polyline:o,multipoint:r}=this._sources,s=[];return e!=null&&s.push(t(e)),i!=null&&s.push(t(i)),o!=null&&s.push(t(o)),r!=null&&s.push(t(r)),s}};p([m()],n.prototype,"getGraphicsLayers",void 0),p([m({constructOnly:!0})],n.prototype,"layerSource",void 0),p([m({constructOnly:!0})],n.prototype,"spatialReference",void 0),p([m({constructOnly:!0})],n.prototype,"view",void 0),p([m({readOnly:!0})],n.prototype,"updating",null),p([m({readOnly:!0})],n.prototype,"availability",void 0),p([m()],n.prototype,"_hasZ",null),p([m()],n.prototype,"_snappingElevationAligner",null),p([m()],n.prototype,"_snappingElevationFilter",null),p([m()],n.prototype,"_symbologySnappingFetcher",null),p([m()],n.prototype,"_extrudedPolygonSymbolsCount",void 0),n=p([F("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],n);const c="OBJECTID";export{n as GraphicsSnappingSource};
