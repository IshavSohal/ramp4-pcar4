import{at as v,au as B,av as w,aw as y,ax as b}from"./main-C1jnFJXF.js";import{j as d}from"./mat4-BvBT-TXm.js";import{v as j,b as e,x as k}from"./quat-vjie-7ql.js";import{e as x}from"./quatf64-aQ5IuZRd.js";import{s as q,_ as z,A as C,B as D}from"./vec32-Hh3I5M3g.js";function o(t=F){return[t[0],t[1],t[2],t[3]]}function f(t,r,n=o()){return q(n,t),n[3]=r,n}function _(t,r,n){return z(n,t,r),C(n,n),n[3]=-D(t,r),n}function g(t,r=o()){const n=d(u,t);return A(r,v(j(r,n))),r}function i(t,r,n=o()){return e(u,t,c(t)),e(m,r,c(r)),k(u,m,u),A(n,v(j(n,u)))}function h(t,r,n,s=o()){return f(B,t,a),f(w,r,$),f(y,n,p),i(a,$,a),i(a,p,s),s}function l(t){return t}function E(t){return t[3]}function c(t){return b(t[3])}function A(t,r){return t[3]=r,t}const F=[0,0,1,0],u=x(),m=x();o();const a=o(),$=o(),p=o();export{F as B,h as d,o as j,g as k,f as q,_ as v,l as w,E as y,c as z};
