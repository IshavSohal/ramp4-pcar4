import{bo as V,ax as U,n as X,Z as Y,v as n,x as a,J as D}from"./main-C1jnFJXF.js";import{w as E}from"./vec32-Hh3I5M3g.js";import{U as F,O as G}from"./projection-Vy0ZlKbO.js";import{P as W}from"./normalizeUtils-C3lgASKe.js";import{u as H}from"./scaleUtils-DG9gQKwQ.js";import{l as I,u as J,t as T}from"./gridUtils-CEBzog4f.js";import{f as c,d as Z,c as _}from"./SketchOptions-Pblv600W.js";import{r as j,a as k}from"./RouteLayerInteraction-CcNxKN1x.js";import"./preload-helper-ExcqyqRp.js";import"./common-DQOJ18NT.js";import"./utils-BMNpR1Gg.js";import"./utils-DFsgVUQE.js";import"./geodesicUtils-BsZR6UD9.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./plane-ChTLAUe9.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-Dk4dwAN8.js";import"./quatf64-aQ5IuZRd.js";import"./sphere-CWce3mtJ.js";import"./mat4-BvBT-TXm.js";import"./mat3-CruJiiUv.js";import"./TimeExtent-DKSNJ8Bm.js";import"./projectVectorToVector-Bspt7bR8.js";import"./projectPointToVector-BX5aac8C.js";import"./Query-Ckfmrrtp.js";import"./Field-LsRjlaGK.js";import"./fieldType-Db7hPrGE.js";import"./MapView-a8i943Nc.js";import"./CollectionFlattener-ibiTG2xT.js";import"./workers-Cn0Q7zC8.js";import"./Queue-CmNWFva0.js";import"./intl-BZ4rVvqH.js";import"./TileInfo-DjeRd3ie.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-BrF-JySq.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-wq5HmkiG.js";import"./signal-BCySYmLx.js";import"./Map-J3tYLbTp.js";import"./Basemap-C3OxGW7w.js";import"./loadAll-5aYWBoho.js";import"./PortalItem-Wo6yUEbz.js";import"./mat4f32-DcsiF_Rp.js";import"./Layer-yBJ5xxGH.js";import"./GraphicsCollection-D07OzAOS.js";import"./HeightModelInfo-K3LMoSM2.js";import"./timeZoneUtils-BAL51Sog.js";import"./ReactiveMap-BIi0AGbF.js";import"./HighlightDefaults-BFAi_kk0.js";import"./ViewingMode-HRfKv6NR.js";import"./Tile-Du2tCxeG.js";import"./quickselect-QQC62dOK.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-DIvnu_5f.js";import"./unitBezier-B1N-tmtC.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-DC1tjEGm.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-DEOjCFU4.js";import"./Version-HFbi4Hao.js";import"./ColorBackground-CM_3PwB5.js";import"./ElevationInfo-Bj1HhVNU.js";import"./lengthUtils-DRVCuQO6.js";import"./quantityUtils-X1efczOu.js";import"./GraphicsLayer-BAFRl99x.js";import"./ScaleRangeLayer-BqqV6BhL.js";import"./layerContainerType-C5CzMsLd.js";import"./jsonUtils-2dYJ4H-1.js";import"./parser-DfWy3AVI.js";import"./RouteLayerView2D-DCpIOptR.js";import"./LayerView--mflzMiq.js";import"./Container-Cxa1fa2d.js";import"./layerViewUtils-CG3vquhs.js";import"./GraphicContainer-Cg1-DsoU.js";import"./AGraphicContainer-CXuw_Bx3.js";import"./TechniqueInstance-B7n-JRu7.js";import"./UpdateTracking2D-N5CVKe4_.js";import"./BidiEngine-DNnuvc1i.js";import"./OptimizedFeatureSet-DElmmwrI.js";import"./memoryEstimations-D28a58Kd.js";import"./Rect-Ig_8nRdp.js";import"./enums-BJSSbDkD.js";import"./utils-Bo5cZB6_.js";import"./defaultCIMValues-CnsXYo_x.js";import"./rasterizingUtils-BKDHC-Cb.js";import"./floatRGBA-BuIHwqNr.js";import"./dataViewUtils-B_RhWue0.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./FramebufferObject-BfqwiEJh.js";import"./VertexArrayObject-DOUsx_lm.js";import"./TileContainer-DcJBHBNO.js";import"./WGLContainer-DeK5jdX1.js";import"./ProgramTemplate-DOQV_Kij.js";import"./vec3f32-nZdmKIgz.js";import"./config-DoMhnbNN.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-DgTpzIiC.js";import"./FeatureCommandQueue-DRObhDfq.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-V8VDhL2O.js";import"./ShaderBuilder-D9eZPxlo.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-CpmXMNb4.js";import"./GraphicsView2D-DfPixkkt.js";import"./FieldsIndex-Be_Wfpai.js";import"./OverrideHelper-B9ph2oZD.js";import"./colorUtils-DZc_maoS.js";import"./quantizationUtils-BGOp-eYe.js";import"./FeatureMetadata-di175nXP.js";import"./queryUtils-DayB3KdG.js";import"./json-Wa8cmqdu.js";import"./timeSupport-LDFZO9e2.js";import"./TimeOnly-C9PYxWjL.js";import"./labelUtils-DAzlzjXq.js";import"./dehydratedFeatures-BLKBpu6D.js";let p=class extends V{constructor(t){super(t),this.options=null}destroy(){this._set("options",null)}get grid(){return this.view.grid}get effectiveViewRotation(){return this.grid?.rotateWithMap?0:U(this.view.rotation??0)}get gridRotation(){return U(this.grid?.rotation??0)}get gridCenter(){const{spatialReference:t,grid:i}=this;if(!i||!t||!F(i.center.spatialReference,t))return null;try{const r=G(i.center,t),e=t.isWrappable&&this.view?.center!=null?W(r.x,this.view.center.x,t):r.x;return c(e,r.y,r.z)}catch(r){return X.getLogger(this).errorOnce("Grid Snapping - Failed to project grid center.",r),null}}get offsetScaleFactor(){const{pixelsPerStride:t,grid:i}=this;if(!i||!t)return 1;const{majorLineInterval:r,dynamicScaling:e}=i;return r<1?null:I(r,t,e)}get spatialReference(){return this.view.spatialReference}get gridMetersPerStride(){const{grid:t}=this;return t?Y(t.spacing,t.units,"meters"):null}get viewMetersPerPixel(){const{viewMetersPerSRUnit:t}=this;return t==null?null:t*H(this.view.scale,this.view.spatialReference)}get viewMetersPerSRUnit(){const{spatialReference:t}=this.view;return this.gridCenter?J(this.gridCenter[0],this.gridCenter[1],t):null}get pixelsPerStride(){const{gridMetersPerStride:t,viewMetersPerPixel:i}=this;return i&&t?t/i:null}get updating(){return this.grid!=null&&this.spatialReference!=null&&this.viewMetersPerSRUnit==null}async fetchCandidates(t,i,r){const{options:e,view:o}=this;if(!e?.effectiveGridEnabled||!o.grid||r.feature?.attributes&&Z in r.feature.attributes)return[];const s=r.coordinateHelper.arrayToPoint(t),m=e.distance*(r.pointer==="touch"?e.touchSensitivityMultiplier:1);return this.fetchCandidatesSync(s,m)}fetchCandidatesSync(t,i){const r=[],{grid:e,effectiveViewRotation:o,gridRotation:s,gridCenter:m,viewMetersPerPixel:h,viewMetersPerSRUnit:d,offsetScaleFactor:S,spatialReference:g,gridMetersPerStride:C,pixelsPerStride:$}=this;if(!(e&&h&&d&&m&&g&&S&&C&&$)||!e.dynamicScaling&&$<T||!F(t.spatialReference,g))return r;const y=G(t,g),L=c(y.x,y.y,y.z),l=f(L,-s,m,-o),P=C/d*S,u=q(l,P,m),{shouldSnapX:v,shouldSnapY:w}=A(u,l,i,h,d);if(!v&&!w)return[];const O=c((v?u:l)[0],(w?u:l)[1]),M=f(O,s,m,o),b=f(u,s,m,o);if(w){const R=z(u,l,P,"y"),x=f(R,s,m,o);r.push(new j({lineStart:b,lineEnd:x,targetPoint:M,isDraped:!1}))}if(v){const R=z(u,l,P,"x"),x=f(R,s,m,o);r.push(new j({lineStart:b,lineEnd:x,targetPoint:M,isDraped:!1}))}return v&&w&&r.push(new k(M,r[0],r[1],!1)),r}};n([a({constructOnly:!0})],p.prototype,"view",void 0),n([a()],p.prototype,"options",void 0),n([a()],p.prototype,"grid",null),n([a()],p.prototype,"effectiveViewRotation",null),n([a()],p.prototype,"gridRotation",null),n([a()],p.prototype,"gridCenter",null),n([a()],p.prototype,"offsetScaleFactor",null),n([a()],p.prototype,"spatialReference",null),n([a()],p.prototype,"gridMetersPerStride",null),n([a()],p.prototype,"viewMetersPerPixel",null),n([a()],p.prototype,"viewMetersPerSRUnit",null),n([a()],p.prototype,"pixelsPerStride",null),n([a()],p.prototype,"updating",null),p=n([D("esri.views.interactive.snapping.GridSnappingEngine")],p);const f=(t,i,r,e)=>{const o=_(t[0],t[1],t[2]);return E(o,E(o,o,r,i),r,e)},q=(t,i,r)=>{const e=(t[0]-r[0])/i,o=(t[1]-r[1])/i,s=Math.trunc(e),m=Math.trunc(o),h=Math.round(e%1),d=Math.round(o%1),S=r[0]+(s+h)*i,g=r[1]+(m+d)*i;return c(S,g)},A=(t,i,r,e,o)=>{if(e<=0)return{shouldSnapX:!1,shouldSnapY:!1};const s=(t[0]-i[0])/e,m=(t[1]-i[1])/e;return{shouldSnapX:Math.abs(s*o)<r,shouldSnapY:Math.abs(m*o)<r}},z=(t,i,r,e)=>{if(e==="y"){const s=i[0]>t[0]?1:-1;return c(t[0]+r*s,t[1])}const o=i[1]>t[1]?1:-1;return c(t[0],t[1]+r*o)};export{p as GridSnappingEngine};
