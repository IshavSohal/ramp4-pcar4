import{o as s,q as r,z as f,eo as m,G as l,O as y,k as E,aq as v,x as I,v as w,fe as g}from"./main-BfV_Ya13.js";import{m as u}from"./lengthUtils-DmzQjRRT.js";var a;let n=a=class extends f{constructor(e){super(e)}async collectRequiredFields(e,t){return m(e,t,this.expression)}clone(){return new a({expression:this.expression,title:this.title})}equals(e){return this.expression===e.expression&&this.title===e.title}};s([r({type:String,json:{write:{isRequired:!0}}})],n.prototype,"expression",void 0),s([r({type:String,json:{write:!0}})],n.prototype,"title",void 0),n=a=s([l("esri.symbols.support.FeatureExpressionInfo")],n);const d=n;function j(e){return!!e&&u[e]!=null}function b(e){return 1/(u[e]||1)}function q(){const e=Object.keys(u);return y(e,"decimal-degrees"),e.sort(),e}const F=q();var p;const i=E()({onTheGround:"on-the-ground",relativeToGround:"relative-to-ground",relativeToScene:"relative-to-scene",absoluteHeight:"absolute-height"}),x=new v({foot:"feet",kilometer:"kilometers",meter:"meters",mile:"miles","us-foot":"us-feet",yard:"yards"});let o=p=class extends f{constructor(e){super(e),this.featureExpressionInfo=void 0,this.offset=null}readFeatureExpressionInfo(e,t){return e??(t.featureExpression&&t.featureExpression.value===0?{expression:"0"}:void 0)}writeFeatureExpressionInfo(e,t,h,c){t[h]=e.write({},c),e.expression==="0"&&(t.featureExpression={value:0})}get mode(){const{offset:e,featureExpressionInfo:t}=this;return this._isOverridden("mode")?this._get("mode"):e!=null||t?"relative-to-ground":"on-the-ground"}set mode(e){this._override("mode",e)}set unit(e){this._set("unit",e)}write(e,t){return this.offset||this.mode||this.featureExpressionInfo||this.unit?super.write(e,t):null}clone(){return new p({mode:this.mode,offset:this.offset,featureExpressionInfo:this.featureExpressionInfo?this.featureExpressionInfo.clone():void 0,unit:this.unit})}equals(e){return this.mode===e.mode&&this.offset===e.offset&&this.unit===e.unit&&g(this.featureExpressionInfo,e.featureExpressionInfo)}};s([r({type:d,json:{write:!0}})],o.prototype,"featureExpressionInfo",void 0),s([I("featureExpressionInfo",["featureExpressionInfo","featureExpression"])],o.prototype,"readFeatureExpressionInfo",null),s([w("featureExpressionInfo",{featureExpressionInfo:{type:d},"featureExpression.value":{type:[0]}})],o.prototype,"writeFeatureExpressionInfo",null),s([r({type:i.apiValues,nonNullable:!0,json:{type:i.jsonValues,read:i.read,write:{writer:i.write,isRequired:!0}}})],o.prototype,"mode",null),s([r({type:Number,json:{write:!0}})],o.prototype,"offset",void 0),s([r({type:F,json:{type:String,read:x.read,write:x.write}})],o.prototype,"unit",null),o=p=s([l("esri.symbols.support.ElevationInfo")],o);const S=o;export{j as e,S as h,b as n};
