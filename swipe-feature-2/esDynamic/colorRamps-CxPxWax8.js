import{o as t,q as e,G as p,z as g,b1 as C,bg as c,bh as u,aB as i}from"./main-BfV_Ya13.js";let l=class extends g{constructor(o){super(o),this.type=null}};t([e({readOnly:!0,json:{read:!1,write:!0}})],l.prototype,"type",void 0),l=t([p("esri.rest.support.ColorRamp")],l);const a=l;var m;let r=m=class extends a{constructor(o){super(o),this.algorithm=null,this.fromColor=null,this.toColor=null,this.type="algorithmic"}clone(){return new m({fromColor:i(this.fromColor),toColor:i(this.toColor),algorithm:this.algorithm})}};t([C({esriCIELabAlgorithm:"cie-lab",esriHSVAlgorithm:"hsv",esriLabLChAlgorithm:"lab-lch"})],r.prototype,"algorithm",void 0),t([e({type:c,json:{type:[u],write:!0}})],r.prototype,"fromColor",void 0),t([e({type:c,json:{type:[u],write:!0}})],r.prototype,"toColor",void 0),t([e({type:["algorithmic"]})],r.prototype,"type",void 0),r=m=t([p("esri.rest.support.AlgorithmicColorRamp")],r);const n=r;var h;let s=h=class extends a{constructor(o){super(o),this.colorRamps=null,this.type="multipart"}clone(){return new h({colorRamps:i(this.colorRamps)})}};t([e({type:[n],json:{write:!0}})],s.prototype,"colorRamps",void 0),t([e({type:["multipart"]})],s.prototype,"type",void 0),s=h=t([p("esri.rest.support.MultipartColorRamp")],s);const y=s,d={key:"type",base:a,typeMap:{algorithmic:n,multipart:y}};function v(o){return o?.type?o.type==="algorithmic"?n.fromJSON(o):o.type==="multipart"?y.fromJSON(o):null:null}export{y as a,d as m,v as p};
