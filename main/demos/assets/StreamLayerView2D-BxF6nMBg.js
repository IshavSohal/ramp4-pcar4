import{v as i,x as n,J as c,a6 as a,s as d,fd as h,Q as l,df as y}from"./main--9kI-57S.js";import{d as u}from"./FeatureSet-BhrUnEg_.js";import{n as _,d as g}from"./FeatureLayerView2D-BA-SChRy.js";import f from"./FeatureFilter-BZLz8DfY.js";import"./preload-helper-ExcqyqRp.js";import"./Field-CbtVK39K.js";import"./fieldType-D9-MKAzf.js";import"./UpdatingHandles-Da0U7ixU.js";import"./EffectView-DpOBKYUj.js";import"./parser-CFGL7rcI.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-CN5YPmFJ.js";import"./common-DQOJ18NT.js";import"./featureConversionUtils-DPNJV2qn.js";import"./OptimizedFeatureSet-D4QWwRWE.js";import"./memoryEstimations-nGMt6ZDA.js";import"./OptimizedGeometry-COuSzxCi.js";import"./labelingInfo-ZcxfoE-K.js";import"./uuid-Cl5lrJ4c.js";import"./Query-s4OWgzp8.js";import"./TimeExtent-Cj1IsTRx.js";import"./SimpleRenderer-DO73pRBi.js";import"./commonProperties-BvC2GHau.js";import"./colorRamps-CJJFORDN.js";import"./ColorStop-o3BegBOS.js";import"./visualVariableUtils-C5z7YlPb.js";import"./lengthUtils-t0RFrRRR.js";import"./UniqueValueRenderer-B4ciwr1H.js";import"./diffUtils-E3Zy5FJ9.js";import"./RendererLegendOptions-CBhH9xwn.js";import"./styleUtils-DRLQlNHK.js";import"./RelationshipQuery-DTYmcZkO.js";import"./NormalizationBinParametersMixin-QA8Xh_3O.js";import"./labelUtils-DxssOj9N.js";import"./timeSupport-BqktxED7.js";import"./globalCss-CaymBRPv.js";import"./Queue-C03o9OMu.js";import"./signal-BpaFLAmX.js";import"./Version-3VEjIB5x.js";import"./AttributeBinsFeatureSet-CmIpZ-zM.js";import"./AttributeBinsQuery-C_9Y4vTH.js";import"./queryUtils-CJKPhWNf.js";import"./projection-Dy2GAVnS.js";import"./normalizeUtils-CBogaMwU.js";import"./utils-DIMA5Iam.js";import"./utils-UJhLC6dM.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-Rx8blPKL.js";import"./timeZoneUtils-CRyZ7C5H.js";import"./LayerView2D-CsDT183E.js";import"./utils-BQBvadb7.js";import"./Container-S2LTM9Qz.js";import"./MapView-lOxwLlWz.js";import"./CollectionFlattener-CtYCQH6r.js";import"./workers-CxFC35HG.js";import"./intl-Cc325E6l.js";import"./TileInfo-HtLUmSZ_.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-C2RFNYCp.js";import"./Map-CpM7uL_J.js";import"./Basemap-Djt1-Qpl.js";import"./loadAll-C6eMuRwx.js";import"./PortalItem-DNJSQBuR.js";import"./Layer-lQsarWeE.js";import"./GraphicsCollection-Dipxk08l.js";import"./HeightModelInfo-CtAbT4RX.js";import"./ReactiveMap-DAvwxLgh.js";import"./IViewEvents-Bci6PjlS.js";import"./HighlightDefaults-DDxgLCJY.js";import"./a11yUtils-DZtIPDIo.js";import"./heightModelInfoUtils-VUXjmkq1.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./mat2d-D9DBP-jx.js";import"./mat2df32-orApM5a3.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-z6WQlRQx.js";import"./vec32-DasYFCNI.js";import"./unitBezier-B1N-tmtC.js";import"./Tile-DufRzora.js";import"./quickselect-QQC62dOK.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-BSeF64eo.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-B82ta9Tl.js";import"./themeUtils-C3zvZbsE.js";import"./ColorBackground-CZ8aZ7p1.js";import"./layerViewUtils-DBgkbNRC.js";import"./TechniqueInstance-BHftlaU7.js";import"./UpdateTracking2D-C7VmLSmR.js";import"./dataViewUtils-CecS6Adw.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./FramebufferObject-ix_aj_q0.js";import"./VertexArrayObject-DSdJE851.js";import"./TileContainer-BjojR960.js";import"./WGLContainer-DauwtFT3.js";import"./ProgramTemplate-BX_JbxGB.js";import"./vec3f32-nZdmKIgz.js";import"./config-DoMhnbNN.js";import"./enums-BJSSbDkD.js";import"./earcut-Lltz9D9k.js";import"./FeatureCommandQueue-DqyrigBf.js";import"./CIMSymbolHelper-DSPuVoRS.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-BmYI-3bD.js";import"./Rect-CJ0LkIsC.js";import"./utils-BRg6PM3S.js";import"./defaultCIMValues-DII_GG3u.js";import"./rasterizingUtils-BSfPL6_d.js";import"./floatRGBA-x5Bw29n3.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-CVEZQhU2.js";import"./ShaderBuilder-RfmQ5J-P.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-DnD9638_.js";import"./CircularArray-CujHzHWW.js";import"./featureReductionUtils-Caulfaw_.js";import"./heatmapUtils-DlrBPcEI.js";import"./vec42-CKs01hkn.js";import"./vec4f64-o2zAXfmz.js";import"./SDFHelper-DjIX08tC.js";import"./parquet-CYNlq3_J.js";import"./displayFilterUtils-Cf14xMc5.js";import"./FeatureEffect-bhJkEZQ2.js";import"./jsonUtils-B9xb3bBZ.js";import"./floorFilterUtils-DKzVzLpH.js";import"./popupUtils-BaebK0RC.js";import"./LayerView-BISLG8aK.js";import"./RefreshableLayerView-DPj8OmGz.js";const v=t=>{let e=class extends t{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}disconnect(){this._doDisconnect()}connect(){this._doConnect()}clear(){this._doClear()}constructor(...r){super(...r),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return(this._isUserPaused||this.suspended)&&this._streamConnectionStatus==="connected"?"paused":this._streamConnectionStatus}_onSuspendedChange(r){r?this._doPause():this._isUserPaused||this._doResume()}};return i([n()],e.prototype,"_isUserPaused",void 0),i([n({readOnly:!0})],e.prototype,"connectionStatus",null),i([n({type:f})],e.prototype,"filter",void 0),e=i([c("esri.views.layers.StreamLayerView")],e),e};let s=class extends v(g){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null}initialize(){this.addHandles([a(()=>this.layer.customParameters,async t=>{(await this.getWorker()).streamMessenger.updateCustomParameters(t)}),this.layer.on("send-message-to-socket",async t=>{(await this.getWorker()).streamMessenger.sendMessageToSocket(t)}),this.layer.on("send-message-to-client",async t=>{(await this.getWorker()).streamMessenger.sendMessageToClient(t),this._isUserPaused&&"type"in t&&t.type==="clear"&&this.incrementSourceRefreshVersion()}),a(()=>this.layer.purgeOptions,()=>this._update()),a(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor"),this._doResume()}destroy(){this._doPause()}get connectionError(){return this.pipelineErrorString?new d("stream-controller",this.pipelineErrorString):null}on(t,e){if(Array.isArray(t))return h(t.map(o=>this.on(o,e)));const r=["data-received","message-received"].includes(t);r&&this.getWorker().then(o=>o.streamMessenger.enableEvent(t,!0));const m=super.on(t,e),p=this;return l(()=>{m.remove(),r&&(p._workerProxy.closed||p.hasEventListener(t)||p.getWorker().then(o=>o.streamMessenger.enableEvent(t,!1)))})}async queryLatestObservations(t,e){if(!(this.layer.timeInfo?.endField||this.layer.timeInfo?.startField||this.layer.timeInfo?.trackIdField))throw new d("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");const r=await this.getWorker();return _(r.features.executeQueryForLatestObservations(this._cleanUpQuery(t),e).then(m=>{const p=u.fromJSON(m);return p.features.forEach(o=>{o.layer=this.layer,o.sourceLayer=this.layer}),p}),new u({features:[]}))}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}async queryObjectIds(t,e){return(await super.queryObjectIds(t,e)).filter(y)}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){this._refreshInterval!=null&&(clearInterval(this._refreshInterval),this._refreshInterval=null)}_doResume(){this._refreshInterval=setInterval(()=>this.incrementSourceRefreshVersion(),this.layer.updateInterval)}_doDisconnect(){this.getWorker().then(t=>t.streamMessenger.disconnect()),this._doPause()}_doConnect(){this.getWorker().then(t=>t.streamMessenger.connect()),this.resume()}_doClear(){this.getWorker().then(t=>t.streamMessenger.clear()),this._refreshInterval==null&&this.incrementSourceRefreshVersion()}_createClientOptions(){const t=super._createClientOptions(),e=this;return{...t,get container(){return e.featureContainer},setProperty:r=>{this.set(r.propertyName,r.value)}}}};i([n()],s.prototype,"pipelineConnectionStatus",void 0),i([n()],s.prototype,"pipelineErrorString",void 0),i([n({readOnly:!0})],s.prototype,"connectionError",null),i([n({readOnly:!0})],s.prototype,"_streamConnectionStatus",null),s=i([c("esri.views.2d.layers.StreamLayerView2D")],s);const ze=s;export{ze as default};
