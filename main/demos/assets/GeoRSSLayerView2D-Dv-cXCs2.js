import{a6 as l,dt as h,V as g,du as f,v as w,J as d}from"./main--9kI-57S.js";import{p as n}from"./SimpleRenderer-DO73pRBi.js";import{fromJSON as u}from"./jsonUtils-CCUkLZvt.js";import{d as S}from"./FeatureSet-BhrUnEg_.js";import{S as V}from"./LayerView2D-CsDT183E.js";import{t as b}from"./GraphicContainer-Ciyc3GtW.js";import{A as _}from"./GraphicsView2D-8KsJIocN.js";import{y as T}from"./LayerView-BISLG8aK.js";import"./preload-helper-ExcqyqRp.js";import"./commonProperties-BvC2GHau.js";import"./colorRamps-CJJFORDN.js";import"./ColorStop-o3BegBOS.js";import"./visualVariableUtils-C5z7YlPb.js";import"./lengthUtils-t0RFrRRR.js";import"./typeUtils-Mf5HQrPQ.js";import"./ClassBreaksRenderer-CJLTZEtA.js";import"./RendererLegendOptions-CBhH9xwn.js";import"./LRUCache-C4ETpwYD.js";import"./MemCache-BMxPktvE.js";import"./Version-3VEjIB5x.js";import"./FieldsIndex-1YvCqlQI.js";import"./timeZoneUtils-CRyZ7C5H.js";import"./utils-BRg6PM3S.js";import"./defaultCIMValues-DII_GG3u.js";import"./enums-BJSSbDkD.js";import"./heatmapUtils-DlrBPcEI.js";import"./vec42-CKs01hkn.js";import"./common-DQOJ18NT.js";import"./vec4f64-o2zAXfmz.js";import"./UniqueValueRenderer-B4ciwr1H.js";import"./diffUtils-E3Zy5FJ9.js";import"./styleUtils-DRLQlNHK.js";import"./Field-CbtVK39K.js";import"./fieldType-D9-MKAzf.js";import"./utils-BQBvadb7.js";import"./Container-S2LTM9Qz.js";import"./MapView-lOxwLlWz.js";import"./globalCss-CaymBRPv.js";import"./Queue-C03o9OMu.js";import"./signal-BpaFLAmX.js";import"./CollectionFlattener-CtYCQH6r.js";import"./workers-CxFC35HG.js";import"./intl-Cc325E6l.js";import"./projection-Dy2GAVnS.js";import"./TileInfo-HtLUmSZ_.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-C2RFNYCp.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-Da0U7ixU.js";import"./Map-CpM7uL_J.js";import"./Basemap-Djt1-Qpl.js";import"./loadAll-C6eMuRwx.js";import"./PortalItem-DNJSQBuR.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-CN5YPmFJ.js";import"./Layer-lQsarWeE.js";import"./TimeExtent-Cj1IsTRx.js";import"./GraphicsCollection-Dipxk08l.js";import"./HeightModelInfo-CtAbT4RX.js";import"./ReactiveMap-DAvwxLgh.js";import"./Query-s4OWgzp8.js";import"./IViewEvents-Bci6PjlS.js";import"./HighlightDefaults-DDxgLCJY.js";import"./a11yUtils-DZtIPDIo.js";import"./heightModelInfoUtils-VUXjmkq1.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2-maR1OrZI.js";import"./vec2f64-DohEyf3f.js";import"./mat2d-D9DBP-jx.js";import"./normalizeUtils-CBogaMwU.js";import"./utils-DIMA5Iam.js";import"./utils-UJhLC6dM.js";import"./mat2df32-orApM5a3.js";import"./mat3-CruJiiUv.js";import"./vec2f32-BbH2jxlN.js";import"./Scheduler-z6WQlRQx.js";import"./vec32-DasYFCNI.js";import"./unitBezier-B1N-tmtC.js";import"./Tile-DufRzora.js";import"./quickselect-QQC62dOK.js";import"./definitions-CPtb4TQS.js";import"./enums-Dk3osxpS.js";import"./Texture-BSeF64eo.js";import"./getDataTypeBytes-DflDeYgv.js";import"./imageUtils-B82ta9Tl.js";import"./themeUtils-C3zvZbsE.js";import"./ColorBackground-CZ8aZ7p1.js";import"./EffectView-DpOBKYUj.js";import"./parser-CFGL7rcI.js";import"./layerViewUtils-DBgkbNRC.js";import"./AGraphicContainer-Db0deKAA.js";import"./TechniqueInstance-BHftlaU7.js";import"./UpdateTracking2D-C7VmLSmR.js";import"./dataViewUtils-CecS6Adw.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BoundingBox-CnpCxTZE.js";import"./FramebufferObject-ix_aj_q0.js";import"./VertexArrayObject-DSdJE851.js";import"./memoryEstimations-nGMt6ZDA.js";import"./TileContainer-BjojR960.js";import"./WGLContainer-DauwtFT3.js";import"./ProgramTemplate-BX_JbxGB.js";import"./vec3f32-nZdmKIgz.js";import"./config-DoMhnbNN.js";import"./earcut-Lltz9D9k.js";import"./featureConversionUtils-DPNJV2qn.js";import"./OptimizedFeatureSet-D4QWwRWE.js";import"./OptimizedGeometry-COuSzxCi.js";import"./FeatureCommandQueue-DqyrigBf.js";import"./CIMSymbolHelper-DSPuVoRS.js";import"./BidiEngine-DNnuvc1i.js";import"./fontUtils-BmYI-3bD.js";import"./Rect-CJ0LkIsC.js";import"./rasterizingUtils-BSfPL6_d.js";import"./floatRGBA-x5Bw29n3.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-CVEZQhU2.js";import"./ShaderBuilder-RfmQ5J-P.js";import"./BindType-BBwFZqyN.js";import"./QueueProcessor-DnD9638_.js";import"./OverrideHelper-BN2dhWVs.js";import"./colorUtils-gCPoc3uQ.js";import"./callExpressionWithFeature-7JAqLcAL.js";import"./quantizationUtils-VBqF-6pV.js";import"./FeatureMetadata-4KDV7PpT.js";import"./queryUtils-CJKPhWNf.js";import"./json-Wa8cmqdu.js";import"./timeSupport-DMcItRW_.js";import"./TimeOnly-Ckh5eKoS.js";import"./labelUtils-DxssOj9N.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-BG9r0Wql.js";import"./dehydratedFeatures-Bi1L6Rwz.js";let y=class extends V(T){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(t,o){if(!this.graphicsViews.length)return null;const p=this.layer;return this.graphicsViews.reverse().flatMap(r=>{const i=this._popupTemplates.get(r),e=r.hitTest(t);for(const m of e)m.layer=p,m.sourceLayer=p,m.popupTemplate=i;return e}).map(r=>({type:"graphic",graphic:r,layer:p,mapPoint:t}))}update(t){if(this.graphicsViews)for(const o of this.graphicsViews)o.processUpdate(t)}attach(){this.addAttachHandles([l(()=>this.layer?.featureCollections,t=>{this._clear();for(const{popupInfo:o,featureSet:p,layerDefinition:r}of t){const i=S.fromJSON(p),e=new g(i.features),m=r.drawingInfo,c=o?f.fromJSON(o):null,s=u(m.renderer),a=new _({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:e,renderer:s,container:new b(this.view.featuresTilingScheme)});this._graphicsViewMap[i.geometryType]=a,this._popupTemplates.set(a,c),i.geometryType!=="polygon"||this.layer.polygonSymbol?i.geometryType!=="polyline"||this.layer.lineSymbol?i.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=s.symbol):this.layer.lineSymbol=s.symbol:this.layer.polygonSymbol=s.symbol,this.graphicsViews.push(a),this.container.addChild(a.container)}},h),l(()=>this.layer?.polygonSymbol,t=>{this._graphicsViewMap.polygon.renderer=new n({symbol:t})},h),l(()=>this.layer?.lineSymbol,t=>{this._graphicsViewMap.polyline.renderer=new n({symbol:t})},h),l(()=>this.layer?.pointSymbol,t=>{this._graphicsViewMap.point.renderer=new n({symbol:t})},h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const t of this.graphicsViews)t.viewChange()}_clear(){this.container.removeAllChildren();for(const t of this.graphicsViews)t.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=w([d("esri.views.2d.layers.GeoRSSLayerView2D")],y);const Qi=y;export{Qi as default};
