import{q as r,u as o,C as a,V as m}from"./main-Ctl4EMXy.js";import{j as s,y as n}from"./LayerView-DmhToCEu.js";import"./preload-helper-ExcqyqRp.js";import"./Container-CxSZydS1.js";import"./MapView-DoFCz_rC.js";import"./Cyclical-BCs38HwJ.js";import"./CollectionFlattener-Ddej6x6P.js";import"./workers-CdaFG51v.js";import"./projection-CNfRewMx.js";import"./projectBuffer-CPsiSn2k.js";import"./TileInfo-DSvLvbvh.js";import"./TileKey-DZd6gJy7.js";import"./themeUtils-Blw48_6u.js";import"./uuid-Cl5lrJ4c.js";import"./UpdatingHandles-CbuiEnvy.js";import"./signal-D135S4bB.js";import"./Map-BNNaOnp3.js";import"./Basemap-Bqo_wP37.js";import"./loadAll-dxX_Q7n1.js";import"./PortalItem-DDnd-vVe.js";import"./writeUtils-Dcu5ufJs.js";import"./compilerUtils-B-M261Vs.js";import"./mat4f32-DcsiF_Rp.js";import"./mat4-CnTqlNWw.js";import"./common-DQOJ18NT.js";import"./TablesMixin-BJgxLO4n.js";import"./Layer-85_I8JIl.js";import"./TimeExtent-Byd_oZOw.js";import"./GraphicsCollection-C2QuF37o.js";import"./HeightModelInfo-CerOuX2f.js";import"./ReactiveMap-C84eCiB4.js";import"./Query-D3rSiv7W.js";import"./Field-C3c_0Ua4.js";import"./fieldType-CJM5fxdG.js";import"./arcgisLayerUrl-B7JQPZqp.js";import"./ViewingMode-HRfKv6NR.js";import"./vec2f64-B7N_6o8F.js";import"./vec2-DGVIkCvT.js";import"./Tile-DfnuaItl.js";import"./TileKey-CJcBj2jX.js";import"./QueueProcessor-4xHJmCv7.js";import"./quickselect-QQC62dOK.js";import"./normalizeUtils-FfpQUX3n.js";import"./normalizeUtilsCommon-CpcJuWZ5.js";import"./utils-TkCdIJc2.js";import"./utils-BMOCpsi7.js";import"./mat3-XZDRtl20.js";import"./vec2f32-BbH2jxlN.js";import"./unitBezier-BX6NeAEr.js";import"./Scheduler-BfUsb_ta.js";import"./vec32-D42gzSsd.js";import"./definitions-C0Jy3zs7.js";import"./enums-Dk3osxpS.js";import"./Texture-CaS68t37.js";import"./imageUtils-BDrS0Sxa.js";import"./capabilities-A2uoe7dc.js";import"./Version-D9CdICUU.js";import"./ColorBackground-Qpg3DhTs.js";import"./parser-DBiFYn6E.js";import"./layerViewUtils-tJ45e1q7.js";const l=e=>{let t=class extends e{constructor(...i){super(...i),this.layerViews=new m}get dynamicGroupLayerView(){return this.layerViews.find(i=>i.layer===this.layer?.dynamicGroupLayer)}get footprintLayerView(){return this.layerViews.find(i=>i.layer===this.layer?.footprintLayer)}isUpdating(){return!this.dynamicGroupLayerView||!this.footprintLayerView||this.dynamicGroupLayerView.updating||this.footprintLayerView.updating}};return r([o()],t.prototype,"layer",void 0),r([o()],t.prototype,"layerViews",void 0),r([o({readOnly:!0})],t.prototype,"dynamicGroupLayerView",null),r([o({readOnly:!0})],t.prototype,"footprintLayerView",null),t=r([a("esri.views.layers.CatalogLayerView")],t),t};let p=class extends l(s(n)){constructor(){super(...arguments),this.layerViews=new m}update(e){}viewChange(){}moveEnd(){}attach(){this.addAttachHandles([this._updatingHandles.addOnCollectionChange(()=>this.layerViews,()=>this._updateStageChildren(),{initial:!0})])}detach(){this.container.removeAllChildren()}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((e,t)=>this.container.addChildAt(e.container,t))}};r([o()],p.prototype,"layerViews",void 0),p=r([a("esri.views.2d.layers.CatalogLayerView2D")],p);const Vt=p;export{Vt as default};
